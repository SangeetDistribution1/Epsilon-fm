// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type {
	GetApiV2AlbumByUuidByUuidData,
	GetApiV2AlbumByUuidByUuidError,
	GetApiV2AlbumByUuidByUuidResponse,
	GetApiV2AlbumBySlugBySlugData,
	GetApiV2AlbumBySlugBySlugError,
	GetApiV2AlbumBySlugBySlugResponse,
	GetApiV215AlbumBySlugBySlugData,
	GetApiV215AlbumBySlugBySlugError,
	GetApiV215AlbumBySlugBySlugResponse,
	GetApiV2AlbumByUpcByUpcData,
	GetApiV2AlbumByUpcByUpcError,
	GetApiV2AlbumByUpcByUpcResponse,
	GetApiV215AlbumByUpcByUpcData,
	GetApiV215AlbumByUpcByUpcError,
	GetApiV215AlbumByUpcByUpcResponse,
	GetApiV226AlbumByUpcByUpcData,
	GetApiV226AlbumByUpcByUpcError,
	GetApiV226AlbumByUpcByUpcResponse,
	GetApiV2AlbumByPlatformByPlatformByIdentifierData,
	GetApiV2AlbumByPlatformByPlatformByIdentifierError,
	GetApiV2AlbumByPlatformByPlatformByIdentifierResponse,
	GetApiV215AlbumByPlatformByPlatformByIdentifierData,
	GetApiV215AlbumByPlatformByPlatformByIdentifierError,
	GetApiV215AlbumByPlatformByPlatformByIdentifierResponse,
	GetApiV226AlbumByPlatformByPlatformByIdentifierData,
	GetApiV226AlbumByPlatformByPlatformByIdentifierError,
	GetApiV226AlbumByPlatformByPlatformByIdentifierResponse,
	GetApiV226AlbumByUuidIdentifiersData,
	GetApiV226AlbumByUuidIdentifiersError,
	GetApiV226AlbumByUuidIdentifiersResponse,
	GetApiV2AlbumBySlugIdentifiersData,
	GetApiV2AlbumBySlugIdentifiersError,
	GetApiV2AlbumBySlugIdentifiersResponse,
	GetApiV226AlbumByUuidTracksData,
	GetApiV226AlbumByUuidTracksError,
	GetApiV226AlbumByUuidTracksResponse,
	GetApiV2AlbumBySlugTracksData,
	GetApiV2AlbumBySlugTracksError,
	GetApiV2AlbumBySlugTracksResponse,
	GetApiV226AlbumByUuidChartsRanksByPlatformData,
	GetApiV226AlbumByUuidChartsRanksByPlatformError,
	GetApiV226AlbumByUuidChartsRanksByPlatformResponse,
	GetApiV2AlbumBySlugChartsRanksByPlatformData,
	GetApiV2AlbumBySlugChartsRanksByPlatformError,
	GetApiV2AlbumBySlugChartsRanksByPlatformResponse,
	GetApiV2ArtistByUuidData,
	GetApiV2ArtistByUuidError,
	GetApiV2ArtistByUuidResponse,
	GetApiV29ArtistByUuidData,
	GetApiV29ArtistByUuidError,
	GetApiV29ArtistByUuidResponse,
	GetApiV2ArtistByPlatformByPlatformByIdentifierData,
	GetApiV2ArtistByPlatformByPlatformByIdentifierError,
	GetApiV2ArtistByPlatformByPlatformByIdentifierResponse,
	GetApiV29ArtistByPlatformByPlatformByIdentifierData,
	GetApiV29ArtistByPlatformByPlatformByIdentifierError,
	GetApiV29ArtistByPlatformByPlatformByIdentifierResponse,
	GetApiV2ArtistByCountryByCountryCodeData,
	GetApiV2ArtistByCountryByCountryCodeError,
	GetApiV2ArtistByCountryByCountryCodeResponse,
	GetApiV2ArtistByUuidIdentifiersData,
	GetApiV2ArtistByUuidIdentifiersError,
	GetApiV2ArtistByUuidIdentifiersResponse,
	GetApiV2ArtistByUuidSongsData,
	GetApiV2ArtistByUuidSongsError,
	GetApiV2ArtistByUuidSongsResponse,
	GetApiV221ArtistByUuidSongsData,
	GetApiV221ArtistByUuidSongsError,
	GetApiV221ArtistByUuidSongsResponse,
	GetApiV2ArtistByUuidAlbumsData,
	GetApiV2ArtistByUuidAlbumsError,
	GetApiV2ArtistByUuidAlbumsResponse,
	GetApiV218ArtistByUuidAlbumsData,
	GetApiV218ArtistByUuidAlbumsError,
	GetApiV218ArtistByUuidAlbumsResponse,
	GetApiV226ArtistByUuidAlbumsData,
	GetApiV226ArtistByUuidAlbumsError,
	GetApiV226ArtistByUuidAlbumsResponse,
	GetApiV234ArtistByUuidAlbumsData,
	GetApiV234ArtistByUuidAlbumsError,
	GetApiV234ArtistByUuidAlbumsResponse,
	GetApiV2ArtistByUuidRelatedData,
	GetApiV2ArtistByUuidRelatedError,
	GetApiV2ArtistByUuidRelatedResponse,
	GetApiV2ArtistByUuidAudienceByPlatformData,
	GetApiV2ArtistByUuidAudienceByPlatformError,
	GetApiV2ArtistByUuidAudienceByPlatformResponse,
	GetApiV2ArtistByUuidSocialByPlatformFollowersByYearByMonthData,
	GetApiV2ArtistByUuidSocialByPlatformFollowersByYearByMonthError,
	GetApiV2ArtistByUuidSocialByPlatformFollowersByYearByMonthResponse,
	GetApiV2ArtistByUuidSocialByPlatformData,
	GetApiV2ArtistByUuidSocialByPlatformError,
	GetApiV2ArtistByUuidSocialByPlatformResponse,
	GetApiV2ArtistByUuidStreamingByPlatformListeningData,
	GetApiV2ArtistByUuidStreamingByPlatformListeningError,
	GetApiV2ArtistByUuidStreamingByPlatformListeningResponse,
	GetApiV2ArtistByUuidStreamingSpotifyListenersData,
	GetApiV2ArtistByUuidStreamingSpotifyListenersError,
	GetApiV2ArtistByUuidStreamingSpotifyListenersResponse,
	GetApiV2ArtistByUuidStreamingSpotifyListenersByYearByMonthData,
	GetApiV2ArtistByUuidStreamingSpotifyListenersByYearByMonthError,
	GetApiV2ArtistByUuidStreamingSpotifyListenersByYearByMonthResponse,
	GetApiV2ArtistByUuidStreamingYoutubeViewsData,
	GetApiV2ArtistByUuidStreamingYoutubeViewsError,
	GetApiV2ArtistByUuidStreamingYoutubeViewsResponse,
	GetApiV2ArtistByUuidStreamingYoutubeViewsByYearByMonthData,
	GetApiV2ArtistByUuidStreamingYoutubeViewsByYearByMonthError,
	GetApiV2ArtistByUuidStreamingYoutubeViewsByYearByMonthResponse,
	GetApiV2ArtistByUuidByPlatformRetentionData,
	GetApiV2ArtistByUuidByPlatformRetentionError,
	GetApiV2ArtistByUuidByPlatformRetentionResponse,
	GetApiV2ArtistByUuidSpotifyPopularityData,
	GetApiV2ArtistByUuidSpotifyPopularityError,
	GetApiV2ArtistByUuidSpotifyPopularityResponse,
	GetApiV2ArtistByUuidAudienceByPlatformReportLatestData,
	GetApiV2ArtistByUuidAudienceByPlatformReportLatestError,
	GetApiV2ArtistByUuidAudienceByPlatformReportLatestResponse,
	GetApiV2ArtistByUuidAudienceByPlatformReportAvailableDatesData,
	GetApiV2ArtistByUuidAudienceByPlatformReportAvailableDatesError,
	GetApiV2ArtistByUuidAudienceByPlatformReportAvailableDatesResponse,
	GetApiV2ArtistByUuidAudienceByPlatformReportByDateData,
	GetApiV2ArtistByUuidAudienceByPlatformReportByDateError,
	GetApiV2ArtistByUuidAudienceByPlatformReportByDateResponse,
	GetApiV2ArtistByUuidChartsSongRanksByPlatformData,
	GetApiV2ArtistByUuidChartsSongRanksByPlatformError,
	GetApiV2ArtistByUuidChartsSongRanksByPlatformResponse,
	GetApiV2ArtistByUuidChartsAlbumRanksByPlatformData,
	GetApiV2ArtistByUuidChartsAlbumRanksByPlatformError,
	GetApiV2ArtistByUuidChartsAlbumRanksByPlatformResponse,
	GetApiV228ArtistByUuidChartsAlbumRanksByPlatformData,
	GetApiV228ArtistByUuidChartsAlbumRanksByPlatformError,
	GetApiV228ArtistByUuidChartsAlbumRanksByPlatformResponse,
	GetApiV2ArtistByUuidPlaylistCurrentByPlatformData,
	GetApiV2ArtistByUuidPlaylistCurrentByPlatformError,
	GetApiV2ArtistByUuidPlaylistCurrentByPlatformResponse,
	GetApiV220ArtistByUuidPlaylistCurrentByPlatformData,
	GetApiV220ArtistByUuidPlaylistCurrentByPlatformError,
	GetApiV220ArtistByUuidPlaylistCurrentByPlatformResponse,
	GetApiV2ArtistByUuidBroadcastsData,
	GetApiV2ArtistByUuidBroadcastsError,
	GetApiV2ArtistByUuidBroadcastsResponse,
	GetApiV2ArtistByUuidSongkickEventsData,
	GetApiV2ArtistByUuidSongkickEventsError,
	GetApiV2ArtistByUuidSongkickEventsResponse,
	GetApiV219ArtistByUuidSongkickEventsData,
	GetApiV219ArtistByUuidSongkickEventsError,
	GetApiV219ArtistByUuidSongkickEventsResponse,
	PostApiV2ArtistByUuidSourcesAddData,
	PostApiV2ArtistByUuidSourcesAddError,
	PostApiV2ArtistByUuidSourcesAddResponse,
	GetApiV2TopArtistByPlatformByMetricTypeData,
	GetApiV2TopArtistByPlatformByMetricTypeError,
	GetApiV2TopArtistByPlatformByMetricTypeResponse,
	GetApiV2TopArtistCountryByCountryCodeByPlatformByMetricTypeData,
	GetApiV2TopArtistCountryByCountryCodeByPlatformByMetricTypeError,
	GetApiV2TopArtistCountryByCountryCodeByPlatformByMetricTypeResponse,
	GetApiV2TopArtistCityByCityKeyByPlatformByMetricTypeData,
	GetApiV2TopArtistCityByCityKeyByPlatformByMetricTypeError,
	GetApiV2TopArtistCityByCityKeyByPlatformByMetricTypeResponse,
	GetApiV2TopSongByPlatformByMetricTypeData,
	GetApiV2TopSongByPlatformByMetricTypeError,
	GetApiV2TopSongByPlatformByMetricTypeResponse,
	GetApiV2TopRadioByPlatformByMetricTypeData,
	GetApiV2TopRadioByPlatformByMetricTypeError,
	GetApiV2TopRadioByPlatformByMetricTypeResponse,
	GetApiV2ChartSongByPlatformByPlatformData,
	GetApiV2ChartSongByPlatformByPlatformError,
	GetApiV2ChartSongByPlatformByPlatformResponse,
	GetApiV2ChartSongBySlugRankingLatestData,
	GetApiV2ChartSongBySlugRankingLatestError,
	GetApiV2ChartSongBySlugRankingLatestResponse,
	GetApiV214ChartSongBySlugRankingLatestData,
	GetApiV214ChartSongBySlugRankingLatestError,
	GetApiV214ChartSongBySlugRankingLatestResponse,
	GetApiV2ChartSongBySlugAvailableRankingsData,
	GetApiV2ChartSongBySlugAvailableRankingsError,
	GetApiV2ChartSongBySlugAvailableRankingsResponse,
	GetApiV2ChartSongBySlugRankingByDatetimeData,
	GetApiV2ChartSongBySlugRankingByDatetimeError,
	GetApiV2ChartSongBySlugRankingByDatetimeResponse,
	GetApiV214ChartSongBySlugRankingByDatetimeData,
	GetApiV214ChartSongBySlugRankingByDatetimeError,
	GetApiV214ChartSongBySlugRankingByDatetimeResponse,
	GetApiV2ChartAlbumByPlatformByPlatformData,
	GetApiV2ChartAlbumByPlatformByPlatformError,
	GetApiV2ChartAlbumByPlatformByPlatformResponse,
	GetApiV2ChartAlbumBySlugRankingLatestData,
	GetApiV2ChartAlbumBySlugRankingLatestError,
	GetApiV2ChartAlbumBySlugRankingLatestResponse,
	GetApiV226ChartAlbumBySlugRankingLatestData,
	GetApiV226ChartAlbumBySlugRankingLatestError,
	GetApiV226ChartAlbumBySlugRankingLatestResponse,
	GetApiV2ChartAlbumBySlugAvailableRankingsData,
	GetApiV2ChartAlbumBySlugAvailableRankingsError,
	GetApiV2ChartAlbumBySlugAvailableRankingsResponse,
	GetApiV2ChartAlbumBySlugRankingByDatetimeData,
	GetApiV2ChartAlbumBySlugRankingByDatetimeError,
	GetApiV2ChartAlbumBySlugRankingByDatetimeResponse,
	GetApiV226ChartAlbumBySlugRankingByDatetimeData,
	GetApiV226ChartAlbumBySlugRankingByDatetimeError,
	GetApiV226ChartAlbumBySlugRankingByDatetimeResponse,
	GetApiV2ChartTiktokMusicWeeklyRankingLatestData,
	GetApiV2ChartTiktokMusicWeeklyRankingLatestError,
	GetApiV2ChartTiktokMusicWeeklyRankingLatestResponse,
	GetApiV2ChartTiktokMusicWeeklyAvailableRankingsData,
	GetApiV2ChartTiktokMusicWeeklyAvailableRankingsError,
	GetApiV2ChartTiktokMusicWeeklyAvailableRankingsResponse,
	GetApiV2ChartTiktokMusicWeeklyRankingByDatetimeData,
	GetApiV2ChartTiktokMusicWeeklyRankingByDatetimeError,
	GetApiV2ChartTiktokMusicWeeklyRankingByDatetimeResponse,
	GetApiV2LibraryArtistData,
	GetApiV2LibraryArtistError,
	GetApiV2LibraryArtistResponse,
	PostApiV2LibraryArtistData,
	PostApiV2LibraryArtistError,
	PostApiV2LibraryArtistResponse,
	DeleteApiV2LibraryArtistData,
	DeleteApiV2LibraryArtistError,
	DeleteApiV2LibraryArtistResponse,
	GetApiV2LibrarySongData,
	GetApiV2LibrarySongError,
	GetApiV2LibrarySongResponse,
	PostApiV2LibrarySongData,
	PostApiV2LibrarySongError,
	PostApiV2LibrarySongResponse,
	DeleteApiV2LibrarySongData,
	DeleteApiV2LibrarySongError,
	DeleteApiV2LibrarySongResponse,
	GetApiV2PlaylistByUuidData,
	GetApiV2PlaylistByUuidError,
	GetApiV2PlaylistByUuidResponse,
	GetApiV28PlaylistByUuidData,
	GetApiV28PlaylistByUuidError,
	GetApiV28PlaylistByUuidResponse,
	GetApiV2PlaylistByPlatformByPlatformByIdentifierData,
	GetApiV2PlaylistByPlatformByPlatformByIdentifierError,
	GetApiV2PlaylistByPlatformByPlatformByIdentifierResponse,
	GetApiV28PlaylistByPlatformByPlatformByIdentifierData,
	GetApiV28PlaylistByPlatformByPlatformByIdentifierError,
	GetApiV28PlaylistByPlatformByPlatformByIdentifierResponse,
	GetApiV2PlaylistCuratorsByPlatformData,
	GetApiV2PlaylistCuratorsByPlatformError,
	GetApiV2PlaylistCuratorsByPlatformResponse,
	GetApiV2PlaylistByCuratorByPlatformByCuratorIdentifierData,
	GetApiV2PlaylistByCuratorByPlatformByCuratorIdentifierError,
	GetApiV2PlaylistByCuratorByPlatformByCuratorIdentifierResponse,
	GetApiV220PlaylistByCuratorByPlatformByCuratorIdentifierData,
	GetApiV220PlaylistByCuratorByPlatformByCuratorIdentifierError,
	GetApiV220PlaylistByCuratorByPlatformByCuratorIdentifierResponse,
	GetApiV2PlaylistByTypeByPlatformByTypeData,
	GetApiV2PlaylistByTypeByPlatformByTypeError,
	GetApiV2PlaylistByTypeByPlatformByTypeResponse,
	GetApiV2PlaylistByUuidAudienceData,
	GetApiV2PlaylistByUuidAudienceError,
	GetApiV2PlaylistByUuidAudienceResponse,
	GetApiV220PlaylistByUuidAudienceData,
	GetApiV220PlaylistByUuidAudienceError,
	GetApiV220PlaylistByUuidAudienceResponse,
	GetApiV220PlaylistByTypeByPlatformByTypeData,
	GetApiV220PlaylistByTypeByPlatformByTypeError,
	GetApiV220PlaylistByTypeByPlatformByTypeResponse,
	GetApiV2PlaylistByUuidTracksLatestData,
	GetApiV2PlaylistByUuidTracksLatestError,
	GetApiV2PlaylistByUuidTracksLatestResponse,
	GetApiV220PlaylistByUuidTracksLatestData,
	GetApiV220PlaylistByUuidTracksLatestError,
	GetApiV220PlaylistByUuidTracksLatestResponse,
	GetApiV2PlaylistByUuidAvailableTracklistingsData,
	GetApiV2PlaylistByUuidAvailableTracklistingsError,
	GetApiV2PlaylistByUuidAvailableTracklistingsResponse,
	GetApiV220PlaylistByUuidAvailableTracklistingsData,
	GetApiV220PlaylistByUuidAvailableTracklistingsError,
	GetApiV220PlaylistByUuidAvailableTracklistingsResponse,
	GetApiV2PlaylistByUuidTracksByDatetimeData,
	GetApiV2PlaylistByUuidTracksByDatetimeError,
	GetApiV2PlaylistByUuidTracksByDatetimeResponse,
	GetApiV220PlaylistByUuidTracksByDatetimeData,
	GetApiV220PlaylistByUuidTracksByDatetimeError,
	GetApiV220PlaylistByUuidTracksByDatetimeResponse,
	GetApiV2RadioData,
	GetApiV2RadioError,
	GetApiV2RadioResponse,
	GetApiV218RadioData,
	GetApiV218RadioError,
	GetApiV218RadioResponse,
	GetApiV222RadioData,
	GetApiV222RadioError,
	GetApiV222RadioResponse,
	GetApiV2RadioByCountryByCountryCodeData,
	GetApiV2RadioByCountryByCountryCodeError,
	GetApiV2RadioByCountryByCountryCodeResponse,
	GetApiV218RadioByCountryByCountryCodeData,
	GetApiV218RadioByCountryByCountryCodeError,
	GetApiV218RadioByCountryByCountryCodeResponse,
	GetApiV222RadioByCountryByCountryCodeData,
	GetApiV222RadioByCountryByCountryCodeError,
	GetApiV222RadioByCountryByCountryCodeResponse,
	GetApiV2RadioBySlugLiveFeedData,
	GetApiV2RadioBySlugLiveFeedError,
	GetApiV2RadioBySlugLiveFeedResponse,
	GetApiV2ReferentialPlatformsError,
	GetApiV2ReferentialPlatformsResponse,
	GetApiV2ReferentialPlatformsSocialError,
	GetApiV2ReferentialPlatformsSocialResponse,
	GetApiV2ReferentialPlatformsStreamingError,
	GetApiV2ReferentialPlatformsStreamingResponse,
	GetApiV2ChartSongPlatformsError,
	GetApiV2ChartSongPlatformsResponse,
	GetApiV2ChartAlbumPlatformsError,
	GetApiV2ChartAlbumPlatformsResponse,
	GetApiV2PlaylistPlatformsError,
	GetApiV2PlaylistPlatformsResponse,
	GetApiV2RadioCountriesData,
	GetApiV2RadioCountriesError,
	GetApiV2RadioCountriesResponse,
	GetApiV2TopArtistReferentialCitiesByCountryCodeData,
	GetApiV2TopArtistReferentialCitiesByCountryCodeError,
	GetApiV2TopArtistReferentialCitiesByCountryCodeResponse,
	GetApiV2ArtistSearchByTermData,
	GetApiV2ArtistSearchByTermError,
	GetApiV2ArtistSearchByTermResponse,
	GetApiV2SongSearchByTermData,
	GetApiV2SongSearchByTermError,
	GetApiV2SongSearchByTermResponse,
	GetApiV2PlaylistSearchByTermData,
	GetApiV2PlaylistSearchByTermError,
	GetApiV2PlaylistSearchByTermResponse,
	GetApiV2SearchExternalUrlData,
	GetApiV2SearchExternalUrlError,
	GetApiV2SearchExternalUrlResponse,
	GetApiV2SongByUuidData,
	GetApiV2SongByUuidError,
	GetApiV2SongByUuidResponse,
	GetApiV28SongByUuidData,
	GetApiV28SongByUuidError,
	GetApiV28SongByUuidResponse,
	GetApiV225SongByUuidData,
	GetApiV225SongByUuidError,
	GetApiV225SongByUuidResponse,
	GetApiV2SongByIsrcByIsrcData,
	GetApiV2SongByIsrcByIsrcError,
	GetApiV2SongByIsrcByIsrcResponse,
	GetApiV28SongByIsrcByIsrcData,
	GetApiV28SongByIsrcByIsrcError,
	GetApiV28SongByIsrcByIsrcResponse,
	GetApiV225SongByIsrcByIsrcData,
	GetApiV225SongByIsrcByIsrcError,
	GetApiV225SongByIsrcByIsrcResponse,
	GetApiV2SongByPlatformByPlatformByIdentifierData,
	GetApiV2SongByPlatformByPlatformByIdentifierError,
	GetApiV2SongByPlatformByPlatformByIdentifierResponse,
	GetApiV28SongByPlatformByPlatformByIdentifierData,
	GetApiV28SongByPlatformByPlatformByIdentifierError,
	GetApiV28SongByPlatformByPlatformByIdentifierResponse,
	GetApiV225SongByPlatformByPlatformByIdentifierData,
	GetApiV225SongByPlatformByPlatformByIdentifierError,
	GetApiV225SongByPlatformByPlatformByIdentifierResponse,
	GetApiV2SongByUuidIdentifiersData,
	GetApiV2SongByUuidIdentifiersError,
	GetApiV2SongByUuidIdentifiersResponse,
	GetApiV2SongByUuidAlbumsData,
	GetApiV2SongByUuidAlbumsError,
	GetApiV2SongByUuidAlbumsResponse,
	GetApiV2SongByUuidTiktokMusicsData,
	GetApiV2SongByUuidTiktokMusicsError,
	GetApiV2SongByUuidTiktokMusicsResponse,
	GetApiV2SongByUuidYoutubeVideosData,
	GetApiV2SongByUuidYoutubeVideosError,
	GetApiV2SongByUuidYoutubeVideosResponse,
	GetApiV216SongByUuidYoutubeVideosData,
	GetApiV216SongByUuidYoutubeVideosError,
	GetApiV216SongByUuidYoutubeVideosResponse,
	GetApiV2SongByUuidAudienceByPlatformData,
	GetApiV2SongByUuidAudienceByPlatformError,
	GetApiV2SongByUuidAudienceByPlatformResponse,
	GetApiV2SongByUuidSpotifyStreamData,
	GetApiV2SongByUuidSpotifyStreamError,
	GetApiV2SongByUuidSpotifyStreamResponse,
	GetApiV224SongByUuidSpotifyStreamData,
	GetApiV224SongByUuidSpotifyStreamError,
	GetApiV224SongByUuidSpotifyStreamResponse,
	GetApiV2SongByUuidYoutubeViewsData,
	GetApiV2SongByUuidYoutubeViewsError,
	GetApiV2SongByUuidYoutubeViewsResponse,
	GetApiV2SongByUuidYoutubeViewsVideoByIdentifierData,
	GetApiV2SongByUuidYoutubeViewsVideoByIdentifierError,
	GetApiV2SongByUuidYoutubeViewsVideoByIdentifierResponse,
	GetApiV2SongByUuidShazamCountData,
	GetApiV2SongByUuidShazamCountError,
	GetApiV2SongByUuidShazamCountResponse,
	GetApiV224SongByUuidShazamCountData,
	GetApiV224SongByUuidShazamCountError,
	GetApiV224SongByUuidShazamCountResponse,
	GetApiV2SongByUuidSpotifyIdentifierPopularityData,
	GetApiV2SongByUuidSpotifyIdentifierPopularityError,
	GetApiV2SongByUuidSpotifyIdentifierPopularityResponse,
	GetApiV2SongByUuidSpotifyPopularityData,
	GetApiV2SongByUuidSpotifyPopularityError,
	GetApiV2SongByUuidSpotifyPopularityResponse,
	GetApiV2SongByUuidChartsRanksByPlatformData,
	GetApiV2SongByUuidChartsRanksByPlatformError,
	GetApiV2SongByUuidChartsRanksByPlatformResponse,
	GetApiV2SongByUuidPlaylistCurrentByPlatformData,
	GetApiV2SongByUuidPlaylistCurrentByPlatformError,
	GetApiV2SongByUuidPlaylistCurrentByPlatformResponse,
	GetApiV220SongByUuidPlaylistCurrentByPlatformData,
	GetApiV220SongByUuidPlaylistCurrentByPlatformError,
	GetApiV220SongByUuidPlaylistCurrentByPlatformResponse,
	GetApiV2SongByUuidBroadcastsData,
	GetApiV2SongByUuidBroadcastsError,
	GetApiV2SongByUuidBroadcastsResponse,
	GetApiV2SongByUuidBroadcastGroupsData,
	GetApiV2SongByUuidBroadcastGroupsError,
	GetApiV2SongByUuidBroadcastGroupsResponse,
	PostApiV2SongByUuidSourcesAddData,
	PostApiV2SongByUuidSourcesAddError,
	PostApiV2SongByUuidSourcesAddResponse,
	GetApiV2TiktokMusicByIdentifierData,
	GetApiV2TiktokMusicByIdentifierError,
	GetApiV2TiktokMusicByIdentifierResponse,
	GetApiV2TiktokMusicByIdentifierVideoVolumeData,
	GetApiV2TiktokMusicByIdentifierVideoVolumeError,
	GetApiV2TiktokMusicByIdentifierVideoVolumeResponse,
	GetApiV2TiktokMusicByIdentifierVideosData,
	GetApiV2TiktokMusicByIdentifierVideosError,
	GetApiV2TiktokMusicByIdentifierVideosResponse,
	GetApiV2TiktokUserByUsernameData,
	GetApiV2TiktokUserByUsernameError,
	GetApiV2TiktokUserByUsernameResponse,
	GetApiV2TiktokUserByUsernameVideosData,
	GetApiV2TiktokUserByUsernameVideosError,
	GetApiV2TiktokUserByUsernameVideosResponse,
	GetApiV2TiktokUserByUsernameAudienceData,
	GetApiV2TiktokUserByUsernameAudienceError,
	GetApiV2TiktokUserByUsernameAudienceResponse,
	GetApiV211TiktokUserByUsernameAudienceData,
	GetApiV211TiktokUserByUsernameAudienceError,
	GetApiV211TiktokUserByUsernameAudienceResponse,
	GetApiV2TiktokVideoByIdentifierData,
	GetApiV2TiktokVideoByIdentifierError,
	GetApiV2TiktokVideoByIdentifierResponse,
	GetApiV2TiktokVideoByIdentifierAudienceData,
	GetApiV2TiktokVideoByIdentifierAudienceError,
	GetApiV2TiktokVideoByIdentifierAudienceResponse,
	PostApiV2TiktokMusicUrlsAddData,
	PostApiV2TiktokMusicUrlsAddError,
	PostApiV2TiktokMusicUrlsAddResponse,
	PostApiV2TiktokUserUrlsAddData,
	PostApiV2TiktokUserUrlsAddError,
	PostApiV2TiktokUserUrlsAddResponse,
	GetApiV2UserByEmailBlocklistArtistsData,
	GetApiV2UserByEmailBlocklistArtistsError,
	GetApiV2UserByEmailBlocklistArtistsResponse,
	GetApiV2UserByEmailBlocklistSongsData,
	GetApiV2UserByEmailBlocklistSongsError,
	GetApiV2UserByEmailBlocklistSongsResponse,
	GetApiV2UserByEmailBlocklistLabelsData,
	GetApiV2UserByEmailBlocklistLabelsError,
	GetApiV2UserByEmailBlocklistLabelsResponse,
	GetApiV2SwaggerJsonError,
	GetApiV2SwaggerJsonResponse,
	GetApiV2DocJsonError,
	GetApiV2DocJsonResponse,
	GetApiV2DocError,
	GetApiV2DocResponse
} from './types.gen';

export const client = createClient(createConfig());

export class AlbumService {
	/**
	 * Get album metadata
	 */
	public static getApiV2AlbumByUuidByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2AlbumByUuidByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2AlbumByUuidByUuidResponse,
			GetApiV2AlbumByUuidByUuidError
		>({
			...options,
			url: '/api/v2/album/by-uuid/{uuid}'
		});
	}

	/**
	 * Get album metadata (deprecated)
	 */
	public static getApiV2AlbumBySlugBySlug<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2AlbumBySlugBySlugData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2AlbumBySlugBySlugResponse,
			GetApiV2AlbumBySlugBySlugError
		>({
			...options,
			url: '/api/v2/album/by-slug/{slug}'
		});
	}

	/**
	 * Get album metadata (deprecated)
	 */
	public static getApiV215AlbumBySlugBySlug<ThrowOnError extends boolean = false>(
		options: Options<GetApiV215AlbumBySlugBySlugData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV215AlbumBySlugBySlugResponse,
			GetApiV215AlbumBySlugBySlugError
		>({
			...options,
			url: '/api/v2.15/album/by-slug/{slug}'
		});
	}

	/**
	 * Get album by UPC
	 */
	public static getApiV2AlbumByUpcByUpc<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2AlbumByUpcByUpcData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2AlbumByUpcByUpcResponse,
			GetApiV2AlbumByUpcByUpcError
		>({
			...options,
			url: '/api/v2/album/by-upc/{upc}'
		});
	}

	/**
	 * Get album by UPC
	 */
	public static getApiV215AlbumByUpcByUpc<ThrowOnError extends boolean = false>(
		options: Options<GetApiV215AlbumByUpcByUpcData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV215AlbumByUpcByUpcResponse,
			GetApiV215AlbumByUpcByUpcError
		>({
			...options,
			url: '/api/v2.15/album/by-upc/{upc}'
		});
	}

	/**
	 * Get album by UPC
	 */
	public static getApiV226AlbumByUpcByUpc<ThrowOnError extends boolean = false>(
		options: Options<GetApiV226AlbumByUpcByUpcData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226AlbumByUpcByUpcResponse,
			GetApiV226AlbumByUpcByUpcError
		>({
			...options,
			url: '/api/v2.26/album/by-upc/{upc}'
		});
	}

	/**
	 * Get album by platform ID
	 */
	public static getApiV2AlbumByPlatformByPlatformByIdentifier<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2AlbumByPlatformByPlatformByIdentifierData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2AlbumByPlatformByPlatformByIdentifierResponse,
			GetApiV2AlbumByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2/album/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get album by platform ID
	 */
	public static getApiV215AlbumByPlatformByPlatformByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV215AlbumByPlatformByPlatformByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV215AlbumByPlatformByPlatformByIdentifierResponse,
			GetApiV215AlbumByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2.15/album/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get album by platform ID
	 */
	public static getApiV226AlbumByPlatformByPlatformByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV226AlbumByPlatformByPlatformByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226AlbumByPlatformByPlatformByIdentifierResponse,
			GetApiV226AlbumByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2.26/album/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get IDs
	 */
	public static getApiV226AlbumByUuidIdentifiers<ThrowOnError extends boolean = false>(
		options: Options<GetApiV226AlbumByUuidIdentifiersData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226AlbumByUuidIdentifiersResponse,
			GetApiV226AlbumByUuidIdentifiersError
		>({
			...options,
			url: '/api/v2.26/album/{uuid}/identifiers'
		});
	}

	/**
	 * Get IDs (deprecated)
	 */
	public static getApiV2AlbumBySlugIdentifiers<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2AlbumBySlugIdentifiersData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2AlbumBySlugIdentifiersResponse,
			GetApiV2AlbumBySlugIdentifiersError
		>({
			...options,
			url: '/api/v2/album/{slug}/identifiers'
		});
	}

	/**
	 * Get tracklisting
	 */
	public static getApiV226AlbumByUuidTracks<ThrowOnError extends boolean = false>(
		options: Options<GetApiV226AlbumByUuidTracksData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226AlbumByUuidTracksResponse,
			GetApiV226AlbumByUuidTracksError
		>({
			...options,
			url: '/api/v2.26/album/{uuid}/tracks'
		});
	}

	/**
	 * Get tracklisting (deprecated)
	 */
	public static getApiV2AlbumBySlugTracks<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2AlbumBySlugTracksData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2AlbumBySlugTracksResponse,
			GetApiV2AlbumBySlugTracksError
		>({
			...options,
			url: '/api/v2/album/{slug}/tracks'
		});
	}

	/**
	 * Get chart entries
	 */
	public static getApiV226AlbumByUuidChartsRanksByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV226AlbumByUuidChartsRanksByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226AlbumByUuidChartsRanksByPlatformResponse,
			GetApiV226AlbumByUuidChartsRanksByPlatformError
		>({
			...options,
			url: '/api/v2.26/album/{uuid}/charts/ranks/{platform}'
		});
	}

	/**
	 * Get chart entries (deprecated)
	 */
	public static getApiV2AlbumBySlugChartsRanksByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2AlbumBySlugChartsRanksByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2AlbumBySlugChartsRanksByPlatformResponse,
			GetApiV2AlbumBySlugChartsRanksByPlatformError
		>({
			...options,
			url: '/api/v2/album/{slug}/charts/ranks/{platform}'
		});
	}
}

export class ArtistService {
	/**
	 * Get artist metadata
	 */
	public static getApiV2ArtistByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidResponse,
			GetApiV2ArtistByUuidError
		>({
			...options,
			url: '/api/v2/artist/{uuid}'
		});
	}

	/**
	 * Get artist metadata
	 */
	public static getApiV29ArtistByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV29ArtistByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV29ArtistByUuidResponse,
			GetApiV29ArtistByUuidError
		>({
			...options,
			url: '/api/v2.9/artist/{uuid}'
		});
	}

	/**
	 * Get artist by platform ID
	 */
	public static getApiV2ArtistByPlatformByPlatformByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2ArtistByPlatformByPlatformByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByPlatformByPlatformByIdentifierResponse,
			GetApiV2ArtistByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2/artist/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get artist by platform ID
	 */
	public static getApiV29ArtistByPlatformByPlatformByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV29ArtistByPlatformByPlatformByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV29ArtistByPlatformByPlatformByIdentifierResponse,
			GetApiV29ArtistByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2.9/artist/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get artists by country (deprecated)
	 */
	public static getApiV2ArtistByCountryByCountryCode<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByCountryByCountryCodeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByCountryByCountryCodeResponse,
			GetApiV2ArtistByCountryByCountryCodeError
		>({
			...options,
			url: '/api/v2/artist/by-country/{countryCode}'
		});
	}

	/**
	 * Get IDs
	 */
	public static getApiV2ArtistByUuidIdentifiers<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidIdentifiersData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidIdentifiersResponse,
			GetApiV2ArtistByUuidIdentifiersError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/identifiers'
		});
	}

	/**
	 * Get songs
	 */
	public static getApiV2ArtistByUuidSongs<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidSongsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidSongsResponse,
			GetApiV2ArtistByUuidSongsError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/songs'
		});
	}

	/**
	 * Get songs
	 */
	public static getApiV221ArtistByUuidSongs<ThrowOnError extends boolean = false>(
		options: Options<GetApiV221ArtistByUuidSongsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV221ArtistByUuidSongsResponse,
			GetApiV221ArtistByUuidSongsError
		>({
			...options,
			url: '/api/v2.21/artist/{uuid}/songs'
		});
	}

	/**
	 * Get albums
	 */
	public static getApiV2ArtistByUuidAlbums<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidAlbumsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidAlbumsResponse,
			GetApiV2ArtistByUuidAlbumsError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/albums'
		});
	}

	/**
	 * Get albums
	 */
	public static getApiV218ArtistByUuidAlbums<ThrowOnError extends boolean = false>(
		options: Options<GetApiV218ArtistByUuidAlbumsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV218ArtistByUuidAlbumsResponse,
			GetApiV218ArtistByUuidAlbumsError
		>({
			...options,
			url: '/api/v2.18/artist/{uuid}/albums'
		});
	}

	/**
	 * Get albums
	 */
	public static getApiV226ArtistByUuidAlbums<ThrowOnError extends boolean = false>(
		options: Options<GetApiV226ArtistByUuidAlbumsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226ArtistByUuidAlbumsResponse,
			GetApiV226ArtistByUuidAlbumsError
		>({
			...options,
			url: '/api/v2.26/artist/{uuid}/albums'
		});
	}

	/**
	 * Get albums
	 */
	public static getApiV234ArtistByUuidAlbums<ThrowOnError extends boolean = false>(
		options: Options<GetApiV234ArtistByUuidAlbumsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV234ArtistByUuidAlbumsResponse,
			GetApiV234ArtistByUuidAlbumsError
		>({
			...options,
			url: '/api/v2.34/artist/{uuid}/albums'
		});
	}

	/**
	 * Get similar artists
	 */
	public static getApiV2ArtistByUuidRelated<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidRelatedData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidRelatedResponse,
			GetApiV2ArtistByUuidRelatedError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/related'
		});
	}

	/**
	 * Get audience
	 */
	public static getApiV2ArtistByUuidAudienceByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidAudienceByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidAudienceByPlatformResponse,
			GetApiV2ArtistByUuidAudienceByPlatformError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/audience/{platform}'
		});
	}

	/**
	 * Get local audience
	 */
	public static getApiV2ArtistByUuidSocialByPlatformFollowersByYearByMonth<
		ThrowOnError extends boolean = false
	>(
		options: Options<GetApiV2ArtistByUuidSocialByPlatformFollowersByYearByMonthData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidSocialByPlatformFollowersByYearByMonthResponse,
			GetApiV2ArtistByUuidSocialByPlatformFollowersByYearByMonthError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/social/{platform}/followers/{year}/{month}'
		});
	}

	/**
	 * Get followers
	 */
	public static getApiV2ArtistByUuidSocialByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidSocialByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidSocialByPlatformResponse,
			GetApiV2ArtistByUuidSocialByPlatformError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/social/{platform}'
		});
	}

	/**
	 * Get listeners/streams/views
	 */
	public static getApiV2ArtistByUuidStreamingByPlatformListening<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2ArtistByUuidStreamingByPlatformListeningData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidStreamingByPlatformListeningResponse,
			GetApiV2ArtistByUuidStreamingByPlatformListeningError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/streaming/{platform}/listening'
		});
	}

	/**
	 * Get Spotify monthly listeners - latest
	 */
	public static getApiV2ArtistByUuidStreamingSpotifyListeners<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidStreamingSpotifyListenersData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidStreamingSpotifyListenersResponse,
			GetApiV2ArtistByUuidStreamingSpotifyListenersError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/streaming/spotify/listeners'
		});
	}

	/**
	 * Get Spotify monthly listeners by month
	 */
	public static getApiV2ArtistByUuidStreamingSpotifyListenersByYearByMonth<
		ThrowOnError extends boolean = false
	>(
		options: Options<GetApiV2ArtistByUuidStreamingSpotifyListenersByYearByMonthData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidStreamingSpotifyListenersByYearByMonthResponse,
			GetApiV2ArtistByUuidStreamingSpotifyListenersByYearByMonthError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/streaming/spotify/listeners/{year}/{month}'
		});
	}

	/**
	 * Get YouTube views - latest
	 */
	public static getApiV2ArtistByUuidStreamingYoutubeViews<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidStreamingYoutubeViewsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidStreamingYoutubeViewsResponse,
			GetApiV2ArtistByUuidStreamingYoutubeViewsError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/streaming/youtube/views'
		});
	}

	/**
	 * Get YouTube views by month
	 */
	public static getApiV2ArtistByUuidStreamingYoutubeViewsByYearByMonth<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2ArtistByUuidStreamingYoutubeViewsByYearByMonthData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidStreamingYoutubeViewsByYearByMonthResponse,
			GetApiV2ArtistByUuidStreamingYoutubeViewsByYearByMonthError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/streaming/youtube/views/{year}/{month}'
		});
	}

	/**
	 * Get retention
	 */
	public static getApiV2ArtistByUuidByPlatformRetention<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidByPlatformRetentionData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidByPlatformRetentionResponse,
			GetApiV2ArtistByUuidByPlatformRetentionError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/{platform}/retention'
		});
	}

	/**
	 * Get Spotify popularity
	 */
	public static getApiV2ArtistByUuidSpotifyPopularity<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidSpotifyPopularityData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidSpotifyPopularityResponse,
			GetApiV2ArtistByUuidSpotifyPopularityError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/spotify/popularity'
		});
	}

	/**
	 * Get audience report - latest
	 */
	public static getApiV2ArtistByUuidAudienceByPlatformReportLatest<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2ArtistByUuidAudienceByPlatformReportLatestData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidAudienceByPlatformReportLatestResponse,
			GetApiV2ArtistByUuidAudienceByPlatformReportLatestError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/audience/{platform}/report/latest'
		});
	}

	/**
	 * Get audience report dates
	 */
	public static getApiV2ArtistByUuidAudienceByPlatformReportAvailableDates<
		ThrowOnError extends boolean = false
	>(
		options: Options<GetApiV2ArtistByUuidAudienceByPlatformReportAvailableDatesData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidAudienceByPlatformReportAvailableDatesResponse,
			GetApiV2ArtistByUuidAudienceByPlatformReportAvailableDatesError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/audience/{platform}/report/available-dates'
		});
	}

	/**
	 * Get audience report for a date
	 */
	public static getApiV2ArtistByUuidAudienceByPlatformReportByDate<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2ArtistByUuidAudienceByPlatformReportByDateData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidAudienceByPlatformReportByDateResponse,
			GetApiV2ArtistByUuidAudienceByPlatformReportByDateError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/audience/{platform}/report/{date}'
		});
	}

	/**
	 * Get chart song entries
	 */
	public static getApiV2ArtistByUuidChartsSongRanksByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidChartsSongRanksByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidChartsSongRanksByPlatformResponse,
			GetApiV2ArtistByUuidChartsSongRanksByPlatformError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/charts/song/ranks/{platform}'
		});
	}

	/**
	 * Get chart album entries
	 */
	public static getApiV2ArtistByUuidChartsAlbumRanksByPlatform<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2ArtistByUuidChartsAlbumRanksByPlatformData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidChartsAlbumRanksByPlatformResponse,
			GetApiV2ArtistByUuidChartsAlbumRanksByPlatformError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/charts/album/ranks/{platform}'
		});
	}

	/**
	 * Get chart album entries
	 */
	public static getApiV228ArtistByUuidChartsAlbumRanksByPlatform<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV228ArtistByUuidChartsAlbumRanksByPlatformData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV228ArtistByUuidChartsAlbumRanksByPlatformResponse,
			GetApiV228ArtistByUuidChartsAlbumRanksByPlatformError
		>({
			...options,
			url: '/api/v2.28/artist/{uuid}/charts/album/ranks/{platform}'
		});
	}

	/**
	 * Get playlist entries
	 */
	public static getApiV2ArtistByUuidPlaylistCurrentByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidPlaylistCurrentByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidPlaylistCurrentByPlatformResponse,
			GetApiV2ArtistByUuidPlaylistCurrentByPlatformError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/playlist/current/{platform}'
		});
	}

	/**
	 * Get playlist entries
	 */
	public static getApiV220ArtistByUuidPlaylistCurrentByPlatform<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV220ArtistByUuidPlaylistCurrentByPlatformData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220ArtistByUuidPlaylistCurrentByPlatformResponse,
			GetApiV220ArtistByUuidPlaylistCurrentByPlatformError
		>({
			...options,
			url: '/api/v2.20/artist/{uuid}/playlist/current/{platform}'
		});
	}

	/**
	 * Get radio spins
	 */
	public static getApiV2ArtistByUuidBroadcasts<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidBroadcastsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidBroadcastsResponse,
			GetApiV2ArtistByUuidBroadcastsError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/broadcasts'
		});
	}

	/**
	 * Get Songkick events
	 */
	public static getApiV2ArtistByUuidSongkickEvents<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistByUuidSongkickEventsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistByUuidSongkickEventsResponse,
			GetApiV2ArtistByUuidSongkickEventsError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/songkick/events'
		});
	}

	/**
	 * Get Songkick events
	 */
	public static getApiV219ArtistByUuidSongkickEvents<ThrowOnError extends boolean = false>(
		options: Options<GetApiV219ArtistByUuidSongkickEventsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV219ArtistByUuidSongkickEventsResponse,
			GetApiV219ArtistByUuidSongkickEventsError
		>({
			...options,
			url: '/api/v2.19/artist/{uuid}/songkick/events'
		});
	}

	/**
	 * Add links
	 */
	public static postApiV2ArtistByUuidSourcesAdd<ThrowOnError extends boolean = false>(
		options: Options<PostApiV2ArtistByUuidSourcesAddData, ThrowOnError>
	) {
		return (options?.client ?? client).post<
			ThrowOnError,
			PostApiV2ArtistByUuidSourcesAddResponse,
			PostApiV2ArtistByUuidSourcesAddError
		>({
			...options,
			url: '/api/v2/artist/{uuid}/sources/add'
		});
	}
}

export class ChartService {
	/**
	 * Get artist ranking
	 */
	public static getApiV2TopArtistByPlatformByMetricType<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TopArtistByPlatformByMetricTypeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TopArtistByPlatformByMetricTypeResponse,
			GetApiV2TopArtistByPlatformByMetricTypeError
		>({
			...options,
			url: '/api/v2/top-artist/{platform}/{metricType}'
		});
	}

	/**
	 * Get artist ranking for a country
	 */
	public static getApiV2TopArtistCountryByCountryCodeByPlatformByMetricType<
		ThrowOnError extends boolean = false
	>(
		options: Options<GetApiV2TopArtistCountryByCountryCodeByPlatformByMetricTypeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TopArtistCountryByCountryCodeByPlatformByMetricTypeResponse,
			GetApiV2TopArtistCountryByCountryCodeByPlatformByMetricTypeError
		>({
			...options,
			url: '/api/v2/top-artist/country/{countryCode}/{platform}/{metricType}'
		});
	}

	/**
	 * Get artist ranking for a city
	 */
	public static getApiV2TopArtistCityByCityKeyByPlatformByMetricType<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2TopArtistCityByCityKeyByPlatformByMetricTypeData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TopArtistCityByCityKeyByPlatformByMetricTypeResponse,
			GetApiV2TopArtistCityByCityKeyByPlatformByMetricTypeError
		>({
			...options,
			url: '/api/v2/top-artist/city/{cityKey}/{platform}/{metricType}'
		});
	}

	/**
	 * Get song ranking
	 */
	public static getApiV2TopSongByPlatformByMetricType<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TopSongByPlatformByMetricTypeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TopSongByPlatformByMetricTypeResponse,
			GetApiV2TopSongByPlatformByMetricTypeError
		>({
			...options,
			url: '/api/v2/top-song/{platform}/{metricType}'
		});
	}

	/**
	 * Get radio ranking
	 */
	public static getApiV2TopRadioByPlatformByMetricType<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TopRadioByPlatformByMetricTypeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TopRadioByPlatformByMetricTypeResponse,
			GetApiV2TopRadioByPlatformByMetricTypeError
		>({
			...options,
			url: '/api/v2/top-radio/{platform}/{metricType}'
		});
	}

	/**
	 * Get song chart list by platform
	 */
	public static getApiV2ChartSongByPlatformByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartSongByPlatformByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartSongByPlatformByPlatformResponse,
			GetApiV2ChartSongByPlatformByPlatformError
		>({
			...options,
			url: '/api/v2/chart/song/by-platform/{platform}'
		});
	}

	/**
	 * Get song ranking - latest
	 */
	public static getApiV2ChartSongBySlugRankingLatest<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartSongBySlugRankingLatestData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartSongBySlugRankingLatestResponse,
			GetApiV2ChartSongBySlugRankingLatestError
		>({
			...options,
			url: '/api/v2/chart/song/{slug}/ranking/latest'
		});
	}

	/**
	 * Get song ranking - latest
	 */
	public static getApiV214ChartSongBySlugRankingLatest<ThrowOnError extends boolean = false>(
		options: Options<GetApiV214ChartSongBySlugRankingLatestData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV214ChartSongBySlugRankingLatestResponse,
			GetApiV214ChartSongBySlugRankingLatestError
		>({
			...options,
			url: '/api/v2.14/chart/song/{slug}/ranking/latest'
		});
	}

	/**
	 * Get song ranking dates
	 */
	public static getApiV2ChartSongBySlugAvailableRankings<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartSongBySlugAvailableRankingsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartSongBySlugAvailableRankingsResponse,
			GetApiV2ChartSongBySlugAvailableRankingsError
		>({
			...options,
			url: '/api/v2/chart/song/{slug}/available-rankings'
		});
	}

	/**
	 * Get song ranking for a date
	 */
	public static getApiV2ChartSongBySlugRankingByDatetime<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartSongBySlugRankingByDatetimeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartSongBySlugRankingByDatetimeResponse,
			GetApiV2ChartSongBySlugRankingByDatetimeError
		>({
			...options,
			url: '/api/v2/chart/song/{slug}/ranking/{datetime}'
		});
	}

	/**
	 * Get song ranking for a date
	 */
	public static getApiV214ChartSongBySlugRankingByDatetime<ThrowOnError extends boolean = false>(
		options: Options<GetApiV214ChartSongBySlugRankingByDatetimeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV214ChartSongBySlugRankingByDatetimeResponse,
			GetApiV214ChartSongBySlugRankingByDatetimeError
		>({
			...options,
			url: '/api/v2.14/chart/song/{slug}/ranking/{datetime}'
		});
	}

	/**
	 * Get album chart list by platform
	 */
	public static getApiV2ChartAlbumByPlatformByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartAlbumByPlatformByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartAlbumByPlatformByPlatformResponse,
			GetApiV2ChartAlbumByPlatformByPlatformError
		>({
			...options,
			url: '/api/v2/chart/album/by-platform/{platform}'
		});
	}

	/**
	 * Get album ranking - latest
	 */
	public static getApiV2ChartAlbumBySlugRankingLatest<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartAlbumBySlugRankingLatestData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartAlbumBySlugRankingLatestResponse,
			GetApiV2ChartAlbumBySlugRankingLatestError
		>({
			...options,
			url: '/api/v2/chart/album/{slug}/ranking/latest'
		});
	}

	/**
	 * Get album ranking - latest
	 */
	public static getApiV226ChartAlbumBySlugRankingLatest<ThrowOnError extends boolean = false>(
		options: Options<GetApiV226ChartAlbumBySlugRankingLatestData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226ChartAlbumBySlugRankingLatestResponse,
			GetApiV226ChartAlbumBySlugRankingLatestError
		>({
			...options,
			url: '/api/v2.26/chart/album/{slug}/ranking/latest'
		});
	}

	/**
	 * Get album ranking dates
	 */
	public static getApiV2ChartAlbumBySlugAvailableRankings<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartAlbumBySlugAvailableRankingsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartAlbumBySlugAvailableRankingsResponse,
			GetApiV2ChartAlbumBySlugAvailableRankingsError
		>({
			...options,
			url: '/api/v2/chart/album/{slug}/available-rankings'
		});
	}

	/**
	 * Get album ranking for a date
	 */
	public static getApiV2ChartAlbumBySlugRankingByDatetime<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ChartAlbumBySlugRankingByDatetimeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartAlbumBySlugRankingByDatetimeResponse,
			GetApiV2ChartAlbumBySlugRankingByDatetimeError
		>({
			...options,
			url: '/api/v2/chart/album/{slug}/ranking/{datetime}'
		});
	}

	/**
	 * Get album ranking for a date
	 */
	public static getApiV226ChartAlbumBySlugRankingByDatetime<ThrowOnError extends boolean = false>(
		options: Options<GetApiV226ChartAlbumBySlugRankingByDatetimeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV226ChartAlbumBySlugRankingByDatetimeResponse,
			GetApiV226ChartAlbumBySlugRankingByDatetimeError
		>({
			...options,
			url: '/api/v2.26/chart/album/{slug}/ranking/{datetime}'
		});
	}

	/**
	 * Get TikTok music links ranking - latest
	 */
	public static getApiV2ChartTiktokMusicWeeklyRankingLatest<ThrowOnError extends boolean = false>(
		options?: Options<GetApiV2ChartTiktokMusicWeeklyRankingLatestData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartTiktokMusicWeeklyRankingLatestResponse,
			GetApiV2ChartTiktokMusicWeeklyRankingLatestError
		>({
			...options,
			url: '/api/v2/chart/tiktok/music/weekly/ranking/latest'
		});
	}

	/**
	 * Get TikTok music links ranking dates
	 */
	public static getApiV2ChartTiktokMusicWeeklyAvailableRankings<
		ThrowOnError extends boolean = false
	>(options?: Options<GetApiV2ChartTiktokMusicWeeklyAvailableRankingsData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartTiktokMusicWeeklyAvailableRankingsResponse,
			GetApiV2ChartTiktokMusicWeeklyAvailableRankingsError
		>({
			...options,
			url: '/api/v2/chart/tiktok/music/weekly/available-rankings'
		});
	}

	/**
	 * Get TikTok music links ranking for a date
	 */
	public static getApiV2ChartTiktokMusicWeeklyRankingByDatetime<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2ChartTiktokMusicWeeklyRankingByDatetimeData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartTiktokMusicWeeklyRankingByDatetimeResponse,
			GetApiV2ChartTiktokMusicWeeklyRankingByDatetimeError
		>({
			...options,
			url: '/api/v2/chart/tiktok/music/weekly/ranking/{datetime}'
		});
	}
}

export class MyLibraryService {
	/**
	 * Get artist list
	 */
	public static getApiV2LibraryArtist<ThrowOnError extends boolean = false>(
		options?: Options<GetApiV2LibraryArtistData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2LibraryArtistResponse,
			GetApiV2LibraryArtistError
		>({
			...options,
			url: '/api/v2/library/artist'
		});
	}

	/**
	 * Add artists IDs
	 */
	public static postApiV2LibraryArtist<ThrowOnError extends boolean = false>(
		options: Options<PostApiV2LibraryArtistData, ThrowOnError>
	) {
		return (options?.client ?? client).post<
			ThrowOnError,
			PostApiV2LibraryArtistResponse,
			PostApiV2LibraryArtistError
		>({
			...options,
			url: '/api/v2/library/artist'
		});
	}

	/**
	 * Delete artists IDs
	 */
	public static deleteApiV2LibraryArtist<ThrowOnError extends boolean = false>(
		options: Options<DeleteApiV2LibraryArtistData, ThrowOnError>
	) {
		return (options?.client ?? client).delete<
			ThrowOnError,
			DeleteApiV2LibraryArtistResponse,
			DeleteApiV2LibraryArtistError
		>({
			...options,
			url: '/api/v2/library/artist'
		});
	}

	/**
	 * Get song list
	 */
	public static getApiV2LibrarySong<ThrowOnError extends boolean = false>(
		options?: Options<GetApiV2LibrarySongData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2LibrarySongResponse,
			GetApiV2LibrarySongError
		>({
			...options,
			url: '/api/v2/library/song'
		});
	}

	/**
	 * Add songs IDs
	 */
	public static postApiV2LibrarySong<ThrowOnError extends boolean = false>(
		options: Options<PostApiV2LibrarySongData, ThrowOnError>
	) {
		return (options?.client ?? client).post<
			ThrowOnError,
			PostApiV2LibrarySongResponse,
			PostApiV2LibrarySongError
		>({
			...options,
			url: '/api/v2/library/song'
		});
	}

	/**
	 * Delete songs IDs
	 */
	public static deleteApiV2LibrarySong<ThrowOnError extends boolean = false>(
		options: Options<DeleteApiV2LibrarySongData, ThrowOnError>
	) {
		return (options?.client ?? client).delete<
			ThrowOnError,
			DeleteApiV2LibrarySongResponse,
			DeleteApiV2LibrarySongError
		>({
			...options,
			url: '/api/v2/library/song'
		});
	}
}

export class PlaylistService {
	/**
	 * Get playlist metadata
	 */
	public static getApiV2PlaylistByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByUuidResponse,
			GetApiV2PlaylistByUuidError
		>({
			...options,
			url: '/api/v2/playlist/{uuid}'
		});
	}

	/**
	 * Get playlist metadata
	 */
	public static getApiV28PlaylistByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV28PlaylistByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV28PlaylistByUuidResponse,
			GetApiV28PlaylistByUuidError
		>({
			...options,
			url: '/api/v2.8/playlist/{uuid}'
		});
	}

	/**
	 * Get playlist by platform ID
	 */
	public static getApiV2PlaylistByPlatformByPlatformByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2PlaylistByPlatformByPlatformByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByPlatformByPlatformByIdentifierResponse,
			GetApiV2PlaylistByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2/playlist/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get playlist by platform ID
	 */
	public static getApiV28PlaylistByPlatformByPlatformByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV28PlaylistByPlatformByPlatformByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV28PlaylistByPlatformByPlatformByIdentifierResponse,
			GetApiV28PlaylistByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2.8/playlist/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get curators by platform
	 */
	public static getApiV2PlaylistCuratorsByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistCuratorsByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistCuratorsByPlatformResponse,
			GetApiV2PlaylistCuratorsByPlatformError
		>({
			...options,
			url: '/api/v2/playlist/curators/{platform}'
		});
	}

	/**
	 * Get playlists by curator
	 */
	public static getApiV2PlaylistByCuratorByPlatformByCuratorIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2PlaylistByCuratorByPlatformByCuratorIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByCuratorByPlatformByCuratorIdentifierResponse,
			GetApiV2PlaylistByCuratorByPlatformByCuratorIdentifierError
		>({
			...options,
			url: '/api/v2/playlist/by-curator/{platform}/{curatorIdentifier}'
		});
	}

	/**
	 * Get playlists by curator
	 */
	public static getApiV220PlaylistByCuratorByPlatformByCuratorIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV220PlaylistByCuratorByPlatformByCuratorIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220PlaylistByCuratorByPlatformByCuratorIdentifierResponse,
			GetApiV220PlaylistByCuratorByPlatformByCuratorIdentifierError
		>({
			...options,
			url: '/api/v2.20/playlist/by-curator/{platform}/{curatorIdentifier}'
		});
	}

	/**
	 * Get playlists by type
	 */
	public static getApiV2PlaylistByTypeByPlatformByType<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistByTypeByPlatformByTypeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByTypeByPlatformByTypeResponse,
			GetApiV2PlaylistByTypeByPlatformByTypeError
		>({
			...options,
			url: '/api/v2/playlist/by-type/{platform}/{type}'
		});
	}

	/**
	 * Get audience
	 */
	public static getApiV2PlaylistByUuidAudience<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistByUuidAudienceData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByUuidAudienceResponse,
			GetApiV2PlaylistByUuidAudienceError
		>({
			...options,
			url: '/api/v2/playlist/{uuid}/audience'
		});
	}

	/**
	 * Get audience
	 */
	public static getApiV220PlaylistByUuidAudience<ThrowOnError extends boolean = false>(
		options: Options<GetApiV220PlaylistByUuidAudienceData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220PlaylistByUuidAudienceResponse,
			GetApiV220PlaylistByUuidAudienceError
		>({
			...options,
			url: '/api/v2.20/playlist/{uuid}/audience'
		});
	}

	/**
	 * Get playlists by type
	 */
	public static getApiV220PlaylistByTypeByPlatformByType<ThrowOnError extends boolean = false>(
		options: Options<GetApiV220PlaylistByTypeByPlatformByTypeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220PlaylistByTypeByPlatformByTypeResponse,
			GetApiV220PlaylistByTypeByPlatformByTypeError
		>({
			...options,
			url: '/api/v2.20/playlist/by-type/{platform}/{type}'
		});
	}

	/**
	 * Get tracklisting - latest
	 */
	public static getApiV2PlaylistByUuidTracksLatest<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistByUuidTracksLatestData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByUuidTracksLatestResponse,
			GetApiV2PlaylistByUuidTracksLatestError
		>({
			...options,
			url: '/api/v2/playlist/{uuid}/tracks/latest'
		});
	}

	/**
	 * Get tracklisting - latest
	 */
	public static getApiV220PlaylistByUuidTracksLatest<ThrowOnError extends boolean = false>(
		options: Options<GetApiV220PlaylistByUuidTracksLatestData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220PlaylistByUuidTracksLatestResponse,
			GetApiV220PlaylistByUuidTracksLatestError
		>({
			...options,
			url: '/api/v2.20/playlist/{uuid}/tracks/latest'
		});
	}

	/**
	 * Get tracklisting dates
	 */
	public static getApiV2PlaylistByUuidAvailableTracklistings<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistByUuidAvailableTracklistingsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByUuidAvailableTracklistingsResponse,
			GetApiV2PlaylistByUuidAvailableTracklistingsError
		>({
			...options,
			url: '/api/v2/playlist/{uuid}/available-tracklistings'
		});
	}

	/**
	 * Get tracklisting dates
	 */
	public static getApiV220PlaylistByUuidAvailableTracklistings<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV220PlaylistByUuidAvailableTracklistingsData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220PlaylistByUuidAvailableTracklistingsResponse,
			GetApiV220PlaylistByUuidAvailableTracklistingsError
		>({
			...options,
			url: '/api/v2.20/playlist/{uuid}/available-tracklistings'
		});
	}

	/**
	 * Get tracklisting for a date
	 */
	public static getApiV2PlaylistByUuidTracksByDatetime<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistByUuidTracksByDatetimeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistByUuidTracksByDatetimeResponse,
			GetApiV2PlaylistByUuidTracksByDatetimeError
		>({
			...options,
			url: '/api/v2/playlist/{uuid}/tracks/{datetime}'
		});
	}

	/**
	 * Get tracklisting for a date
	 */
	public static getApiV220PlaylistByUuidTracksByDatetime<ThrowOnError extends boolean = false>(
		options: Options<GetApiV220PlaylistByUuidTracksByDatetimeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220PlaylistByUuidTracksByDatetimeResponse,
			GetApiV220PlaylistByUuidTracksByDatetimeError
		>({
			...options,
			url: '/api/v2.20/playlist/{uuid}/tracks/{datetime}'
		});
	}
}

export class RadioService {
	/**
	 * Get radios
	 */
	public static getApiV2Radio<ThrowOnError extends boolean = false>(
		options?: Options<GetApiV2RadioData, ThrowOnError>
	) {
		return (options?.client ?? client).get<ThrowOnError, GetApiV2RadioResponse, GetApiV2RadioError>(
			{
				...options,
				url: '/api/v2/radio'
			}
		);
	}

	/**
	 * Get radios
	 */
	public static getApiV218Radio<ThrowOnError extends boolean = false>(
		options?: Options<GetApiV218RadioData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV218RadioResponse,
			GetApiV218RadioError
		>({
			...options,
			url: '/api/v2.18/radio'
		});
	}

	/**
	 * Get radios
	 */
	public static getApiV222Radio<ThrowOnError extends boolean = false>(
		options?: Options<GetApiV222RadioData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV222RadioResponse,
			GetApiV222RadioError
		>({
			...options,
			url: '/api/v2.22/radio'
		});
	}

	/**
	 * Get radios by country
	 */
	public static getApiV2RadioByCountryByCountryCode<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2RadioByCountryByCountryCodeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2RadioByCountryByCountryCodeResponse,
			GetApiV2RadioByCountryByCountryCodeError
		>({
			...options,
			url: '/api/v2/radio/by-country/{countryCode}'
		});
	}

	/**
	 * Get radios by country
	 */
	public static getApiV218RadioByCountryByCountryCode<ThrowOnError extends boolean = false>(
		options: Options<GetApiV218RadioByCountryByCountryCodeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV218RadioByCountryByCountryCodeResponse,
			GetApiV218RadioByCountryByCountryCodeError
		>({
			...options,
			url: '/api/v2.18/radio/by-country/{countryCode}'
		});
	}

	/**
	 * Get radios by country
	 */
	public static getApiV222RadioByCountryByCountryCode<ThrowOnError extends boolean = false>(
		options: Options<GetApiV222RadioByCountryByCountryCodeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV222RadioByCountryByCountryCodeResponse,
			GetApiV222RadioByCountryByCountryCodeError
		>({
			...options,
			url: '/api/v2.22/radio/by-country/{countryCode}'
		});
	}

	/**
	 * Get live feed
	 */
	public static getApiV2RadioBySlugLiveFeed<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2RadioBySlugLiveFeedData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2RadioBySlugLiveFeedResponse,
			GetApiV2RadioBySlugLiveFeedError
		>({
			...options,
			url: '/api/v2/radio/{slug}/live-feed'
		});
	}
}

export class ReferentialService {
	/**
	 * Get platforms
	 */
	public static getApiV2ReferentialPlatforms<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ReferentialPlatformsResponse,
			GetApiV2ReferentialPlatformsError
		>({
			...options,
			url: '/api/v2/referential/platforms'
		});
	}

	/**
	 * Get platforms for audience data
	 */
	public static getApiV2ReferentialPlatformsSocial<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ReferentialPlatformsSocialResponse,
			GetApiV2ReferentialPlatformsSocialError
		>({
			...options,
			url: '/api/v2/referential/platforms/social'
		});
	}

	/**
	 * Get platforms for streaming data
	 */
	public static getApiV2ReferentialPlatformsStreaming<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ReferentialPlatformsStreamingResponse,
			GetApiV2ReferentialPlatformsStreamingError
		>({
			...options,
			url: '/api/v2/referential/platforms/streaming'
		});
	}

	/**
	 * Get platforms for song charts
	 */
	public static getApiV2ChartSongPlatforms<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartSongPlatformsResponse,
			GetApiV2ChartSongPlatformsError
		>({
			...options,
			url: '/api/v2/chart/song/platforms'
		});
	}

	/**
	 * Get platforms for album charts
	 */
	public static getApiV2ChartAlbumPlatforms<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ChartAlbumPlatformsResponse,
			GetApiV2ChartAlbumPlatformsError
		>({
			...options,
			url: '/api/v2/chart/album/platforms'
		});
	}

	/**
	 * Get platforms for playlist data
	 */
	public static getApiV2PlaylistPlatforms<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistPlatformsResponse,
			GetApiV2PlaylistPlatformsError
		>({
			...options,
			url: '/api/v2/playlist/platforms'
		});
	}

	/**
	 * Get radio country list
	 */
	public static getApiV2RadioCountries<ThrowOnError extends boolean = false>(
		options?: Options<GetApiV2RadioCountriesData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2RadioCountriesResponse,
			GetApiV2RadioCountriesError
		>({
			...options,
			url: '/api/v2/radio/countries'
		});
	}

	/**
	 * Get cities for artist ranking
	 */
	public static getApiV2TopArtistReferentialCitiesByCountryCode<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2TopArtistReferentialCitiesByCountryCodeData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TopArtistReferentialCitiesByCountryCodeResponse,
			GetApiV2TopArtistReferentialCitiesByCountryCodeError
		>({
			...options,
			url: '/api/v2/top-artist/referential/cities/{countryCode}'
		});
	}
}

export class SearchService {
	/**
	 * Search artist by name
	 */
	public static getApiV2ArtistSearchByTerm<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2ArtistSearchByTermData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2ArtistSearchByTermResponse,
			GetApiV2ArtistSearchByTermError
		>({
			...options,
			url: '/api/v2/artist/search/{term}'
		});
	}

	/**
	 * Search song by name
	 */
	public static getApiV2SongSearchByTerm<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongSearchByTermData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongSearchByTermResponse,
			GetApiV2SongSearchByTermError
		>({
			...options,
			url: '/api/v2/song/search/{term}'
		});
	}

	/**
	 * Search playlist by name
	 */
	public static getApiV2PlaylistSearchByTerm<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2PlaylistSearchByTermData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2PlaylistSearchByTermResponse,
			GetApiV2PlaylistSearchByTermError
		>({
			...options,
			url: '/api/v2/playlist/search/{term}'
		});
	}

	/**
	 * Get Soundcharts URL from platform URL
	 */
	public static getApiV2SearchExternalUrl<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SearchExternalUrlData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SearchExternalUrlResponse,
			GetApiV2SearchExternalUrlError
		>({
			...options,
			url: '/api/v2/search/external/url'
		});
	}
}

export class SongService {
	/**
	 * Get song metadata
	 */
	public static getApiV2SongByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidResponse,
			GetApiV2SongByUuidError
		>({
			...options,
			url: '/api/v2/song/{uuid}'
		});
	}

	/**
	 * Get song metadata
	 */
	public static getApiV28SongByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV28SongByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV28SongByUuidResponse,
			GetApiV28SongByUuidError
		>({
			...options,
			url: '/api/v2.8/song/{uuid}'
		});
	}

	/**
	 * Get song metadata
	 */
	public static getApiV225SongByUuid<ThrowOnError extends boolean = false>(
		options: Options<GetApiV225SongByUuidData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV225SongByUuidResponse,
			GetApiV225SongByUuidError
		>({
			...options,
			url: '/api/v2.25/song/{uuid}'
		});
	}

	/**
	 * Get song by ISRC
	 */
	public static getApiV2SongByIsrcByIsrc<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByIsrcByIsrcData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByIsrcByIsrcResponse,
			GetApiV2SongByIsrcByIsrcError
		>({
			...options,
			url: '/api/v2/song/by-isrc/{isrc}'
		});
	}

	/**
	 * Get song by ISRC
	 */
	public static getApiV28SongByIsrcByIsrc<ThrowOnError extends boolean = false>(
		options: Options<GetApiV28SongByIsrcByIsrcData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV28SongByIsrcByIsrcResponse,
			GetApiV28SongByIsrcByIsrcError
		>({
			...options,
			url: '/api/v2.8/song/by-isrc/{isrc}'
		});
	}

	/**
	 * Get song by ISRC
	 */
	public static getApiV225SongByIsrcByIsrc<ThrowOnError extends boolean = false>(
		options: Options<GetApiV225SongByIsrcByIsrcData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV225SongByIsrcByIsrcResponse,
			GetApiV225SongByIsrcByIsrcError
		>({
			...options,
			url: '/api/v2.25/song/by-isrc/{isrc}'
		});
	}

	/**
	 * Get song by platform ID
	 */
	public static getApiV2SongByPlatformByPlatformByIdentifier<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByPlatformByPlatformByIdentifierData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByPlatformByPlatformByIdentifierResponse,
			GetApiV2SongByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2/song/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get song by platform ID
	 */
	public static getApiV28SongByPlatformByPlatformByIdentifier<ThrowOnError extends boolean = false>(
		options: Options<GetApiV28SongByPlatformByPlatformByIdentifierData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV28SongByPlatformByPlatformByIdentifierResponse,
			GetApiV28SongByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2.8/song/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get song by platform ID
	 */
	public static getApiV225SongByPlatformByPlatformByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV225SongByPlatformByPlatformByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV225SongByPlatformByPlatformByIdentifierResponse,
			GetApiV225SongByPlatformByPlatformByIdentifierError
		>({
			...options,
			url: '/api/v2.25/song/by-platform/{platform}/{identifier}'
		});
	}

	/**
	 * Get IDs
	 */
	public static getApiV2SongByUuidIdentifiers<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidIdentifiersData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidIdentifiersResponse,
			GetApiV2SongByUuidIdentifiersError
		>({
			...options,
			url: '/api/v2/song/{uuid}/identifiers'
		});
	}

	/**
	 * Get albums
	 */
	public static getApiV2SongByUuidAlbums<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidAlbumsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidAlbumsResponse,
			GetApiV2SongByUuidAlbumsError
		>({
			...options,
			url: '/api/v2/song/{uuid}/albums'
		});
	}

	/**
	 * Get TikTok IDs
	 */
	public static getApiV2SongByUuidTiktokMusics<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidTiktokMusicsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidTiktokMusicsResponse,
			GetApiV2SongByUuidTiktokMusicsError
		>({
			...options,
			url: '/api/v2/song/{uuid}/tiktok/musics'
		});
	}

	/**
	 * Get YouTube IDs
	 */
	public static getApiV2SongByUuidYoutubeVideos<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidYoutubeVideosData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidYoutubeVideosResponse,
			GetApiV2SongByUuidYoutubeVideosError
		>({
			...options,
			url: '/api/v2/song/{uuid}/youtube/videos'
		});
	}

	/**
	 * Get YouTube IDs
	 */
	public static getApiV216SongByUuidYoutubeVideos<ThrowOnError extends boolean = false>(
		options: Options<GetApiV216SongByUuidYoutubeVideosData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV216SongByUuidYoutubeVideosResponse,
			GetApiV216SongByUuidYoutubeVideosError
		>({
			...options,
			url: '/api/v2.16/song/{uuid}/youtube/videos'
		});
	}

	/**
	 * Get audience
	 */
	public static getApiV2SongByUuidAudienceByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidAudienceByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidAudienceByPlatformResponse,
			GetApiV2SongByUuidAudienceByPlatformError
		>({
			...options,
			url: '/api/v2/song/{uuid}/audience/{platform}'
		});
	}

	/**
	 * Get Spotify streams
	 */
	public static getApiV2SongByUuidSpotifyStream<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidSpotifyStreamData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidSpotifyStreamResponse,
			GetApiV2SongByUuidSpotifyStreamError
		>({
			...options,
			url: '/api/v2/song/{uuid}/spotify/stream'
		});
	}

	/**
	 * Get Spotify streams
	 */
	public static getApiV224SongByUuidSpotifyStream<ThrowOnError extends boolean = false>(
		options: Options<GetApiV224SongByUuidSpotifyStreamData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV224SongByUuidSpotifyStreamResponse,
			GetApiV224SongByUuidSpotifyStreamError
		>({
			...options,
			url: '/api/v2.24/song/{uuid}/spotify/stream'
		});
	}

	/**
	 * Get YouTube views
	 */
	public static getApiV2SongByUuidYoutubeViews<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidYoutubeViewsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidYoutubeViewsResponse,
			GetApiV2SongByUuidYoutubeViewsError
		>({
			...options,
			url: '/api/v2/song/{uuid}/youtube/views'
		});
	}

	/**
	 * Get YouTube views by ID (deprecated)
	 */
	public static getApiV2SongByUuidYoutubeViewsVideoByIdentifier<
		ThrowOnError extends boolean = false
	>(options: Options<GetApiV2SongByUuidYoutubeViewsVideoByIdentifierData, ThrowOnError>) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidYoutubeViewsVideoByIdentifierResponse,
			GetApiV2SongByUuidYoutubeViewsVideoByIdentifierError
		>({
			...options,
			url: '/api/v2/song/{uuid}/youtube/views/video/{identifier}'
		});
	}

	/**
	 * Get Shazam count
	 */
	public static getApiV2SongByUuidShazamCount<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidShazamCountData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidShazamCountResponse,
			GetApiV2SongByUuidShazamCountError
		>({
			...options,
			url: '/api/v2/song/{uuid}/shazam/count'
		});
	}

	/**
	 * Get Shazam count
	 */
	public static getApiV224SongByUuidShazamCount<ThrowOnError extends boolean = false>(
		options: Options<GetApiV224SongByUuidShazamCountData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV224SongByUuidShazamCountResponse,
			GetApiV224SongByUuidShazamCountError
		>({
			...options,
			url: '/api/v2.24/song/{uuid}/shazam/count'
		});
	}

	/**
	 * Get Spotify popularity
	 */
	public static getApiV2SongByUuidSpotifyIdentifierPopularity<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidSpotifyIdentifierPopularityData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidSpotifyIdentifierPopularityResponse,
			GetApiV2SongByUuidSpotifyIdentifierPopularityError
		>({
			...options,
			url: '/api/v2/song/{uuid}/spotify/identifier/popularity'
		});
	}

	/**
	 * Get Spotify popularity (deprecated)
	 */
	public static getApiV2SongByUuidSpotifyPopularity<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidSpotifyPopularityData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidSpotifyPopularityResponse,
			GetApiV2SongByUuidSpotifyPopularityError
		>({
			...options,
			url: '/api/v2/song/{uuid}/spotify/popularity'
		});
	}

	/**
	 * Get chart entries
	 */
	public static getApiV2SongByUuidChartsRanksByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidChartsRanksByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidChartsRanksByPlatformResponse,
			GetApiV2SongByUuidChartsRanksByPlatformError
		>({
			...options,
			url: '/api/v2/song/{uuid}/charts/ranks/{platform}'
		});
	}

	/**
	 * Get playlist entries
	 */
	public static getApiV2SongByUuidPlaylistCurrentByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidPlaylistCurrentByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidPlaylistCurrentByPlatformResponse,
			GetApiV2SongByUuidPlaylistCurrentByPlatformError
		>({
			...options,
			url: '/api/v2/song/{uuid}/playlist/current/{platform}'
		});
	}

	/**
	 * Get playlist entries
	 */
	public static getApiV220SongByUuidPlaylistCurrentByPlatform<ThrowOnError extends boolean = false>(
		options: Options<GetApiV220SongByUuidPlaylistCurrentByPlatformData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV220SongByUuidPlaylistCurrentByPlatformResponse,
			GetApiV220SongByUuidPlaylistCurrentByPlatformError
		>({
			...options,
			url: '/api/v2.20/song/{uuid}/playlist/current/{platform}'
		});
	}

	/**
	 * Get radio spins
	 */
	public static getApiV2SongByUuidBroadcasts<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidBroadcastsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidBroadcastsResponse,
			GetApiV2SongByUuidBroadcastsError
		>({
			...options,
			url: '/api/v2/song/{uuid}/broadcasts'
		});
	}

	/**
	 * Get radio spin count
	 */
	public static getApiV2SongByUuidBroadcastGroups<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2SongByUuidBroadcastGroupsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SongByUuidBroadcastGroupsResponse,
			GetApiV2SongByUuidBroadcastGroupsError
		>({
			...options,
			url: '/api/v2/song/{uuid}/broadcast-groups'
		});
	}

	/**
	 * Add links
	 */
	public static postApiV2SongByUuidSourcesAdd<ThrowOnError extends boolean = false>(
		options: Options<PostApiV2SongByUuidSourcesAddData, ThrowOnError>
	) {
		return (options?.client ?? client).post<
			ThrowOnError,
			PostApiV2SongByUuidSourcesAddResponse,
			PostApiV2SongByUuidSourcesAddError
		>({
			...options,
			url: '/api/v2/song/{uuid}/sources/add'
		});
	}
}

export class TikTokService {
	/**
	 * Get music
	 */
	public static getApiV2TiktokMusicByIdentifier<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokMusicByIdentifierData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokMusicByIdentifierResponse,
			GetApiV2TiktokMusicByIdentifierError
		>({
			...options,
			url: '/api/v2/tiktok/music/{identifier}'
		});
	}

	/**
	 * Get music video count
	 */
	public static getApiV2TiktokMusicByIdentifierVideoVolume<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokMusicByIdentifierVideoVolumeData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokMusicByIdentifierVideoVolumeResponse,
			GetApiV2TiktokMusicByIdentifierVideoVolumeError
		>({
			...options,
			url: '/api/v2/tiktok/music/{identifier}/video/volume'
		});
	}

	/**
	 * Get music videos
	 */
	public static getApiV2TiktokMusicByIdentifierVideos<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokMusicByIdentifierVideosData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokMusicByIdentifierVideosResponse,
			GetApiV2TiktokMusicByIdentifierVideosError
		>({
			...options,
			url: '/api/v2/tiktok/music/{identifier}/videos'
		});
	}

	/**
	 * Get user
	 */
	public static getApiV2TiktokUserByUsername<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokUserByUsernameData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokUserByUsernameResponse,
			GetApiV2TiktokUserByUsernameError
		>({
			...options,
			url: '/api/v2/tiktok/user/{username}'
		});
	}

	/**
	 * Get user videos
	 */
	public static getApiV2TiktokUserByUsernameVideos<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokUserByUsernameVideosData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokUserByUsernameVideosResponse,
			GetApiV2TiktokUserByUsernameVideosError
		>({
			...options,
			url: '/api/v2/tiktok/user/{username}/videos'
		});
	}

	/**
	 * Get user audience (deprecated)
	 */
	public static getApiV2TiktokUserByUsernameAudience<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokUserByUsernameAudienceData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokUserByUsernameAudienceResponse,
			GetApiV2TiktokUserByUsernameAudienceError
		>({
			...options,
			url: '/api/v2/tiktok/user/{username}/audience'
		});
	}

	/**
	 * Get user audience (deprecated)
	 */
	public static getApiV211TiktokUserByUsernameAudience<ThrowOnError extends boolean = false>(
		options: Options<GetApiV211TiktokUserByUsernameAudienceData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV211TiktokUserByUsernameAudienceResponse,
			GetApiV211TiktokUserByUsernameAudienceError
		>({
			...options,
			url: '/api/v2.11/tiktok/user/{username}/audience'
		});
	}

	/**
	 * Get video
	 */
	public static getApiV2TiktokVideoByIdentifier<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokVideoByIdentifierData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokVideoByIdentifierResponse,
			GetApiV2TiktokVideoByIdentifierError
		>({
			...options,
			url: '/api/v2/tiktok/video/{identifier}'
		});
	}

	/**
	 * Get video audience
	 */
	public static getApiV2TiktokVideoByIdentifierAudience<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2TiktokVideoByIdentifierAudienceData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2TiktokVideoByIdentifierAudienceResponse,
			GetApiV2TiktokVideoByIdentifierAudienceError
		>({
			...options,
			url: '/api/v2/tiktok/video/{identifier}/audience'
		});
	}

	/**
	 * Add music links
	 */
	public static postApiV2TiktokMusicUrlsAdd<ThrowOnError extends boolean = false>(
		options: Options<PostApiV2TiktokMusicUrlsAddData, ThrowOnError>
	) {
		return (options?.client ?? client).post<
			ThrowOnError,
			PostApiV2TiktokMusicUrlsAddResponse,
			PostApiV2TiktokMusicUrlsAddError
		>({
			...options,
			url: '/api/v2/tiktok/music/urls/add'
		});
	}

	/**
	 * Add user links
	 */
	public static postApiV2TiktokUserUrlsAdd<ThrowOnError extends boolean = false>(
		options: Options<PostApiV2TiktokUserUrlsAddData, ThrowOnError>
	) {
		return (options?.client ?? client).post<
			ThrowOnError,
			PostApiV2TiktokUserUrlsAddResponse,
			PostApiV2TiktokUserUrlsAddError
		>({
			...options,
			url: '/api/v2/tiktok/user/urls/add'
		});
	}
}

export class UserService {
	/**
	 * Get blocklists artists
	 */
	public static getApiV2UserByEmailBlocklistArtists<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2UserByEmailBlocklistArtistsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2UserByEmailBlocklistArtistsResponse,
			GetApiV2UserByEmailBlocklistArtistsError
		>({
			...options,
			url: '/api/v2/user/{email}/blocklist/artists'
		});
	}

	/**
	 * Get blocklists songs
	 */
	public static getApiV2UserByEmailBlocklistSongs<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2UserByEmailBlocklistSongsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2UserByEmailBlocklistSongsResponse,
			GetApiV2UserByEmailBlocklistSongsError
		>({
			...options,
			url: '/api/v2/user/{email}/blocklist/songs'
		});
	}

	/**
	 * Get blocklists labels
	 */
	public static getApiV2UserByEmailBlocklistLabels<ThrowOnError extends boolean = false>(
		options: Options<GetApiV2UserByEmailBlocklistLabelsData, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2UserByEmailBlocklistLabelsResponse,
			GetApiV2UserByEmailBlocklistLabelsError
		>({
			...options,
			url: '/api/v2/user/{email}/blocklist/labels'
		});
	}
}

export class DefaultService {
	public static getApiV2SwaggerJson<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2SwaggerJsonResponse,
			GetApiV2SwaggerJsonError
		>({
			...options,
			url: '/api/v2/swagger.json'
		});
	}

	public static getApiV2DocJson<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<
			ThrowOnError,
			GetApiV2DocJsonResponse,
			GetApiV2DocJsonError
		>({
			...options,
			url: '/api/v2/doc.json'
		});
	}

	public static getApiV2Doc<ThrowOnError extends boolean = false>(
		options?: Options<unknown, ThrowOnError>
	) {
		return (options?.client ?? client).get<ThrowOnError, GetApiV2DocResponse, GetApiV2DocError>({
			...options,
			url: '/api/v2/doc'
		});
	}
}
