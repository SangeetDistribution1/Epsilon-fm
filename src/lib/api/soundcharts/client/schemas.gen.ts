// This file is auto-generated by @hey-api/openapi-ts

export const $AlbumResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Album'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumResponse2 = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Album2'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumResponse3 = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Album3'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumIdentifierCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/AlbumLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Identifier'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumTrackCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/AlbumLight2'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumTrack'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumTrackCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/AlbumLight'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumTrack'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RankCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/AlbumLight2'
		},
		items: {
			items: {
				$ref: '#/definitions/Rank'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RankCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/AlbumLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Rank'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ArtistResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Artist'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ArtistResponse2 = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Artist2'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ArtistCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ArtistIdentifierCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Identifier'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/SongLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/SongLightReleaseDate'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumLightReleaseDate'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumCollectionResponse3 = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumLight2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumCollectionResponse4 = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/TypedAlbumLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AudiencePlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SocialAccount'
		},
		items: {
			items: {
				$ref: '#/definitions/AudiencePlot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SocialPlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SocialAccount'
		},
		items: {
			items: {
				$ref: '#/definitions/SocialPlot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $GlobalAudiencePlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SocialAccount'
		},
		items: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $StreamingPlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SocialAccount'
		},
		items: {
			items: {
				$ref: '#/definitions/StreamingPlot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RetentionPlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/StreamingAccount'
		},
		items: {
			items: {
				$ref: '#/definitions/RetentionPlot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PopularityPlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/StreamingAccount'
		},
		items: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AudienceReportResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Report'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AudienceReportDateCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SocialAccount'
		},
		items: {
			type: 'string',
			format: 'date-time'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RankCollectionResponse3 = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Rank2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumRankCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumRank'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumRankCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumRank2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TrackCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Track'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TrackCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/ArtistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Track2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $BroadcastCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Broadcast'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $EventCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/EventAccount'
		},
		items: {
			items: {
				$ref: '#/definitions/Event'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TopArtistCollectionResponse = {
	properties: {
		related: {
			items: {
				$ref: '#/definitions/TopRelated'
			},
			type: 'array'
		},
		items: {
			items: {
				$ref: '#/definitions/MetricArtist'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TopSongCollectionResponse = {
	properties: {
		related: {
			items: {
				$ref: '#/definitions/TopRelated'
			},
			type: 'array'
		},
		items: {
			items: {
				$ref: '#/definitions/MetricSong'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TopBroadcastCollectionResponse = {
	properties: {
		related: {
			items: {
				$ref: '#/definitions/TopRelated'
			},
			type: 'array'
		},
		items: {
			items: {
				$ref: '#/definitions/MetricBroadcast'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ChartCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/ChartLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ChartSongRankCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/Ranking'
		},
		items: {
			items: {
				$ref: '#/definitions/SongRank'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ChartSongRankCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/Ranking2'
		},
		items: {
			items: {
				$ref: '#/definitions/SongRank2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AvailableRankingCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/ChartLight'
		},
		items: {
			items: {
				type: 'string',
				format: 'date-time'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ChartAlbumRankCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/Ranking'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumRank3'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ChartAlbumRankCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/Ranking'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumRank4'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TiktokMusicRankCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/TiktokRanking'
		},
		items: {
			items: {
				$ref: '#/definitions/TiktokMusicRank'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AvailableTiktokMusicRankingCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/TiktokChart'
		},
		items: {
			items: {
				type: 'string',
				format: 'date-time'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ArtistIdentifierCollectionResponse2 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/ArtistIdentifier'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $IdentifiersSubmittedResponse = {
	properties: {
		sent: {
			type: 'integer'
		},
		updated: {
			type: 'integer'
		},
		duplicate: {
			type: 'integer'
		},
		ignored: {
			type: 'integer'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongIdentifierCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/SongIdentifier'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PlaylistResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Playlist'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PlaylistResponse2 = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Playlist2'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $OwnerCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/Owner'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PlaylistCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/Owner'
		},
		items: {
			items: {
				$ref: '#/definitions/PlaylistLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PlaylistCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/Owner'
		},
		items: {
			items: {
				$ref: '#/definitions/PlaylistLight2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PlaylistCollectionResponse3 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/PlaylistLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AudiencePlotCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/PlaylistLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AudiencePlotCollectionResponse3 = {
	properties: {
		related: {
			$ref: '#/definitions/PlaylistLight2'
		},
		items: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PlaylistCollectionResponse4 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/PlaylistLight2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TrackCollectionResponse3 = {
	properties: {
		related: {
			$ref: '#/definitions/TrackListing'
		},
		items: {
			items: {
				$ref: '#/definitions/Track3'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TrackCollectionResponse4 = {
	properties: {
		related: {
			$ref: '#/definitions/TrackListing2'
		},
		items: {
			items: {
				$ref: '#/definitions/Track3'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TracklistingDateCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/PlaylistLight'
		},
		items: {
			items: {
				type: 'string',
				format: 'date-time'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $TracklistingDateCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/PlaylistLight2'
		},
		items: {
			items: {
				type: 'string',
				format: 'date-time'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RadioCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/RadioLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RadioCollectionResponse2 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/Radio'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RadioCollectionResponse3 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/RadioLight2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $LiveFeedCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/RadioLight'
		},
		items: {
			items: {
				$ref: '#/definitions/SongBroadcast'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PlatformCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/Platform'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $CountryCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/Country'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $CityCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/City'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongCollectionResponse3 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/SongLightReleaseDate'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ResolveExternalUrlResponse = {
	properties: {
		type: {
			type: 'string'
		},
		url: {
			type: 'string'
		},
		uuid: {
			type: 'string'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Song'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongResponse2 = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Song2'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongResponse3 = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/Song3'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongIdentifierCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Identifier'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $AlbumCollectionResponse5 = {
	properties: {
		related: {
			$ref: '#/definitions/SongLightReleaseDate'
		},
		items: {
			items: {
				$ref: '#/definitions/AlbumLightDefault'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $MusicCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Music'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $VideoCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Video'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $VideoCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Video2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongPlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/AudiencePlot2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongPlotCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $YoutubeViewsPlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/SongVideoPlot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RankCollectionResponse4 = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Rank3'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PositionCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Position'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $PositionCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/SongLight'
		},
		items: {
			items: {
				$ref: '#/definitions/Position2'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $MusicResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/MusicFull'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $VideoVolumePlotCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/Music'
		},
		items: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $VideoCollectionResponse3 = {
	properties: {
		related: {
			$ref: '#/definitions/Music'
		},
		items: {
			items: {
				$ref: '#/definitions/Video3'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $UserResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/UserFull'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $UserVideoCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/User'
		},
		items: {
			items: {
				$ref: '#/definitions/VideoLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $UserAudienceCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/User'
		},
		items: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $UserAudienceCollectionResponse2 = {
	properties: {
		related: {
			$ref: '#/definitions/User'
		},
		items: {
			items: {
				$ref: '#/definitions/UserAudience'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $VideoResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/VideoFull'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $VideoAudienceCollectionResponse = {
	properties: {
		related: {
			$ref: '#/definitions/Video3'
		},
		items: {
			items: {
				$ref: '#/definitions/VideoAudience'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $UrlsSubmittedResponse = {
	properties: {
		type: {
			type: 'string'
		},
		object: {
			$ref: '#/definitions/UrlsSubmitted'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $ArtistCollectionResponse2 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongCollectionResponse4 = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/SongLight'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $LabelCollectionResponse = {
	properties: {
		items: {
			items: {
				$ref: '#/definitions/Label'
			},
			type: 'array'
		},
		page: {
			$ref: '#/definitions/OffsetPage'
		},
		errors: {
			items: {
				$ref: '#/definitions/Error'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Album = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		artists: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		upc: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		label: {
			type: 'string'
		},
		totalTracks: {
			type: 'integer'
		},
		copyright: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		uuid: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Error = {
	properties: {
		key: {
			type: 'string'
		},
		code: {
			type: 'integer'
		},
		message: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Album2 = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		artists: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		upc: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		label: {
			type: 'string'
		},
		totalTracks: {
			type: 'integer'
		},
		copyright: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Album3 = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		artists: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		upc: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		label: {
			type: 'string'
		},
		totalTracks: {
			type: 'integer'
		},
		copyright: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $AlbumLight = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		slug: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Identifier = {
	properties: {
		platformName: {
			type: 'string'
		},
		platformCode: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		},
		url: {
			type: 'string'
		},
		default: {
			type: 'boolean'
		}
	},
	type: 'object'
} as const;

export const $OffsetPage = {
	properties: {
		offset: {
			type: 'integer'
		},
		limit: {
			type: 'integer'
		},
		next: {
			type: 'string'
		},
		previous: {
			type: 'string'
		},
		total: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $AlbumLight2 = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		uuid: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $AlbumTrack = {
	properties: {
		discNumber: {
			type: 'integer'
		},
		number: {
			type: 'integer'
		},
		song: {
			$ref: '#/definitions/SongLight'
		}
	},
	type: 'object'
} as const;

export const $Rank = {
	properties: {
		chart: {
			$ref: '#/definitions/Chart'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		peakDate: {
			type: 'string',
			format: 'date-time'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		current: {
			type: 'boolean'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Artist = {
	properties: {
		uuid: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		appUrl: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Artist2 = {
	properties: {
		uuid: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		appUrl: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		genres: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		biography: {
			type: 'string'
		},
		isni: {
			type: 'string'
		},
		ipi: {
			type: 'string'
		},
		gender: {
			type: 'string'
		},
		type: {
			type: 'string'
		},
		birthDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $ArtistLight = {
	properties: {
		uuid: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		appUrl: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $SongLight = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $SongLightReleaseDate = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $AlbumLightReleaseDate = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $TypedAlbumLight = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		uuid: {
			type: 'string'
		},
		type: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $SocialAccount = {
	properties: {
		artist: {
			$ref: '#/definitions/ArtistLight'
		},
		platform: {
			type: 'string'
		},
		lastCrawlDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $AudiencePlot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		likeCount: {
			type: 'integer'
		},
		followerCount: {
			type: 'integer'
		},
		followingCount: {
			type: 'integer'
		},
		postCount: {
			type: 'integer'
		},
		viewCount: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $SocialPlot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		value: {
			type: 'integer'
		},
		cityPlots: {
			items: {
				$ref: '#/definitions/CityPlot'
			},
			type: 'array'
		},
		countryPlots: {
			items: {
				$ref: '#/definitions/CountryPlot'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Plot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		value: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $StreamingPlot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		value: {
			type: 'integer'
		},
		cityPlots: {
			items: {
				$ref: '#/definitions/CityPlot'
			},
			type: 'array'
		},
		countryPlots: {
			items: {
				$ref: '#/definitions/CountryPlot'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $StreamingAccount = {
	properties: {
		artist: {
			$ref: '#/definitions/ArtistLight'
		},
		platform: {
			type: 'string'
		},
		lastCrawlDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $RetentionPlot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		conversionRate: {
			type: 'number',
			format: 'float'
		},
		followers: {
			type: 'integer'
		},
		listeners: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $Report = {
	properties: {
		top: {
			$ref: '#/definitions/Top'
		},
		audience: {
			$ref: '#/definitions/Audience'
		}
	},
	type: 'object'
} as const;

export const $Rank2 = {
	properties: {
		chart: {
			$ref: '#/definitions/Chart'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		current: {
			type: 'boolean'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		},
		song: {
			$ref: '#/definitions/SongLight'
		}
	},
	type: 'object'
} as const;

export const $AlbumRank = {
	properties: {
		chart: {
			$ref: '#/definitions/Chart'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		current: {
			type: 'boolean'
		},
		oldPosition: {
			type: 'integer'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		},
		album: {
			$ref: '#/definitions/AlbumLight'
		}
	},
	type: 'object'
} as const;

export const $AlbumRank2 = {
	properties: {
		chart: {
			$ref: '#/definitions/Chart'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		current: {
			type: 'boolean'
		},
		oldPosition: {
			type: 'integer'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		},
		album: {
			$ref: '#/definitions/AlbumLight2'
		}
	},
	type: 'object'
} as const;

export const $Track = {
	properties: {
		playlist: {
			$ref: '#/definitions/PlaylistLight'
		},
		position: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		positionDate: {
			type: 'string',
			format: 'date-time'
		},
		peakPositionDate: {
			type: 'string',
			format: 'date-time'
		},
		song: {
			$ref: '#/definitions/SongLight'
		}
	},
	type: 'object'
} as const;

export const $Track2 = {
	properties: {
		playlist: {
			$ref: '#/definitions/PlaylistLight2'
		},
		position: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		positionDate: {
			type: 'string',
			format: 'date-time'
		},
		peakPositionDate: {
			type: 'string',
			format: 'date-time'
		},
		song: {
			$ref: '#/definitions/SongLight'
		}
	},
	type: 'object'
} as const;

export const $Broadcast = {
	properties: {
		airedAt: {
			type: 'string',
			format: 'date-time'
		},
		duration: {
			type: 'integer'
		},
		radio: {
			$ref: '#/definitions/RadioLight'
		}
	},
	type: 'object'
} as const;

export const $EventAccount = {
	properties: {
		artist: {
			$ref: '#/definitions/ArtistLight'
		},
		platform: {
			type: 'string'
		},
		lastCrawlDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $Event = {
	properties: {
		name: {
			type: 'string'
		},
		date: {
			type: 'string',
			format: 'date-time'
		},
		type: {
			type: 'string'
		},
		venue: {
			$ref: '#/definitions/Venue'
		},
		url: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $TopRelated = {
	properties: {
		updatedAt: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $MetricArtist = {
	properties: {
		total: {
			type: 'integer'
		},
		change: {
			type: 'integer'
		},
		percent: {
			type: 'number',
			format: 'float'
		},
		artist: {
			$ref: '#/definitions/ArtistLight'
		}
	},
	type: 'object'
} as const;

export const $MetricSong = {
	properties: {
		total: {
			type: 'integer'
		},
		change: {
			type: 'integer'
		},
		percent: {
			type: 'number',
			format: 'float'
		},
		song: {
			$ref: '#/definitions/SongLight'
		}
	},
	type: 'object'
} as const;

export const $MetricBroadcast = {
	properties: {
		total: {
			type: 'integer'
		},
		change: {
			type: 'integer'
		},
		percent: {
			type: 'number',
			format: 'float'
		},
		radio: {
			$ref: '#/definitions/TopRadio'
		}
	},
	type: 'object'
} as const;

export const $ChartLight = {
	properties: {
		name: {
			type: 'string'
		},
		type: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		platform: {
			type: 'string'
		},
		frequency: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		maxResultsCount: {
			type: 'integer'
		},
		webUrl: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Ranking = {
	properties: {
		chart: {
			$ref: '#/definitions/ChartLight'
		},
		date: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $SongRank = {
	properties: {
		song: {
			$ref: '#/definitions/SongLight'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Ranking2 = {
	properties: {
		chart: {
			$ref: '#/definitions/ChartLight2'
		},
		date: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $SongRank2 = {
	properties: {
		song: {
			$ref: '#/definitions/SongLight'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		metric: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $AlbumRank3 = {
	properties: {
		album: {
			$ref: '#/definitions/AlbumLight'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $AlbumRank4 = {
	properties: {
		album: {
			$ref: '#/definitions/AlbumLight2'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $TiktokRanking = {
	properties: {
		chart: {
			$ref: '#/definitions/TiktokChart'
		},
		date: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $TiktokMusicRank = {
	properties: {
		music: {
			$ref: '#/definitions/Music'
		},
		song: {
			$ref: '#/definitions/SongLight'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		},
		value: {
			type: 'integer'
		},
		oldValue: {
			type: 'integer'
		},
		totalValue: {
			type: 'integer'
		},
		oldTotalValue: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $TiktokChart = {
	properties: {
		frequency: {
			type: 'string'
		},
		type: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $ArtistIdentifier = {
	properties: {
		platformCode: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		},
		artist: {
			$ref: '#/definitions/ArtistLight'
		}
	},
	type: 'object'
} as const;

export const $SongIdentifier = {
	properties: {
		platformCode: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		},
		song: {
			$ref: '#/definitions/SongLight'
		}
	},
	type: 'object'
} as const;

export const $Playlist = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		},
		platform: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		owner: {
			$ref: '#/definitions/Owner'
		},
		latestCrawlDate: {
			type: 'string',
			format: 'date-time'
		},
		latestTrackCount: {
			type: 'integer'
		},
		latestSubscriberCount: {
			type: 'integer'
		},
		type: {
			type: 'string'
		},
		refreshed: {
			type: 'string'
		},
		availableCountryCodes: {
			items: {
				type: 'string'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Playlist2 = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		},
		platform: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		owner: {
			$ref: '#/definitions/Owner'
		},
		latestCrawlDate: {
			type: 'string',
			format: 'date-time'
		},
		latestTrackCount: {
			type: 'integer'
		},
		latestSubscriberCount: {
			type: 'integer'
		},
		type: {
			type: 'string'
		},
		refreshed: {
			type: 'string'
		},
		availableCountryCodes: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		appUrl: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Owner = {
	properties: {
		name: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $PlaylistLight = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		},
		platform: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		latestCrawlDate: {
			type: 'string',
			format: 'date-time'
		},
		latestTrackCount: {
			type: 'integer'
		},
		latestSubscriberCount: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $PlaylistLight2 = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		identifier: {
			type: 'string'
		},
		platform: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		latestCrawlDate: {
			type: 'string',
			format: 'date-time'
		},
		latestTrackCount: {
			type: 'integer'
		},
		latestSubscriberCount: {
			type: 'integer'
		},
		type: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $TrackListing = {
	properties: {
		playlist: {
			$ref: '#/definitions/PlaylistLight'
		},
		date: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $Track3 = {
	properties: {
		position: {
			type: 'integer'
		},
		song: {
			$ref: '#/definitions/SongLight'
		}
	},
	type: 'object'
} as const;

export const $TrackListing2 = {
	properties: {
		playlist: {
			$ref: '#/definitions/PlaylistLight2'
		},
		date: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $RadioLight = {
	properties: {
		name: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			example: 'FR',
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		timeZone: {
			example: 'Europe/Paris',
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Radio = {
	properties: {
		name: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			example: 'FR',
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		timeZone: {
			example: 'Europe/Paris',
			type: 'string'
		},
		reach: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $RadioLight2 = {
	properties: {
		name: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			example: 'FR',
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		timeZone: {
			example: 'Europe/Paris',
			type: 'string'
		},
		reach: {
			type: 'integer'
		},
		firstAiredAt: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $SongBroadcast = {
	properties: {
		song: {
			$ref: '#/definitions/SongLight'
		},
		airedAt: {
			type: 'string',
			format: 'date-time'
		},
		duration: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $Platform = {
	properties: {
		name: {
			type: 'string'
		},
		code: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Country = {
	properties: {
		name: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $City = {
	properties: {
		name: {
			type: 'string'
		},
		region: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		cityKey: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Song = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		isrc: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		artists: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		label: {
			type: 'string'
		},
		copyright: {
			type: 'string'
		},
		appUrl: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		duration: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $Song2 = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		isrc: {
			$ref: '#/definitions/Isrc'
		},
		creditName: {
			type: 'string'
		},
		artists: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		label: {
			type: 'string'
		},
		copyright: {
			type: 'string'
		},
		appUrl: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		duration: {
			type: 'integer'
		},
		genres: {
			items: {
				$ref: '#/definitions/Genre'
			},
			type: 'array'
		},
		composers: {
			items: {
				type: 'string'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Song3 = {
	properties: {
		uuid: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		isrc: {
			$ref: '#/definitions/Isrc'
		},
		creditName: {
			type: 'string'
		},
		artists: {
			items: {
				$ref: '#/definitions/ArtistLight'
			},
			type: 'array'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		copyright: {
			type: 'string'
		},
		appUrl: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		duration: {
			type: 'integer'
		},
		genres: {
			items: {
				$ref: '#/definitions/Genre'
			},
			type: 'array'
		},
		composers: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		producers: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		labels: {
			items: {
				$ref: '#/definitions/Label2'
			},
			type: 'array'
		},
		audio: {
			$ref: '#/definitions/Audio'
		}
	},
	type: 'object'
} as const;

export const $AlbumLightDefault = {
	properties: {
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		},
		releaseDate: {
			type: 'string',
			format: 'date-time'
		},
		uuid: {
			type: 'string'
		},
		default: {
			type: 'boolean'
		},
		type: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Music = {
	properties: {
		identifier: {
			type: 'string'
		},
		title: {
			type: 'string'
		},
		authorName: {
			type: 'string'
		},
		url: {
			type: 'string'
		},
		imgUrl: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Video = {
	properties: {
		identifier: {
			type: 'string'
		},
		url: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Video2 = {
	properties: {
		identifier: {
			type: 'string'
		},
		url: {
			type: 'string'
		},
		name: {
			type: 'string'
		},
		creditName: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $AudiencePlot2 = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		plots: {
			items: {
				$ref: '#/definitions/Plot2'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $SongVideoPlot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		videoPlots: {
			items: {
				$ref: '#/definitions/Plot'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Rank3 = {
	properties: {
		chart: {
			$ref: '#/definitions/Chart'
		},
		position: {
			type: 'integer'
		},
		positionEvolution: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		peakDate: {
			type: 'string',
			format: 'date-time'
		},
		entryState: {
			type: 'string'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		rankDate: {
			type: 'string',
			format: 'date-time'
		},
		oldPosition: {
			type: 'integer'
		},
		current: {
			type: 'boolean'
		},
		timeOnChart: {
			type: 'integer'
		},
		timeOnChartUnit: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Position = {
	properties: {
		playlist: {
			$ref: '#/definitions/PlaylistLight'
		},
		position: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		positionDate: {
			type: 'string',
			format: 'date-time'
		},
		peakPositionDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $Position2 = {
	properties: {
		playlist: {
			$ref: '#/definitions/PlaylistLight2'
		},
		position: {
			type: 'integer'
		},
		peakPosition: {
			type: 'integer'
		},
		entryDate: {
			type: 'string',
			format: 'date-time'
		},
		positionDate: {
			type: 'string',
			format: 'date-time'
		},
		peakPositionDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $MusicFull = {
	properties: {
		identifier: {
			type: 'string'
		},
		title: {
			type: 'string'
		},
		authorName: {
			type: 'string'
		},
		url: {
			type: 'string'
		},
		imgUrl: {
			type: 'string'
		},
		song: {
			$ref: '#/definitions/SongLight'
		},
		latestCrawlDate: {
			type: 'string',
			format: 'date-time'
		},
		firstCrawlDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $Video3 = {
	properties: {
		identifier: {
			type: 'string'
		},
		createdAt: {
			type: 'string',
			format: 'date-time'
		},
		latestAudience: {
			$ref: '#/definitions/VideoAudience'
		},
		user: {
			$ref: '#/definitions/User'
		}
	},
	type: 'object'
} as const;

export const $UserFull = {
	properties: {
		identifier: {
			type: 'string'
		},
		username: {
			type: 'string'
		},
		latestFollowerCount: {
			type: 'integer'
		},
		latestCrawlDate: {
			type: 'string',
			format: 'date-time'
		},
		firstCrawlDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $User = {
	properties: {
		identifier: {
			type: 'string'
		},
		username: {
			type: 'string'
		},
		lastFollowerCount: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $VideoLight = {
	properties: {
		identifier: {
			type: 'string'
		},
		createdAt: {
			type: 'string',
			format: 'date-time'
		},
		latestAudience: {
			$ref: '#/definitions/VideoAudience'
		}
	},
	type: 'object'
} as const;

export const $UserAudience = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		likeCount: {
			type: 'integer'
		},
		followerCount: {
			type: 'integer'
		},
		followingCount: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $VideoFull = {
	properties: {
		identifier: {
			type: 'string'
		},
		createdAt: {
			type: 'string',
			format: 'date-time'
		},
		latestAudience: {
			$ref: '#/definitions/VideoAudience'
		},
		user: {
			$ref: '#/definitions/User'
		},
		latestCrawlDate: {
			type: 'string',
			format: 'date-time'
		},
		firstCrawlDate: {
			type: 'string',
			format: 'date-time'
		}
	},
	type: 'object'
} as const;

export const $VideoAudience = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		commentCount: {
			type: 'integer'
		},
		likeCount: {
			type: 'integer'
		},
		playCount: {
			type: 'integer'
		},
		shareCount: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $UrlsSubmitted = {
	properties: {
		invalidUrls: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		validUrls: {
			items: {
				type: 'string'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Label = {
	properties: {
		label: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Chart = {
	properties: {
		name: {
			type: 'string'
		},
		type: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		platform: {
			type: 'string'
		},
		frequency: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		maxResultsCount: {
			type: 'integer'
		},
		webUrl: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $CityPlot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		value: {
			type: 'integer'
		},
		countryName: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		region: {
			type: 'string'
		},
		cityName: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $CountryPlot = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		value: {
			type: 'integer'
		},
		countryName: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Top = {
	properties: {
		mentions: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		hashtags: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		posts: {
			items: {
				$ref: '#/definitions/Post'
			},
			type: 'array'
		},
		reels: {
			items: {
				$ref: '#/definitions/Reel'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Audience = {
	properties: {
		stats: {
			$ref: '#/definitions/Stats'
		},
		audienceLike: {
			$ref: '#/definitions/AudienceDetail'
		},
		audienceFollower: {
			$ref: '#/definitions/AudienceDetail'
		},
		brandsAffinity: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		interests: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		relevantTags: {
			items: {
				$ref: '#/definitions/RelevantTag'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Venue = {
	properties: {
		name: {
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			type: 'string'
		},
		capacity: {
			type: 'string'
		},
		popularity: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $TopRadio = {
	properties: {
		name: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			example: 'FR',
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		timeZone: {
			example: 'Europe/Paris',
			type: 'string'
		},
		reach: {
			type: 'integer'
		},
		genres: {
			items: {
				type: 'string'
			},
			type: 'array'
		},
		trackAge: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $ChartLight2 = {
	properties: {
		name: {
			type: 'string'
		},
		type: {
			type: 'string'
		},
		slug: {
			type: 'string'
		},
		platform: {
			type: 'string'
		},
		frequency: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			type: 'string'
		},
		cityName: {
			type: 'string'
		},
		maxResultsCount: {
			type: 'integer'
		},
		webUrl: {
			type: 'string'
		},
		metric: {
			$ref: '#/definitions/Metric'
		}
	},
	type: 'object'
} as const;

export const $Isrc = {
	properties: {
		value: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Genre = {
	properties: {
		root: {
			type: 'string'
		},
		sub: {
			items: {
				type: 'string'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Label2 = {
	properties: {
		name: {
			type: 'string'
		},
		type: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Audio = {
	properties: {
		danceability: {
			type: 'number',
			format: 'float'
		},
		energy: {
			type: 'number',
			format: 'float'
		},
		instrumentalness: {
			type: 'number',
			format: 'float'
		},
		key: {
			type: 'integer'
		},
		liveness: {
			type: 'number',
			format: 'float'
		},
		loudness: {
			type: 'number',
			format: 'float'
		},
		mode: {
			type: 'integer'
		},
		speechiness: {
			type: 'number',
			format: 'float'
		},
		tempo: {
			type: 'number',
			format: 'float'
		},
		timeSignature: {
			type: 'integer'
		},
		valence: {
			type: 'number',
			format: 'float'
		}
	},
	type: 'object'
} as const;

export const $Plot2 = {
	properties: {
		identifier: {
			type: 'string'
		},
		value: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $CodeWeight = {
	properties: {
		code: {
			type: 'string'
		},
		weight: {
			type: 'number',
			format: 'float'
		}
	},
	type: 'object'
} as const;

export const $Post = {
	properties: {
		likeCount: {
			type: 'integer'
		},
		commentCount: {
			type: 'integer'
		},
		date: {
			type: 'string',
			format: 'date-time'
		},
		imageUrl: {
			type: 'string'
		},
		url: {
			type: 'string'
		},
		text: {
			type: 'string'
		},
		mentions: {
			items: {
				type: 'string'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Reel = {
	properties: {
		date: {
			type: 'string',
			format: 'date-time'
		},
		url: {
			type: 'string'
		},
		text: {
			type: 'string'
		},
		likeCount: {
			type: 'integer'
		},
		commentCount: {
			type: 'integer'
		},
		playCount: {
			type: 'integer'
		},
		mentions: {
			items: {
				type: 'string'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $Stats = {
	properties: {
		followerCount: {
			type: 'integer'
		},
		postCount: {
			type: 'integer'
		},
		viewCount: {
			type: 'integer'
		},
		engagementCount: {
			type: 'integer'
		},
		averageLikesPerPost: {
			type: 'number',
			format: 'float'
		},
		averageCommentsPerPost: {
			type: 'number',
			format: 'float'
		},
		averageViewsPerPost: {
			type: 'number',
			format: 'float'
		},
		engagementRate: {
			type: 'number',
			format: 'float'
		},
		averageReelsPlays: {
			type: 'integer'
		}
	},
	type: 'object'
} as const;

export const $AudienceDetail = {
	properties: {
		genders: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		ages: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		gendersPerAge: {
			items: {
				$ref: '#/definitions/GenderPerAge'
			},
			type: 'array'
		},
		ethnicities: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		languages: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		countries: {
			items: {
				$ref: '#/definitions/CountryWeight'
			},
			type: 'array'
		},
		cities: {
			items: {
				$ref: '#/definitions/CityWeight'
			},
			type: 'array'
		},
		notableUsers: {
			items: {
				$ref: '#/definitions/User2'
			},
			type: 'array'
		},
		types: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		credibility: {
			type: 'number',
			format: 'float'
		},
		credibilityClass: {
			type: 'string'
		},
		reachabilities: {
			items: {
				$ref: '#/definitions/CodeWeight'
			},
			type: 'array'
		},
		notableUsersRatio: {
			type: 'number',
			format: 'float'
		},
		lookalikes: {
			items: {
				$ref: '#/definitions/Lookalike'
			},
			type: 'array'
		},
		interests: {
			items: {
				$ref: '#/definitions/AffinityWeight'
			},
			type: 'array'
		},
		brandAffinities: {
			items: {
				$ref: '#/definitions/AffinityWeight'
			},
			type: 'array'
		}
	},
	type: 'object'
} as const;

export const $RelevantTag = {
	properties: {
		name: {
			type: 'string'
		},
		distance: {
			type: 'number',
			format: 'float'
		},
		freq: {
			type: 'number',
			format: 'float'
		}
	},
	type: 'object'
} as const;

export const $Metric = {
	properties: {
		type: {
			type: 'string'
		},
		description: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $GenderPerAge = {
	properties: {
		code: {
			type: 'string'
		},
		maleWeight: {
			type: 'number',
			format: 'float'
		},
		femaleWeight: {
			type: 'number',
			format: 'float'
		}
	},
	type: 'object'
} as const;

export const $CountryWeight = {
	properties: {
		weight: {
			type: 'number',
			format: 'float'
		},
		countryName: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $CityWeight = {
	properties: {
		weight: {
			type: 'number',
			format: 'float'
		},
		countryName: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		region: {
			type: 'string'
		},
		cityName: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $User2 = {
	properties: {
		username: {
			type: 'string'
		},
		fullName: {
			type: 'string'
		},
		followerCount: {
			type: 'integer'
		},
		engagementCount: {
			type: 'integer'
		},
		url: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			type: 'string'
		}
	},
	type: 'object'
} as const;

export const $Lookalike = {
	properties: {
		username: {
			type: 'string'
		},
		fullName: {
			type: 'string'
		},
		followerCount: {
			type: 'integer'
		},
		engagementCount: {
			type: 'integer'
		},
		url: {
			type: 'string'
		},
		imageUrl: {
			type: 'string'
		},
		countryCode: {
			type: 'string'
		},
		countryName: {
			type: 'string'
		},
		score: {
			type: 'number',
			format: 'float'
		}
	},
	type: 'object'
} as const;

export const $AffinityWeight = {
	properties: {
		name: {
			type: 'string'
		},
		weight: {
			type: 'number',
			format: 'float'
		},
		affinity: {
			type: 'number',
			format: 'float'
		}
	},
	type: 'object'
} as const;
