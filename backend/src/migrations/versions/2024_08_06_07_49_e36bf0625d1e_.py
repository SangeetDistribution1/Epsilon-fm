"""empty message

Revision ID: e36bf0625d1e
Revises:
Create Date: 2024-08-06 07:49:20.450462

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "e36bf0625d1e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ms_artist",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("soundcharts_artist_id", sa.Uuid(), nullable=True),
        sa.Column(
            "org_id", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column(
            "email", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column(
            "biography", sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False
        ),
        sa.Column(
            "spotify_artist_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "youtube_channel_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "instagram_profile_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "facebook_profile_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "x_profile_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "tiktok_profile_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "soundcloud_profile_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "songkick_profile_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "bandsintown_profile_link",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("org_id"),
        sa.UniqueConstraint("soundcharts_artist_id"),
        comment="Management System artist information",
    )
    op.create_index(op.f("ix_ms_artist_id"), "ms_artist", ["id"], unique=False)
    op.create_index(
        op.f("ix_ms_artist_is_deleted"), "ms_artist", ["is_deleted"], unique=False
    )
    op.create_table(
        "ms_genre",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "genre_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        comment="Management System genre information",
    )
    op.create_index(op.f("ix_ms_genre_id"), "ms_genre", ["id"], unique=False)
    op.create_index(
        op.f("ix_ms_genre_is_deleted"), "ms_genre", ["is_deleted"], unique=False
    )
    op.create_table(
        "ms_subgenre",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "subgenre_name",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        comment="Management System subgenre information",
    )
    op.create_index(op.f("ix_ms_subgenre_id"), "ms_subgenre", ["id"], unique=False)
    op.create_index(
        op.f("ix_ms_subgenre_is_deleted"), "ms_subgenre", ["is_deleted"], unique=False
    )
    op.create_table(
        "system_tier",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "default", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        comment="Tier information",
    )
    op.create_index(op.f("ix_system_tier_id"), "system_tier", ["id"], unique=False)
    op.create_table(
        "system_token_blacklist",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        comment="Token blacklist for authentication",
    )
    op.create_index(
        op.f("ix_system_token_blacklist_id"),
        "system_token_blacklist",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_system_token_blacklist_token"),
        "system_token_blacklist",
        ["token"],
        unique=False,
    )
    op.create_table(
        "admin_user",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tier_id", sa.Uuid(), nullable=True),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False
        ),
        sa.Column(
            "is_superuser",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
        ),
        sa.Column(
            "profile_image_url", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column(
            "username", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False
        ),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tier_id"],
            ["system_tier.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="User account information",
    )
    op.create_index(op.f("ix_admin_user_email"), "admin_user", ["email"], unique=True)
    op.create_index(op.f("ix_admin_user_id"), "admin_user", ["id"], unique=False)
    op.create_index(
        op.f("ix_admin_user_is_deleted"), "admin_user", ["is_deleted"], unique=False
    )
    op.create_index(
        op.f("ix_admin_user_tier_id"), "admin_user", ["tier_id"], unique=False
    )
    op.create_index(
        op.f("ix_admin_user_username"), "admin_user", ["username"], unique=True
    )
    op.create_table(
        "system_rate_limit",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tier_id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("path", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("limit", sa.Integer(), nullable=False),
        sa.Column("period", sa.Integer(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tier_id"],
            ["system_tier.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        comment="Rate limit configuration",
    )
    op.create_index(
        op.f("ix_system_rate_limit_id"), "system_rate_limit", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_system_rate_limit_tier_id"),
        "system_rate_limit",
        ["tier_id"],
        unique=False,
    )
    op.create_table(
        "blog_post",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column(
            "media_url", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column(
            "text", sqlmodel.sql.sqltypes.AutoString(length=63206), nullable=False
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["admin_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Blog post information",
    )
    op.create_index(op.f("ix_blog_post_id"), "blog_post", ["id"], unique=False)
    op.create_index(
        op.f("ix_blog_post_is_deleted"), "blog_post", ["is_deleted"], unique=False
    )
    op.create_index(
        op.f("ix_blog_post_user_id"), "blog_post", ["user_id"], unique=False
    )
    op.create_table(
        "ms_track",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("isrc", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("iswc", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column(
            "track_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column(
            "track_version",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column("birthdate", sa.Date(), nullable=False),
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column(
            "birth_location",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=True,
        ),
        sa.Column(
            "current_location",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=True,
        ),
        sa.Column(
            "track_biography",
            sqlmodel.sql.sqltypes.AutoString(length=1500),
            nullable=True,
        ),
        sa.Column(
            "track_website", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column(
            "spotify_uri", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column(
            "apple_music_uri",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=True,
        ),
        sa.Column(
            "youtube_url", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column("primary_genre_id", sa.Uuid(), nullable=False),
        sa.Column("primary_subgenre_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["primary_genre_id"],
            ["ms_genre.id"],
        ),
        sa.ForeignKeyConstraint(
            ["primary_subgenre_id"],
            ["ms_subgenre.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["admin_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Management System track information",
    )
    op.create_index(op.f("ix_ms_track_id"), "ms_track", ["id"], unique=False)
    op.create_index(
        op.f("ix_ms_track_is_deleted"), "ms_track", ["is_deleted"], unique=False
    )
    op.create_index(op.f("ix_ms_track_user_id"), "ms_track", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_ms_track_user_id"), table_name="ms_track")
    op.drop_index(op.f("ix_ms_track_is_deleted"), table_name="ms_track")
    op.drop_index(op.f("ix_ms_track_id"), table_name="ms_track")
    op.drop_table("ms_track")
    op.drop_index(op.f("ix_blog_post_user_id"), table_name="blog_post")
    op.drop_index(op.f("ix_blog_post_is_deleted"), table_name="blog_post")
    op.drop_index(op.f("ix_blog_post_id"), table_name="blog_post")
    op.drop_table("blog_post")
    op.drop_index(op.f("ix_system_rate_limit_tier_id"), table_name="system_rate_limit")
    op.drop_index(op.f("ix_system_rate_limit_id"), table_name="system_rate_limit")
    op.drop_table("system_rate_limit")
    op.drop_index(op.f("ix_admin_user_username"), table_name="admin_user")
    op.drop_index(op.f("ix_admin_user_tier_id"), table_name="admin_user")
    op.drop_index(op.f("ix_admin_user_is_deleted"), table_name="admin_user")
    op.drop_index(op.f("ix_admin_user_id"), table_name="admin_user")
    op.drop_index(op.f("ix_admin_user_email"), table_name="admin_user")
    op.drop_table("admin_user")
    op.drop_index(
        op.f("ix_system_token_blacklist_token"), table_name="system_token_blacklist"
    )
    op.drop_index(
        op.f("ix_system_token_blacklist_id"), table_name="system_token_blacklist"
    )
    op.drop_table("system_token_blacklist")
    op.drop_index(op.f("ix_system_tier_id"), table_name="system_tier")
    op.drop_table("system_tier")
    op.drop_index(op.f("ix_ms_subgenre_is_deleted"), table_name="ms_subgenre")
    op.drop_index(op.f("ix_ms_subgenre_id"), table_name="ms_subgenre")
    op.drop_table("ms_subgenre")
    op.drop_index(op.f("ix_ms_genre_is_deleted"), table_name="ms_genre")
    op.drop_index(op.f("ix_ms_genre_id"), table_name="ms_genre")
    op.drop_table("ms_genre")
    op.drop_index(op.f("ix_ms_artist_is_deleted"), table_name="ms_artist")
    op.drop_index(op.f("ix_ms_artist_id"), table_name="ms_artist")
    op.drop_table("ms_artist")
    # ### end Alembic commands ###
