{
	"swagger": "2.0",
	"info": {
		"title": "Soundcharts API",
		"description": "Official Soundcharts API",
		"version": 2.34
	},
	"paths": {
		"/api/v2/album/by-uuid/{uuid}": {
			"get": {
				"summary": "Get album metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An album UUID",
						"type": "string",
						"default": "b202abee-d19e-424e-9285-b420f4b98706",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2/album/by-slug/{slug}": {
			"get": {
				"summary": "Get album metadata (deprecated)",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "An album slug",
						"type": "string",
						"default": "when-we-all-fall-asleep-where-do-we-go-1",
						"pattern": "^[a-z0-9-]+$"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.15/album/by-slug/{slug}": {
			"get": {
				"summary": "Get album metadata (deprecated)",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "An album slug",
						"type": "string",
						"default": "when-we-all-fall-asleep-where-do-we-go-1",
						"pattern": "^[a-z0-9-]+$"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2/album/by-upc/{upc}": {
			"get": {
				"summary": "Get album by UPC",
				"parameters": [
					{
						"name": "upc",
						"in": "path",
						"required": true,
						"description": "An UPC code",
						"type": "string",
						"default": "00602577427640"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.15/album/by-upc/{upc}": {
			"get": {
				"summary": "Get album by UPC",
				"parameters": [
					{
						"name": "upc",
						"in": "path",
						"required": true,
						"description": "An UPC code",
						"type": "string",
						"default": "00602577427640"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.26/album/by-upc/{upc}": {
			"get": {
				"summary": "Get album by UPC",
				"parameters": [
					{
						"name": "upc",
						"in": "path",
						"required": true,
						"description": "An UPC code",
						"type": "string",
						"default": "00602577427640"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2/album/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get album by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A album platform Identifier.",
						"type": "string",
						"default": "0S0KGZnfBGSIssfF54WSJh"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse2" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.15/album/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get album by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A album platform Identifier.",
						"type": "string",
						"default": "0S0KGZnfBGSIssfF54WSJh"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse3" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.26/album/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get album by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A album platform Identifier.",
						"type": "string",
						"default": "0S0KGZnfBGSIssfF54WSJh"
					}
				],
				"responses": {
					"200": {
						"description": "An Album response",
						"schema": { "$ref": "#/definitions/AlbumResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.26/album/{uuid}/identifiers": {
			"get": {
				"summary": "Get IDs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An album UUID",
						"type": "string",
						"default": "b202abee-d19e-424e-9285-b420f4b98706",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An Identifier collection response",
						"schema": { "$ref": "#/definitions/AlbumIdentifierCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2/album/{slug}/identifiers": {
			"get": {
				"summary": "Get IDs (deprecated)",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "An album slug",
						"type": "string",
						"default": "when-we-all-fall-asleep-where-do-we-go-1",
						"pattern": "^[a-z0-9-]+$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An Identifier collection response",
						"schema": { "$ref": "#/definitions/AlbumIdentifierCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.26/album/{uuid}/tracks": {
			"get": {
				"summary": "Get tracklisting",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An album UUID",
						"type": "string",
						"default": "b202abee-d19e-424e-9285-b420f4b98706",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "An Album track collection response",
						"schema": { "$ref": "#/definitions/AlbumTrackCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2/album/{slug}/tracks": {
			"get": {
				"summary": "Get tracklisting (deprecated)",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "An album slug",
						"type": "string",
						"default": "when-we-all-fall-asleep-where-do-we-go-1",
						"pattern": "^[a-z0-9-]+$"
					}
				],
				"responses": {
					"200": {
						"description": "An Album track collection response",
						"schema": { "$ref": "#/definitions/AlbumTrackCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2.26/album/{uuid}/charts/ranks/{platform}": {
			"get": {
				"summary": "Get chart entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An album UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A album chart platform code",
						"type": "string",
						"default": "deezer"
					},
					{
						"name": "currentOnly",
						"in": "query",
						"description": "Get only the current positions in charts with 1, or the current and past positions with 0.",
						"type": "integer",
						"default": 1
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, rankDate",
						"type": "string",
						"default": "position"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "A album rank collection response",
						"schema": { "$ref": "#/definitions/RankCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2/album/{slug}/charts/ranks/{platform}": {
			"get": {
				"summary": "Get chart entries (deprecated)",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "An album slug",
						"type": "string",
						"default": "when-we-all-fall-asleep-where-do-we-go-1",
						"pattern": "^[a-z0-9-]+$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A album chart platform code",
						"type": "string",
						"default": "deezer"
					},
					{
						"name": "currentOnly",
						"in": "query",
						"description": "Get only the current positions in charts with 1, or the current and past positions with 0.",
						"type": "integer",
						"default": 1
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, rankDate",
						"type": "string",
						"default": "position"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "A album rank collection response",
						"schema": { "$ref": "#/definitions/RankCollectionResponse2" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Album not found" }
				},
				"tags": ["Album"]
			}
		},
		"/api/v2/artist/{uuid}": {
			"get": {
				"summary": "Get artist metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist response",
						"schema": { "$ref": "#/definitions/ArtistResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.9/artist/{uuid}": {
			"get": {
				"summary": "Get artist metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist response",
						"schema": { "$ref": "#/definitions/ArtistResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get artist by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "An artist platform identifier",
						"type": "string",
						"default": "6qqNVTkY8uBg9cP3Jd7DAH"
					}
				],
				"responses": {
					"200": {
						"description": "An artist response",
						"schema": { "$ref": "#/definitions/ArtistResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No artist found for this platform identifier" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.9/artist/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get artist by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "An artist platform identifier",
						"type": "string",
						"default": "6qqNVTkY8uBg9cP3Jd7DAH"
					}
				],
				"responses": {
					"200": {
						"description": "An artist response",
						"schema": { "$ref": "#/definitions/ArtistResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No artist found for this platform identifier" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/by-country/{countryCode}": {
			"get": {
				"summary": "Get artists by country (deprecated)",
				"parameters": [
					{
						"name": "countryCode",
						"in": "path",
						"required": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": "us",
						"pattern": "^\\w{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An artist collection response",
						"schema": { "$ref": "#/definitions/ArtistCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/identifiers": {
			"get": {
				"summary": "Get IDs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An Identifier collection response",
						"schema": { "$ref": "#/definitions/ArtistIdentifierCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/songs": {
			"get": {
				"summary": "Get songs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : name, releaseDate, spotifyStream, shazamCount, youtubeViews, spotifyPopularity",
						"type": "string",
						"default": "name"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist song collection response",
						"schema": { "$ref": "#/definitions/SongCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": { "description": "You are not authorized to perform this operation" },
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.21/artist/{uuid}/songs": {
			"get": {
				"summary": "Get songs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : name, releaseDate, spotifyStream, shazamCount, youtubeViews, spotifyPopularity",
						"type": "string",
						"default": "name"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist song collection response",
						"schema": { "$ref": "#/definitions/SongCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": { "description": "You are not authorized to perform this operation" },
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/albums": {
			"get": {
				"summary": "Get albums",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : title, releaseDate",
						"type": "string",
						"default": "title"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist album collection response",
						"schema": { "$ref": "#/definitions/AlbumCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.18/artist/{uuid}/albums": {
			"get": {
				"summary": "Get albums",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : title, releaseDate",
						"type": "string",
						"default": "title"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist album collection response",
						"schema": { "$ref": "#/definitions/AlbumCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.26/artist/{uuid}/albums": {
			"get": {
				"summary": "Get albums",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : title, releaseDate",
						"type": "string",
						"default": "title"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist album collection response",
						"schema": { "$ref": "#/definitions/AlbumCollectionResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.34/artist/{uuid}/albums": {
			"get": {
				"summary": "Get albums",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Filter result album list. Available values are : all, album, single, compil",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : title, releaseDate",
						"type": "string",
						"default": "title"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist album collection response",
						"schema": { "$ref": "#/definitions/AlbumCollectionResponse4" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/related": {
			"get": {
				"summary": "Get similar artists",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An Artist Collection response",
						"schema": { "$ref": "#/definitions/ArtistCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/audience/{platform}": {
			"get": {
				"summary": "Get audience",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A social platform code",
						"type": "string",
						"default": "instagram"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-09-24"
					}
				],
				"responses": {
					"200": {
						"description": "A Social Account response along with its audience plots",
						"schema": { "$ref": "#/definitions/AudiencePlotCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/social/{platform}/followers/{year}/{month}": {
			"get": {
				"summary": "Get local audience",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "ca22091a-3c00-11e9-974f-549f35141000",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A social platform code",
						"type": "string",
						"default": "instagram"
					},
					{
						"name": "year",
						"in": "path",
						"required": true,
						"description": "Year YYYY format",
						"type": "integer",
						"default": "2020",
						"pattern": "^\\d{4}$"
					},
					{
						"name": "month",
						"in": "path",
						"required": true,
						"description": "Month MM format",
						"type": "integer",
						"default": "10",
						"pattern": "^\\d{2}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Social Account response along with its data plots",
						"schema": { "$ref": "#/definitions/SocialPlotCollectionResponse" }
					},
					"400": { "description": "Invalid date provided" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/social/{platform}": {
			"get": {
				"summary": "Get followers",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A social platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2020-10-10"
					}
				],
				"responses": {
					"200": {
						"description": "A Social Account response along with its data plots",
						"schema": { "$ref": "#/definitions/SocialPlotCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/streaming/{platform}/listening": {
			"get": {
				"summary": "Get listeners/streams/views",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "ca22091a-3c00-11e9-974f-549f35141000",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-09-24"
					}
				],
				"responses": {
					"200": {
						"description": "Global platform listening audience for a period",
						"schema": { "$ref": "#/definitions/GlobalAudiencePlotCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/streaming/spotify/listeners": {
			"get": {
				"summary": "Get Spotify monthly listeners - latest",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "ca22091a-3c00-11e9-974f-549f35141000",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Streaming Account response with latest Spotify monthly listeners",
						"schema": { "$ref": "#/definitions/StreamingPlotCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/streaming/spotify/listeners/{year}/{month}": {
			"get": {
				"summary": "Get Spotify monthly listeners by month",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "year",
						"in": "path",
						"required": true,
						"description": "Year YYYY format",
						"type": "integer",
						"default": 2020,
						"pattern": "^\\d{4}$"
					},
					{
						"name": "month",
						"in": "path",
						"required": true,
						"description": "Month MM format",
						"type": "integer",
						"default": 10,
						"pattern": "^\\d{2}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Streaming Account response with Spotify monthly listeners",
						"schema": { "$ref": "#/definitions/StreamingPlotCollectionResponse" }
					},
					"400": { "description": "Invalid date provided" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/streaming/youtube/views": {
			"get": {
				"summary": "Get YouTube views - latest",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "ca22091a-3c00-11e9-974f-549f35141000",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Streaming Account response with latest YouTube monthly views",
						"schema": { "$ref": "#/definitions/StreamingPlotCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/streaming/youtube/views/{year}/{month}": {
			"get": {
				"summary": "Get YouTube views by month",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "ca22091a-3c00-11e9-974f-549f35141000",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "year",
						"in": "path",
						"required": true,
						"description": "Year YYYY format",
						"type": "integer",
						"default": 2020,
						"pattern": "^\\d{4}$"
					},
					{
						"name": "month",
						"in": "path",
						"required": true,
						"description": "Month MM format",
						"type": "integer",
						"default": 10,
						"pattern": "^\\d{2}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Streaming Account response with YouTube monthly views",
						"schema": { "$ref": "#/definitions/StreamingPlotCollectionResponse" }
					},
					"400": { "description": "Invalid date provided" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/{platform}/retention": {
			"get": {
				"summary": "Get retention",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A social platform code (spotify, jiosaavn, anghami, youtube)",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2020-10-10"
					}
				],
				"responses": {
					"200": {
						"description": "Retention for a period",
						"schema": { "$ref": "#/definitions/RetentionPlotCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/spotify/popularity": {
			"get": {
				"summary": "Get Spotify popularity",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2020-10-10"
					}
				],
				"responses": {
					"200": {
						"description": "A Streaming Account response with Spotify popularity for a period",
						"schema": { "$ref": "#/definitions/PopularityPlotCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/audience/{platform}/report/latest": {
			"get": {
				"summary": "Get audience report - latest",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A social platform code",
						"type": "string",
						"default": "instagram"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist audience report response",
						"schema": { "$ref": "#/definitions/AudienceReportResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/audience/{platform}/report/available-dates": {
			"get": {
				"summary": "Get audience report dates",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A social platform code",
						"type": "string",
						"default": "instagram"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2020-10-10"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An audience report listing dates collection response",
						"schema": { "$ref": "#/definitions/AudienceReportDateCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/audience/{platform}/report/{date}": {
			"get": {
				"summary": "Get audience report for a date",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A social platform code",
						"type": "string",
						"default": "instagram"
					},
					{
						"name": "date",
						"in": "path",
						"required": true,
						"description": "A report date (YYYY-MM-DD)",
						"type": "string",
						"default": "2020-09-20",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist audience report response",
						"schema": { "$ref": "#/definitions/AudienceReportResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/charts/song/ranks/{platform}": {
			"get": {
				"summary": "Get chart song entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "ca22091a-3c00-11e9-974f-549f35141000",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "An Artist Chart platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "currentOnly",
						"in": "query",
						"description": "Get only the current positions in charts with 1, or the current and past positions with 0.",
						"type": "integer",
						"default": 1
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, rankDate",
						"type": "string",
						"default": "position"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist Chart Song Ranks response",
						"schema": { "$ref": "#/definitions/RankCollectionResponse3" }
					},
					"400": { "description": "Invalid platform code provided" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/charts/album/ranks/{platform}": {
			"get": {
				"summary": "Get chart album entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "An Artist Chart album platform code",
						"type": "string",
						"default": "deezer"
					},
					{
						"name": "currentOnly",
						"in": "query",
						"description": "Get only the current positions in charts with 1, or the current and past positions with 0.",
						"type": "integer",
						"default": 1
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, rankDate",
						"type": "string",
						"default": "position"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist Chart Album Ranks response",
						"schema": { "$ref": "#/definitions/AlbumRankCollectionResponse" }
					},
					"400": { "description": "Invalid platform code provided" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.28/artist/{uuid}/charts/album/ranks/{platform}": {
			"get": {
				"summary": "Get chart album entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "An Artist Chart album platform code",
						"type": "string",
						"default": "deezer"
					},
					{
						"name": "currentOnly",
						"in": "query",
						"description": "Get only the current positions in charts with 1, or the current and past positions with 0.",
						"type": "integer",
						"default": 1
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, rankDate",
						"type": "string",
						"default": "position"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist Chart Album Ranks response",
						"schema": { "$ref": "#/definitions/AlbumRankCollectionResponse2" }
					},
					"400": { "description": "Invalid platform code provided" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/playlist/current/{platform}": {
			"get": {
				"summary": "Get playlist entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "type",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A playlist type. Available values are : \u0027all\u0027 or one of editorial, algorithmic, algotorial, major, charts, curators_listeners, radios, this_is",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, positionDate, entryDate, subscriberCount",
						"type": "string",
						"default": "entryDate"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "desc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist Track Collection response",
						"schema": { "$ref": "#/definitions/TrackCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist Not Found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.20/artist/{uuid}/playlist/current/{platform}": {
			"get": {
				"summary": "Get playlist entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "type",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A playlist type. Available values are : \u0027all\u0027 or one of editorial, algorithmic, algotorial, major, charts, curators_listeners, radios, this_is",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, positionDate, entryDate, subscriberCount",
						"type": "string",
						"default": "entryDate"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "desc"
					}
				],
				"responses": {
					"200": {
						"description": "An Artist Track Collection response",
						"schema": { "$ref": "#/definitions/TrackCollectionResponse2" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist Not Found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/broadcasts": {
			"get": {
				"summary": "Get radio spins",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "radioSlugs",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional radio slugs filter (comma separated)",
						"type": "string",
						"default": "bbc-2,bbc-london"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional country code filter (2 letters ISO 3166-2, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": ""
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Broadcast Collection response",
						"schema": { "$ref": "#/definitions/BroadcastCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/songkick/events": {
			"get": {
				"summary": "Get Songkick events",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "type",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A period type (Available values are : all, concert, festival)",
						"type": "string",
						"default": "all"
					},
					{
						"name": "periodType",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A period type (Available values are : all, past, upcoming)",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : date",
						"type": "string",
						"default": "date"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "Songkick event collection response",
						"schema": { "$ref": "#/definitions/EventCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2.19/artist/{uuid}/songkick/events": {
			"get": {
				"summary": "Get Songkick events",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "type",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A period type (Available values are : all, concert, festival)",
						"type": "string",
						"default": "all"
					},
					{
						"name": "periodType",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A period type (Available values are : all, past, upcoming)",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : date",
						"type": "string",
						"default": "date"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "Songkick event collection response",
						"schema": { "$ref": "#/definitions/EventCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" }
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/artist/{uuid}/sources/add": {
			"post": {
				"summary": "Add links",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "An artist UUID",
						"type": "string",
						"default": "11e81bcc-9c1c-ce38-b96b-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"urls": {
									"items": {
										"example": "https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4",
										"type": "string"
									},
									"type": "array"
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "An Artist response",
						"schema": { "$ref": "#/definitions/ArtistResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Artist not found" },
					"405": {
						"description": "Sandbox only. This operation is not allowed on sandbox environment"
					}
				},
				"tags": ["Artist"]
			}
		},
		"/api/v2/top-artist/{platform}/{metricType}": {
			"get": {
				"summary": "Get artist ranking",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "metricType",
						"in": "path",
						"required": true,
						"description": "followers, monthly_listeners, views, fans, likes, favorites, subscribers, plays",
						"type": "string",
						"default": "followers"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": true,
						"description": "total, change, percent",
						"type": "string",
						"default": "total"
					},
					{
						"name": "period",
						"in": "query",
						"required": true,
						"description": "week, month, quarter",
						"type": "string",
						"default": "week"
					},
					{
						"name": "artistCountryCode",
						"in": "query",
						"required": false,
						"description": "Artist nationality (Country code of 2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": ""
					},
					{
						"name": "minValue",
						"in": "query",
						"required": false,
						"description": "Total audience (min value)",
						"type": "integer",
						"default": "0"
					},
					{
						"name": "maxValue",
						"in": "query",
						"required": false,
						"description": "Total audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "minChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (min value)",
						"type": "integer",
						"default": "-100"
					},
					{
						"name": "maxChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "token",
						"in": "query",
						"required": false,
						"description": "Page token",
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "A Top Artist response with platform followers/fan/likes/subscribres/plays ... for a period",
						"schema": { "$ref": "#/definitions/TopArtistCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/top-artist/country/{countryCode}/{platform}/{metricType}": {
			"get": {
				"summary": "Get artist ranking for a country",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "platform code",
						"type": "string",
						"default": "youtube"
					},
					{
						"name": "countryCode",
						"in": "path",
						"required": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": "US"
					},
					{
						"name": "metricType",
						"in": "path",
						"required": true,
						"description": "followers, views, subscribers, plays",
						"type": "string",
						"default": "views"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": true,
						"description": "total, change, percent",
						"type": "string",
						"default": "total"
					},
					{
						"name": "period",
						"in": "query",
						"required": true,
						"description": "month, quarter",
						"type": "string",
						"default": "month"
					},
					{
						"name": "artistCountryCode",
						"in": "query",
						"required": false,
						"description": "Artist nationality (Country code of 2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": ""
					},
					{
						"name": "minValue",
						"in": "query",
						"required": false,
						"description": "Total audience (min value)",
						"type": "integer",
						"default": "0"
					},
					{
						"name": "maxValue",
						"in": "query",
						"required": false,
						"description": "Total audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "minChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (min value)",
						"type": "integer",
						"default": "-100"
					},
					{
						"name": "maxChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "token",
						"in": "query",
						"required": false,
						"description": "Page token",
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "A Top Artist response with platform followers/fan/likes/subscribres ... for a period",
						"schema": { "$ref": "#/definitions/TopArtistCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/top-artist/city/{cityKey}/{platform}/{metricType}": {
			"get": {
				"summary": "Get artist ranking for a city",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "metricType",
						"in": "path",
						"required": true,
						"description": "followers, views, monthly_listeners",
						"type": "string",
						"default": "monthly_listeners"
					},
					{
						"name": "cityKey",
						"in": "path",
						"required": true,
						"description": "city key",
						"type": "string",
						"default": "FR|paris|"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": true,
						"description": "total, change, percent",
						"type": "string",
						"default": "total"
					},
					{
						"name": "period",
						"in": "query",
						"required": true,
						"description": "month, quarter",
						"type": "string",
						"default": "month"
					},
					{
						"name": "artistCountryCode",
						"in": "query",
						"required": false,
						"description": "Artist nationality (Country code of 2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": ""
					},
					{
						"name": "minValue",
						"in": "query",
						"required": false,
						"description": "Total audience (min value)",
						"type": "integer",
						"default": "0"
					},
					{
						"name": "maxValue",
						"in": "query",
						"required": false,
						"description": "Total audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "minChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (min value)",
						"type": "integer",
						"default": "-100"
					},
					{
						"name": "maxChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "token",
						"in": "query",
						"required": false,
						"description": "Page token",
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "A Top Artist response with platform followers/fan/likes/subscribres ... for a period",
						"schema": { "$ref": "#/definitions/TopArtistCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/top-song/{platform}/{metricType}": {
			"get": {
				"summary": "Get song ranking",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "metricType",
						"in": "path",
						"required": true,
						"description": "streams, views, videos created, favorites, popularity, plays, likes",
						"type": "string",
						"default": "streams"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": true,
						"description": "total, change, percent",
						"type": "string",
						"default": "total"
					},
					{
						"name": "period",
						"in": "query",
						"required": true,
						"description": "week, month, quarter",
						"type": "string",
						"default": "week"
					},
					{
						"name": "songCountryCode",
						"in": "query",
						"required": false,
						"description": "Song nationality (Country code of 2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": ""
					},
					{
						"name": "minValue",
						"in": "query",
						"required": false,
						"description": "Total audience (min value)",
						"type": "integer",
						"default": "0"
					},
					{
						"name": "maxValue",
						"in": "query",
						"required": false,
						"description": "Total audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "minChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (min value)",
						"type": "integer",
						"default": "-100"
					},
					{
						"name": "maxChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "token",
						"in": "query",
						"required": false,
						"description": "Page token",
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "A Top Song response with platform audience, popularity, custom ... for a period",
						"schema": { "$ref": "#/definitions/TopSongCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/top-radio/{platform}/{metricType}": {
			"get": {
				"summary": "Get radio ranking",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "platform code",
						"type": "string",
						"default": "instagram"
					},
					{
						"name": "metricType",
						"in": "path",
						"required": true,
						"description": "fans, followers, reach",
						"type": "string",
						"default": "followers"
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": true,
						"description": "total, change, percent",
						"type": "string",
						"default": "total"
					},
					{
						"name": "period",
						"in": "query",
						"required": true,
						"description": "month, quarter",
						"type": "string",
						"default": "month"
					},
					{
						"name": "radioCountryCode",
						"in": "query",
						"required": false,
						"description": "Radio nationality (Country code of 2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": ""
					},
					{
						"name": "minValue",
						"in": "query",
						"required": false,
						"description": "Total audience (min value)",
						"type": "integer",
						"default": "0"
					},
					{
						"name": "maxValue",
						"in": "query",
						"required": false,
						"description": "Total audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "minChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (min value)",
						"type": "integer",
						"default": "-100"
					},
					{
						"name": "maxChange",
						"in": "query",
						"required": false,
						"description": "Change percentage audience (max value)",
						"type": "integer",
						"default": "150000000"
					},
					{
						"name": "token",
						"in": "query",
						"required": false,
						"description": "Page token",
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "A Top Radio response with platform followers/fan/likes/subscribres ... for a period",
						"schema": { "$ref": "#/definitions/TopBroadcastCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/song/by-platform/{platform}": {
			"get": {
				"summary": "Get song chart list by platform",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A song chart platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Song Chart Collection response",
						"schema": { "$ref": "#/definitions/ChartCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Platform not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/song/{slug}/ranking/latest": {
			"get": {
				"summary": "Get song ranking - latest",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A song chart slug",
						"type": "string",
						"default": "global-28"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Song Chart Rank Collection response",
						"schema": { "$ref": "#/definitions/ChartSongRankCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2.14/chart/song/{slug}/ranking/latest": {
			"get": {
				"summary": "Get song ranking - latest",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A song chart slug",
						"type": "string",
						"default": "global-28"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Song Chart Rank Collection response",
						"schema": { "$ref": "#/definitions/ChartSongRankCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/song/{slug}/available-rankings": {
			"get": {
				"summary": "Get song ranking dates",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A song chart slug",
						"type": "string",
						"default": "global-28"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Chart Ranking Dates Collection response",
						"schema": { "$ref": "#/definitions/AvailableRankingCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/song/{slug}/ranking/{datetime}": {
			"get": {
				"summary": "Get song ranking for a date",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A chart slug",
						"type": "string",
						"default": "global-28"
					},
					{
						"name": "datetime",
						"in": "path",
						"required": true,
						"description": "A ranking date (ATOM format)",
						"type": "string",
						"default": "2020-10-06T18:00:01+00:00",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A song chart ranking collection response",
						"schema": { "$ref": "#/definitions/ChartSongRankCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2.14/chart/song/{slug}/ranking/{datetime}": {
			"get": {
				"summary": "Get song ranking for a date",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A chart slug",
						"type": "string",
						"default": "global-28"
					},
					{
						"name": "datetime",
						"in": "path",
						"required": true,
						"description": "A ranking date (ATOM format)",
						"type": "string",
						"default": "2020-10-06T18:00:01+00:00",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A song chart ranking collection response",
						"schema": { "$ref": "#/definitions/ChartSongRankCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/album/by-platform/{platform}": {
			"get": {
				"summary": "Get album chart list by platform",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "An album chart platform code",
						"type": "string",
						"default": "deezer"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An Album Chart Collection response",
						"schema": { "$ref": "#/definitions/ChartCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Platform not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/album/{slug}/ranking/latest": {
			"get": {
				"summary": "Get album ranking - latest",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A chart slug",
						"type": "string",
						"default": "top-200-metal"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An album chart ranking collection response",
						"schema": { "$ref": "#/definitions/ChartAlbumRankCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2.26/chart/album/{slug}/ranking/latest": {
			"get": {
				"summary": "Get album ranking - latest",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A chart slug",
						"type": "string",
						"default": "top-200-metal"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An album chart ranking collection response",
						"schema": { "$ref": "#/definitions/ChartAlbumRankCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/album/{slug}/available-rankings": {
			"get": {
				"summary": "Get album ranking dates",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A chart slug",
						"type": "string",
						"default": "top-200-metal"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Chart Ranking Dates Collection response",
						"schema": { "$ref": "#/definitions/AvailableRankingCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/album/{slug}/ranking/{datetime}": {
			"get": {
				"summary": "Get album ranking for a date",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A chart slug",
						"type": "string",
						"default": "top-200-metal"
					},
					{
						"name": "datetime",
						"in": "path",
						"required": true,
						"description": "A ranking date (ATOM format)",
						"type": "string",
						"default": "2020-10-10T14:30:02+00:00",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An album chart ranking collection response",
						"schema": { "$ref": "#/definitions/ChartAlbumRankCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2.26/chart/album/{slug}/ranking/{datetime}": {
			"get": {
				"summary": "Get album ranking for a date",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A chart slug",
						"type": "string",
						"default": "top-200-metal"
					},
					{
						"name": "datetime",
						"in": "path",
						"required": true,
						"description": "A ranking date (ATOM format)",
						"type": "string",
						"default": "2020-10-10T14:30:02+00:00",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An album chart ranking collection response",
						"schema": { "$ref": "#/definitions/ChartAlbumRankCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Chart not found" }
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/tiktok/music/weekly/ranking/latest": {
			"get": {
				"summary": "Get TikTok music links ranking - latest",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A TikTok Rank Collection response",
						"schema": { "$ref": "#/definitions/TiktokMusicRankCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/tiktok/music/weekly/available-rankings": {
			"get": {
				"summary": "Get TikTok music links ranking dates",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A TikTok Ranking Dates Collection response",
						"schema": { "$ref": "#/definitions/AvailableTiktokMusicRankingCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/chart/tiktok/music/weekly/ranking/{datetime}": {
			"get": {
				"summary": "Get TikTok music links ranking for a date",
				"parameters": [
					{
						"name": "datetime",
						"in": "path",
						"required": true,
						"description": "A ranking date (ATOM format)",
						"type": "string",
						"default": "2021-05-02T00:00:00+02:00",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A TikTok Rank Collection response",
						"schema": { "$ref": "#/definitions/TiktokMusicRankCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Chart"]
			}
		},
		"/api/v2/library/artist": {
			"get": {
				"summary": "Get artist list",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A artist collection response",
						"schema": { "$ref": "#/definitions/ArtistIdentifierCollectionResponse2" }
					}
				},
				"tags": ["My Library"]
			},
			"post": {
				"summary": "Add artists IDs",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"identifiers": {
									"items": {
										"properties": {
											"identifier": { "example": "9635624", "type": "string" },
											"platformCode": { "example": "deezer", "type": "string" }
										},
										"type": "object"
									},
									"type": "array",
									"maxItems": 100
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "An IdentifierSubmitted response",
						"schema": { "$ref": "#/definitions/IdentifiersSubmittedResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["My Library"]
			},
			"delete": {
				"summary": "Delete artists IDs",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"identifiers": {
									"items": {
										"properties": {
											"identifier": { "example": "9635624", "type": "string" },
											"platformCode": { "example": "deezer", "type": "string" }
										},
										"type": "object"
									},
									"type": "array",
									"maxItems": 100
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "An IdentifierSubmitted response",
						"schema": { "$ref": "#/definitions/IdentifiersSubmittedResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["My Library"]
			}
		},
		"/api/v2/library/song": {
			"get": {
				"summary": "Get song list",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A artist collection response",
						"schema": { "$ref": "#/definitions/SongIdentifierCollectionResponse" }
					}
				},
				"tags": ["My Library"]
			},
			"post": {
				"summary": "Add songs IDs",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"identifiers": {
									"items": {
										"properties": {
											"identifier": { "example": "1577594494", "type": "string" },
											"platformCode": { "example": "apple-music", "type": "string" }
										},
										"type": "object"
									},
									"type": "array",
									"maxItems": 100
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "A SongSubmitted response",
						"schema": { "$ref": "#/definitions/IdentifiersSubmittedResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["My Library"]
			},
			"delete": {
				"summary": "Delete songs IDs",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"identifiers": {
									"items": {
										"properties": {
											"identifier": { "example": "1577594494", "type": "string" },
											"platformCode": { "example": "apple-music", "type": "string" }
										},
										"type": "object"
									},
									"type": "array",
									"maxItems": 100
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "A SongSubmitted response",
						"schema": { "$ref": "#/definitions/IdentifiersSubmittedResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["My Library"]
			}
		},
		"/api/v2/playlist/{uuid}": {
			"get": {
				"summary": "Get playlist metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "86694fd0-cdce-11e8-8cff-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist response",
						"schema": { "$ref": "#/definitions/PlaylistResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.8/playlist/{uuid}": {
			"get": {
				"summary": "Get playlist metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "86694fd0-cdce-11e8-8cff-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist response",
						"schema": { "$ref": "#/definitions/PlaylistResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get playlist by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A playlist identifier",
						"type": "string",
						"default": "37i9dQZF1DWXJfnUiYjUKT"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2). Required for apple-music and amazon",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist response",
						"schema": { "$ref": "#/definitions/PlaylistResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No playlist found for this platform identifier" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.8/playlist/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get playlist by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A playlist identifier",
						"type": "string",
						"default": "37i9dQZF1DWXJfnUiYjUKT"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2). Required for apple-music and amazon",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist response",
						"schema": { "$ref": "#/definitions/PlaylistResponse2" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No playlist found for this platform identifier" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/curators/{platform}": {
			"get": {
				"summary": "Get curators by platform",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A playlist owner collection response",
						"schema": { "$ref": "#/definitions/OwnerCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Platform not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/by-curator/{platform}/{curatorIdentifier}": {
			"get": {
				"summary": "Get playlists by curator",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "curatorIdentifier",
						"in": "path",
						"required": true,
						"description": "A playlist curator identifier",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2). Required for apple-music and amazon",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : audience, name",
						"type": "string",
						"default": "name"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist collection response",
						"schema": { "$ref": "#/definitions/PlaylistCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Curator not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.20/playlist/by-curator/{platform}/{curatorIdentifier}": {
			"get": {
				"summary": "Get playlists by curator",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "curatorIdentifier",
						"in": "path",
						"required": true,
						"description": "A playlist curator identifier",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2). Required for apple-music and amazon",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : audience, name",
						"type": "string",
						"default": "name"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist collection response",
						"schema": { "$ref": "#/definitions/PlaylistCollectionResponse2" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Curator not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/by-type/{platform}/{type}": {
			"get": {
				"summary": "Get playlists by type",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "type",
						"in": "path",
						"required": true,
						"description": "A playlist type (algorithmic, charts, curators_listeners, editorial, algotorial, major, radios, this_is.)",
						"type": "string",
						"default": "editorial"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2). Required for apple-music and amazon",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : audience, name",
						"type": "string",
						"default": "name"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist collection response",
						"schema": { "$ref": "#/definitions/PlaylistCollectionResponse3" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/{uuid}/audience": {
			"get": {
				"summary": "Get audience",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"required": false,
						"description": "Period start date (Format YYYY-MM-DD). Example : 2019-01-31",
						"type": "string",
						"default": "2020-10-01"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Period end date (Format YYYY-MM-DD). Example : 2019-01-31",
						"type": "string",
						"default": "2020-10-10"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist audience plots collection",
						"schema": { "$ref": "#/definitions/AudiencePlotCollectionResponse2" }
					},
					"400": { "description": "Invalid period" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.20/playlist/{uuid}/audience": {
			"get": {
				"summary": "Get audience",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"required": false,
						"description": "Period start date (Format YYYY-MM-DD). Example : 2019-01-31",
						"type": "string",
						"default": "2020-10-01"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Period end date (Format YYYY-MM-DD). Example : 2019-01-31",
						"type": "string",
						"default": "2020-10-10"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist audience plots collection",
						"schema": { "$ref": "#/definitions/AudiencePlotCollectionResponse3" }
					},
					"400": { "description": "Invalid period" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.20/playlist/by-type/{platform}/{type}": {
			"get": {
				"summary": "Get playlists by type",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "type",
						"in": "path",
						"required": true,
						"description": "A playlist type (algorithmic, charts, curators_listeners, editorial, algotorial, major, radios, this_is.)",
						"type": "string",
						"default": "editorial"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2). Required for apple-music and amazon",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : audience, name",
						"type": "string",
						"default": "name"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist collection response",
						"schema": { "$ref": "#/definitions/PlaylistCollectionResponse4" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/{uuid}/tracks/latest": {
			"get": {
				"summary": "Get tracklisting - latest",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist track collection response",
						"schema": { "$ref": "#/definitions/TrackCollectionResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.20/playlist/{uuid}/tracks/latest": {
			"get": {
				"summary": "Get tracklisting - latest",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A playlist track collection response",
						"schema": { "$ref": "#/definitions/TrackCollectionResponse4" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/{uuid}/available-tracklistings": {
			"get": {
				"summary": "Get tracklisting dates",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Optional period filter (YYYY-MM-DD format)",
						"type": "string",
						"default": "2020-10-10",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$"
					},
					{
						"name": "period",
						"in": "query",
						"required": false,
						"description": "Number of historical days (max. 90)",
						"type": "integer",
						"default": "30"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A playlist track listing dates collection response",
						"schema": { "$ref": "#/definitions/TracklistingDateCollectionResponse" }
					},
					"400": { "description": "Invalid date provided" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.20/playlist/{uuid}/available-tracklistings": {
			"get": {
				"summary": "Get tracklisting dates",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Optional period filter (YYYY-MM-DD format)",
						"type": "string",
						"default": "2020-10-10",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$"
					},
					{
						"name": "period",
						"in": "query",
						"required": false,
						"description": "Number of historical days (max. 90)",
						"type": "integer",
						"default": "30"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A playlist track listing dates collection response",
						"schema": { "$ref": "#/definitions/TracklistingDateCollectionResponse2" }
					},
					"400": { "description": "Invalid date provided" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/playlist/{uuid}/tracks/{datetime}": {
			"get": {
				"summary": "Get tracklisting for a date",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "datetime",
						"in": "path",
						"required": true,
						"description": "A ranking date (ATOM format)",
						"type": "string",
						"default": "2020-10-15T05:25:01+00:00",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A playlist track collection response",
						"schema": { "$ref": "#/definitions/TrackCollectionResponse3" }
					},
					"400": { "description": "Invalid date provided" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2.20/playlist/{uuid}/tracks/{datetime}": {
			"get": {
				"summary": "Get tracklisting for a date",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A playlist UUID",
						"type": "string",
						"default": "11e84493-4135-a14e-bca2-a0369fe50396",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "datetime",
						"in": "path",
						"required": true,
						"description": "A ranking date (ATOM format)",
						"type": "string",
						"default": "2020-10-15T05:25:01+00:00",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A playlist track collection response",
						"schema": { "$ref": "#/definitions/TrackCollectionResponse4" }
					},
					"400": { "description": "Invalid date provided" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Playlist not found" }
				},
				"tags": ["Playlist"]
			}
		},
		"/api/v2/radio": {
			"get": {
				"summary": "Get radios",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A radio collection response",
						"schema": { "$ref": "#/definitions/RadioCollectionResponse" }
					}
				},
				"tags": ["Radio"]
			}
		},
		"/api/v2.18/radio": {
			"get": {
				"summary": "Get radios",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A radio collection response",
						"schema": { "$ref": "#/definitions/RadioCollectionResponse2" }
					}
				},
				"tags": ["Radio"]
			}
		},
		"/api/v2.22/radio": {
			"get": {
				"summary": "Get radios",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A radio collection response",
						"schema": { "$ref": "#/definitions/RadioCollectionResponse3" }
					}
				},
				"tags": ["Radio"]
			}
		},
		"/api/v2/radio/by-country/{countryCode}": {
			"get": {
				"summary": "Get radios by country",
				"parameters": [
					{
						"name": "countryCode",
						"in": "path",
						"required": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": "GB"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A radio collection response",
						"schema": { "$ref": "#/definitions/RadioCollectionResponse" }
					},
					"400": { "description": "Invalid request" }
				},
				"tags": ["Radio"]
			}
		},
		"/api/v2.18/radio/by-country/{countryCode}": {
			"get": {
				"summary": "Get radios by country",
				"parameters": [
					{
						"name": "countryCode",
						"in": "path",
						"required": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": "GB"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A radio collection response",
						"schema": { "$ref": "#/definitions/RadioCollectionResponse2" }
					},
					"400": { "description": "Invalid request" }
				},
				"tags": ["Radio"]
			}
		},
		"/api/v2.22/radio/by-country/{countryCode}": {
			"get": {
				"summary": "Get radios by country",
				"parameters": [
					{
						"name": "countryCode",
						"in": "path",
						"required": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": "GB"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A radio collection response",
						"schema": { "$ref": "#/definitions/RadioCollectionResponse3" }
					},
					"400": { "description": "Invalid request" }
				},
				"tags": ["Radio"]
			}
		},
		"/api/v2/radio/{slug}/live-feed": {
			"get": {
				"summary": "Get live feed",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"required": true,
						"description": "A radio slug",
						"type": "string",
						"default": "bbc-2",
						"pattern": "^[a-z0-9-]+$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A live feed collection response",
						"schema": { "$ref": "#/definitions/LiveFeedCollectionResponse" }
					}
				},
				"tags": ["Radio"]
			}
		},
		"/api/v2/referential/platforms": {
			"get": {
				"summary": "Get platforms",
				"responses": {
					"200": {
						"description": "A platform collection response",
						"schema": { "$ref": "#/definitions/PlatformCollectionResponse" }
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/referential/platforms/social": {
			"get": {
				"summary": "Get platforms for audience data",
				"responses": {
					"200": {
						"description": "A social platforms collection response",
						"schema": { "$ref": "#/definitions/PlatformCollectionResponse" }
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/referential/platforms/streaming": {
			"get": {
				"summary": "Get platforms for streaming data",
				"responses": {
					"200": {
						"description": "A streaming platforms collection response",
						"schema": { "$ref": "#/definitions/PlatformCollectionResponse" }
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/chart/song/platforms": {
			"get": {
				"summary": "Get platforms for song charts",
				"responses": {
					"200": {
						"description": "A chart song platforms collection response",
						"schema": { "$ref": "#/definitions/PlatformCollectionResponse" }
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/chart/album/platforms": {
			"get": {
				"summary": "Get platforms for album charts",
				"responses": {
					"200": {
						"description": "A chart album platforms collection response",
						"schema": { "$ref": "#/definitions/PlatformCollectionResponse" }
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/playlist/platforms": {
			"get": {
				"summary": "Get platforms for playlist data",
				"responses": {
					"200": {
						"description": "A playlist platforms collection response",
						"schema": { "$ref": "#/definitions/PlatformCollectionResponse" }
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/radio/countries": {
			"get": {
				"summary": "Get radio country list",
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A country collection response",
						"schema": { "$ref": "#/definitions/CountryCollectionResponse" }
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/top-artist/referential/cities/{countryCode}": {
			"get": {
				"summary": "Get cities for artist ranking",
				"parameters": [
					{
						"name": "countryCode",
						"in": "path",
						"required": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string",
						"default": "FR"
					},
					{
						"name": "searchCity",
						"in": "query",
						"required": false,
						"description": "Search city filter",
						"type": "string",
						"default": "Paris"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A City ranking collection response",
						"schema": { "$ref": "#/definitions/CityCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					}
				},
				"tags": ["Referential"]
			}
		},
		"/api/v2/artist/search/{term}": {
			"get": {
				"summary": "Search artist by name",
				"parameters": [
					{
						"name": "term",
						"in": "path",
						"required": true,
						"description": "A name or an identifier",
						"type": "string",
						"default": "Billie Eilish"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 20)",
						"type": "integer",
						"default": 20,
						"maximum": 20,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An artist collection response with the 20 most pertinent artists",
						"schema": { "$ref": "#/definitions/ArtistCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No artist found for this term" }
				},
				"tags": ["Search"]
			}
		},
		"/api/v2/song/search/{term}": {
			"get": {
				"summary": "Search song by name",
				"parameters": [
					{
						"name": "term",
						"in": "path",
						"required": true,
						"description": "A name or an identifier",
						"type": "string",
						"default": "let\u2019s dance david bowie"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 20)",
						"type": "integer",
						"default": 20,
						"maximum": 20,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A song collection response with the 20 most pertinent songs",
						"schema": { "$ref": "#/definitions/SongCollectionResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No song found for this term" }
				},
				"tags": ["Search"]
			}
		},
		"/api/v2/playlist/search/{term}": {
			"get": {
				"summary": "Search playlist by name",
				"parameters": [
					{
						"name": "term",
						"in": "path",
						"required": true,
						"description": "A name or an identifier",
						"type": "string",
						"default": "rap caviar"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 20)",
						"type": "integer",
						"default": 20,
						"maximum": 20,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A playlist collection response with the 20 most pertinent playlists",
						"schema": { "$ref": "#/definitions/PlaylistCollectionResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No song found for this term" }
				},
				"tags": ["Search"]
			}
		},
		"/api/v2/search/external/url": {
			"get": {
				"summary": "Get Soundcharts URL from platform URL",
				"parameters": [
					{
						"name": "platformUrl",
						"in": "query",
						"required": true,
						"description": "Url platform encoded",
						"type": "string",
						"default": "https://open.spotify.com/artist/6qqNVTkY8uBg9cP3Jd7DAH"
					}
				],
				"responses": {
					"200": {
						"description": "Get Soundcharts URL using a platform URL",
						"schema": { "$ref": "#/definitions/ResolveExternalUrlResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "No Soundcharts url found for this platform url" }
				},
				"tags": ["Search"]
			}
		},
		"/api/v2/song/{uuid}": {
			"get": {
				"summary": "Get song metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Song response",
						"schema": { "$ref": "#/definitions/SongResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.8/song/{uuid}": {
			"get": {
				"summary": "Get song metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Song response",
						"schema": { "$ref": "#/definitions/SongResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.25/song/{uuid}": {
			"get": {
				"summary": "Get song metadata",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A Song response",
						"schema": { "$ref": "#/definitions/SongResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/by-isrc/{isrc}": {
			"get": {
				"summary": "Get song by ISRC",
				"parameters": [
					{
						"name": "isrc",
						"in": "path",
						"required": true,
						"description": "An ISRC code",
						"type": "string",
						"default": "USAT22003425"
					}
				],
				"responses": {
					"200": {
						"description": "A song response",
						"schema": { "$ref": "#/definitions/SongResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" },
					"410": { "description": "ISRC Blacklisted due to multiple tracks identified from DSP" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.8/song/by-isrc/{isrc}": {
			"get": {
				"summary": "Get song by ISRC",
				"parameters": [
					{
						"name": "isrc",
						"in": "path",
						"required": true,
						"description": "An ISRC code",
						"type": "string",
						"default": "USAT22003425"
					}
				],
				"responses": {
					"200": {
						"description": "A song response",
						"schema": { "$ref": "#/definitions/SongResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" },
					"410": { "description": "ISRC Blacklisted due to multiple tracks identified from DSP" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.25/song/by-isrc/{isrc}": {
			"get": {
				"summary": "Get song by ISRC",
				"parameters": [
					{
						"name": "isrc",
						"in": "path",
						"required": true,
						"description": "An ISRC code",
						"type": "string",
						"default": "USAT22003425"
					}
				],
				"responses": {
					"200": {
						"description": "A song response",
						"schema": { "$ref": "#/definitions/SongResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" },
					"410": { "description": "ISRC Blacklisted due to multiple tracks identified from DSP" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get song by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A song platform Identifier.",
						"type": "string",
						"default": "7A9rdAz2M6AjRwOa34jxIP"
					}
				],
				"responses": {
					"200": {
						"description": "A song response",
						"schema": { "$ref": "#/definitions/SongResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" },
					"410": { "description": "ISRC Blacklisted due to multiple tracks identified from DSP" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.8/song/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get song by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A song platform Identifier.",
						"type": "string",
						"default": "7A9rdAz2M6AjRwOa34jxIP"
					}
				],
				"responses": {
					"200": {
						"description": "A song response",
						"schema": { "$ref": "#/definitions/SongResponse2" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" },
					"410": { "description": "ISRC Blacklisted due to multiple tracks identified from DSP" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.25/song/by-platform/{platform}/{identifier}": {
			"get": {
				"summary": "Get song by platform ID",
				"parameters": [
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A song platform Identifier.",
						"type": "string",
						"default": "7A9rdAz2M6AjRwOa34jxIP"
					}
				],
				"responses": {
					"200": {
						"description": "A song response",
						"schema": { "$ref": "#/definitions/SongResponse3" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" },
					"410": { "description": "ISRC Blacklisted due to multiple tracks identified from DSP" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/identifiers": {
			"get": {
				"summary": "Get IDs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "An Identifier collection response",
						"schema": { "$ref": "#/definitions/SongIdentifierCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/albums": {
			"get": {
				"summary": "Get albums",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Filter result album list. Available values are :all, album, single, compil",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : title, releaseDate",
						"type": "string",
						"default": "title"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "An song album collection response",
						"schema": { "$ref": "#/definitions/AlbumCollectionResponse5" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/tiktok/musics": {
			"get": {
				"summary": "Get TikTok IDs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A TikTok music collection response",
						"schema": { "$ref": "#/definitions/MusicCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/youtube/videos": {
			"get": {
				"summary": "Get YouTube IDs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with YouTube videos",
						"schema": { "$ref": "#/definitions/VideoCollectionResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.16/song/{uuid}/youtube/videos": {
			"get": {
				"summary": "Get YouTube IDs",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with YouTube videos",
						"schema": { "$ref": "#/definitions/VideoCollectionResponse2" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/audience/{platform}": {
			"get": {
				"summary": "Get audience",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					},
					{
						"name": "identifier",
						"in": "query",
						"required": false,
						"description": "Optional song identifier (example : 2Fxmhks0bxGSBdJ92vM42m)",
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "A song response with platform stream for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/spotify/stream": {
			"get": {
				"summary": "Get Spotify streams",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with Spotify stream for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse2" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.24/song/{uuid}/spotify/stream": {
			"get": {
				"summary": "Get Spotify streams",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with Spotify stream for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/youtube/views": {
			"get": {
				"summary": "Get YouTube views",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with YouTube views for a period",
						"schema": { "$ref": "#/definitions/YoutubeViewsPlotCollectionResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/youtube/views/video/{identifier}": {
			"get": {
				"summary": "Get YouTube views by ID (deprecated)",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A YouTube videoID.",
						"type": "string",
						"default": "DyDfgMOUjCI"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with YouTube views by video id for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse2" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/shazam/count": {
			"get": {
				"summary": "Get Shazam count",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with shazam count for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse2" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.24/song/{uuid}/shazam/count": {
			"get": {
				"summary": "Get Shazam count",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with shazam count for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/spotify/identifier/popularity": {
			"get": {
				"summary": "Get Spotify popularity",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with Spotify popularity for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/spotify/popularity": {
			"get": {
				"summary": "Get Spotify popularity (deprecated)",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2021-07-01"
					}
				],
				"responses": {
					"200": {
						"description": "A song response with Spotify popularity for a period",
						"schema": { "$ref": "#/definitions/SongPlotCollectionResponse2" }
					},
					"400": { "description": "Invalid platform code" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/charts/ranks/{platform}": {
			"get": {
				"summary": "Get chart entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A song chart platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "currentOnly",
						"in": "query",
						"description": "Get only the current positions in charts with 1, or the current and past positions with 0.",
						"type": "integer",
						"default": 1
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, rankDate",
						"type": "string",
						"default": "position"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "asc"
					}
				],
				"responses": {
					"200": {
						"description": "A song rank collection response",
						"schema": { "$ref": "#/definitions/RankCollectionResponse4" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/playlist/current/{platform}": {
			"get": {
				"summary": "Get playlist entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "type",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A playlist type. Available values are : \u0027all\u0027 or one of editorial, algorithmic, algotorial, major, charts, curators_listeners, radios, this_is",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, positionDate, entryDate, subscriberCount",
						"type": "string",
						"default": "entryDate"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "desc"
					}
				],
				"responses": {
					"200": {
						"description": "A song playlist position collection response",
						"schema": { "$ref": "#/definitions/PositionCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2.20/song/{uuid}/playlist/current/{platform}": {
			"get": {
				"summary": "Get playlist entries",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "platform",
						"in": "path",
						"required": true,
						"description": "A playlist platform code",
						"type": "string",
						"default": "spotify"
					},
					{
						"name": "type",
						"in": "query",
						"allowEmptyValue": true,
						"required": false,
						"description": "A playlist type. Available values are : \u0027all\u0027 or one of editorial, algorithmic, algotorial, major, charts, curators_listeners, radios, this_is",
						"type": "string",
						"default": "all"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Sort criteria. Available values are : position, positionDate, entryDate, subscriberCount",
						"type": "string",
						"default": "entryDate"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort order. Available values are : asc, desc",
						"type": "string",
						"default": "desc"
					}
				],
				"responses": {
					"200": {
						"description": "A song playlist position collection response",
						"schema": { "$ref": "#/definitions/PositionCollectionResponse2" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/broadcasts": {
			"get": {
				"summary": "Get radio spins",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "radioSlugs",
						"in": "query",
						"description": "Radio slugs separed with comma. Example : radio-1,radio-2,radio-3",
						"type": "string",
						"default": "bbc-2,bbc-london"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "Period start date (Format ATOM). Example : 2019-01-01T00:00:00Z",
						"type": "string"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "Period end date. You can leave this field empty to get last broadcasts. Example : 2019-01-01T00:00:00Z",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Broadcast Collection response",
						"schema": { "$ref": "#/definitions/BroadcastCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/broadcast-groups": {
			"get": {
				"summary": "Get radio spin count",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A Song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "radioSlugs",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Radio slugs separed with comma. Example : radio-1,radio-2,radio-3",
						"type": "string",
						"default": "bbc-2,bbc-london"
					},
					{
						"name": "countryCode",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Country code (2 letters ISO 3166-2, example: \u0027US\u0027, full list on https://en.wikipedia.org/wiki/ISO_3166-2)",
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period start date (format YYYY-MM-DD), period cannot exceed 90 days",
						"type": "string",
						"default": ""
					},
					{
						"name": "endDate",
						"in": "query",
						"allowEmptyValue": true,
						"description": "Optional period end date (format YYYY-MM-DD), leave empty to use latest 90 days",
						"type": "string",
						"default": "2020-10-10"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Broadcast Collection response",
						"schema": { "$ref": "#/definitions/BroadcastCollectionResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" }
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/song/{uuid}/sources/add": {
			"post": {
				"summary": "Add links",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"description": "A song UUID",
						"type": "string",
						"default": "7d534228-5165-11e9-9375-549f35161576",
						"pattern": "^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"urls": {
									"items": {
										"example": "https://open.spotify.com/track/2Fxmhks0bxGSBdJ92vM42m",
										"type": "string"
									},
									"type": "array"
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "An Song response",
						"schema": { "$ref": "#/definitions/SongResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Song not found" },
					"405": {
						"description": "Sandbox only. This operation is not allowed on sandbox environment"
					}
				},
				"tags": ["Song"]
			}
		},
		"/api/v2/tiktok/music/{identifier}": {
			"get": {
				"summary": "Get music",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A music identifier",
						"type": "string",
						"default": "6955510506778020614",
						"pattern": "\\d+"
					}
				],
				"responses": {
					"200": {
						"description": "A Music response",
						"schema": { "$ref": "#/definitions/MusicResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Music not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/music/{identifier}/video/volume": {
			"get": {
				"summary": "Get music video count",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A music identifier",
						"type": "string",
						"default": "6955510506778020614",
						"pattern": "[0-9]+"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Optional period filter (YYYY-MM-DD format)",
						"type": "string",
						"default": "2021-05-04",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$"
					},
					{
						"name": "period",
						"in": "query",
						"required": false,
						"description": "Number of historical days (max. 90)",
						"type": "integer",
						"default": "30"
					}
				],
				"responses": {
					"200": {
						"description": "A music videos volume plots collection",
						"schema": { "$ref": "#/definitions/VideoVolumePlotCollectionResponse" }
					},
					"400": { "description": "Invalid period" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Music not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/music/{identifier}/videos": {
			"get": {
				"summary": "Get music videos",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A music identifier",
						"type": "string",
						"default": "6955510506778020614",
						"pattern": "[0-9]+"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A music videos collection",
						"schema": { "$ref": "#/definitions/VideoCollectionResponse3" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Music not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/user/{username}": {
			"get": {
				"summary": "Get user",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"required": true,
						"description": "A user username",
						"type": "string",
						"default": "billieeilish"
					}
				],
				"responses": {
					"200": {
						"description": "A User response",
						"schema": { "$ref": "#/definitions/UserResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "User not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/user/{username}/videos": {
			"get": {
				"summary": "Get user videos",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"required": true,
						"description": "A user username",
						"type": "string",
						"default": "billieeilish"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A videos collection by user",
						"schema": { "$ref": "#/definitions/UserVideoCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "User not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/user/{username}/audience": {
			"get": {
				"summary": "Get user audience (deprecated)",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"required": true,
						"description": "A user username",
						"type": "string",
						"default": "billieeilish"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Optional period filter (YYYY-MM-DD format)",
						"type": "string",
						"default": "2021-05-04",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$"
					},
					{
						"name": "period",
						"in": "query",
						"required": false,
						"description": "Number of historical days (max. 90)",
						"type": "integer",
						"default": "30"
					}
				],
				"responses": {
					"200": {
						"description": "A user audience collection",
						"schema": { "$ref": "#/definitions/UserAudienceCollectionResponse" }
					},
					"400": { "description": "Invalid period" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "User not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2.11/tiktok/user/{username}/audience": {
			"get": {
				"summary": "Get user audience (deprecated)",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"required": true,
						"description": "A user username",
						"type": "string",
						"default": "billieeilish"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Optional period filter (YYYY-MM-DD format)",
						"type": "string",
						"default": "2021-05-04",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$"
					},
					{
						"name": "period",
						"in": "query",
						"required": false,
						"description": "Number of historical days (max. 90)",
						"type": "integer",
						"default": "30"
					}
				],
				"responses": {
					"200": {
						"description": "A user audience collection",
						"schema": { "$ref": "#/definitions/UserAudienceCollectionResponse2" }
					},
					"400": { "description": "Invalid period" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "User not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/video/{identifier}": {
			"get": {
				"summary": "Get video",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A video identifier",
						"type": "string",
						"default": "6955510575514356998",
						"pattern": "\\d+"
					}
				],
				"responses": {
					"200": {
						"description": "A Video response",
						"schema": { "$ref": "#/definitions/VideoResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Video not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/video/{identifier}/audience": {
			"get": {
				"summary": "Get video audience",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"description": "A video identifier",
						"type": "string",
						"default": "6955510575514356998",
						"pattern": "[0-9]+"
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"description": "Optional period filter (YYYY-MM-DD format)",
						"type": "string",
						"default": "2021-05-04",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$"
					},
					{
						"name": "period",
						"in": "query",
						"required": false,
						"description": "Number of historical days (max. 90)",
						"type": "integer",
						"default": "30"
					}
				],
				"responses": {
					"200": {
						"description": "A video audience collection",
						"schema": { "$ref": "#/definitions/VideoAudienceCollectionResponse" }
					},
					"400": { "description": "Invalid period" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "Video not found" }
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/music/urls/add": {
			"post": {
				"summary": "Add music links",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"urls": {
									"items": {
										"example": "https://www.tiktok.com/music/COPYCAT-253517365043204097?lang=fr",
										"type": "string"
									},
									"type": "array"
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "An UrlsSubmitted response",
						"schema": { "$ref": "#/definitions/UrlsSubmittedResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"405": {
						"description": "Sandbox only. This operation is not allowed on sandbox environment"
					}
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/tiktok/user/urls/add": {
			"post": {
				"summary": "Add user links",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "JSON Payload",
						"schema": {
							"properties": {
								"urls": {
									"items": {
										"example": "https://www.tiktok.com/@billieeilish?lang=fr",
										"type": "string"
									},
									"type": "array"
								}
							},
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "An UrlsSubmitted response",
						"schema": { "$ref": "#/definitions/UrlsSubmittedResponse" }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"405": {
						"description": "Sandbox only. This operation is not allowed on sandbox environment"
					}
				},
				"tags": ["TikTok"]
			}
		},
		"/api/v2/user/{email}/blocklist/artists": {
			"get": {
				"summary": "Get blocklists artists",
				"parameters": [
					{
						"name": "email",
						"in": "path",
						"required": true,
						"description": "url encoded email",
						"type": "string",
						"default": "api-sandbox@soundcharts.com",
						"pattern": "^[a-zA-Z0-9.!#$%\u0026\\\u0027*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Blocklist Artist Collection response",
						"schema": { "$ref": "#/definitions/ArtistCollectionResponse2" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "User not found in the team" }
				},
				"tags": ["User"]
			}
		},
		"/api/v2/user/{email}/blocklist/songs": {
			"get": {
				"summary": "Get blocklists songs",
				"parameters": [
					{
						"name": "email",
						"in": "path",
						"required": true,
						"description": "url_encoded email",
						"type": "string",
						"default": "api-sandbox@soundcharts.com",
						"pattern": "^[a-zA-Z0-9.!#$%\u0026\\\u0027*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Blocklist Song Collection response",
						"schema": { "$ref": "#/definitions/SongCollectionResponse4" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "User not found in the team" }
				},
				"tags": ["User"]
			}
		},
		"/api/v2/user/{email}/blocklist/labels": {
			"get": {
				"summary": "Get blocklists labels",
				"parameters": [
					{
						"name": "email",
						"in": "path",
						"required": true,
						"description": "url_encoded email",
						"type": "string",
						"default": "api-sandbox@soundcharts.com",
						"pattern": "^[a-zA-Z0-9.!#$%\u0026\\\u0027*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Get results starting from position",
						"type": "integer",
						"default": 0,
						"minimum": 0
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results (max. 100)",
						"type": "integer",
						"default": 100,
						"maximum": 100,
						"minimum": 1
					}
				],
				"responses": {
					"200": {
						"description": "A Blocklist Label Collection response",
						"schema": { "$ref": "#/definitions/LabelCollectionResponse" }
					},
					"401": { "description": "You are not logged in" },
					"403": {
						"description": "This endpoint is not included in your current plan, reach out to help@soundcharts.com if you want access."
					},
					"404": { "description": "User not found in the team" }
				},
				"tags": ["User"]
			}
		},
		"/api/v2/swagger.json": { "get": { "responses": { "default": { "description": "" } } } },
		"/api/v2/doc.json": { "get": { "responses": { "default": { "description": "" } } } },
		"/api/v2/doc": { "get": { "responses": { "default": { "description": "" } } } }
	},
	"definitions": {
		"AlbumResponse": {
			"title": "Album",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Album" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumResponse2": {
			"title": "Album",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Album2" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumResponse3": {
			"title": "Album",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Album3" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumIdentifierCollectionResponse": {
			"title": "Album Identifier Collection",
			"properties": {
				"related": { "$ref": "#/definitions/AlbumLight" },
				"items": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumTrackCollectionResponse": {
			"properties": {
				"related": { "$ref": "#/definitions/AlbumLight2" },
				"items": { "items": { "$ref": "#/definitions/AlbumTrack" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumTrackCollectionResponse2": {
			"title": "Album Track Collection",
			"properties": {
				"related": { "$ref": "#/definitions/AlbumLight" },
				"items": { "items": { "$ref": "#/definitions/AlbumTrack" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RankCollectionResponse": {
			"title": "Album Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/AlbumLight2" },
				"items": { "items": { "$ref": "#/definitions/Rank" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RankCollectionResponse2": {
			"title": "Album Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/AlbumLight" },
				"items": { "items": { "$ref": "#/definitions/Rank" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ArtistResponse": {
			"title": "Artist",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Artist" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ArtistResponse2": {
			"title": "Artist",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Artist2" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ArtistCollectionResponse": {
			"title": "Artist Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ArtistIdentifierCollectionResponse": {
			"title": "Artist Identifier Collection",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongCollectionResponse": {
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/SongLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongCollectionResponse2": {
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/SongLightReleaseDate" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumCollectionResponse": {
			"title": "Album Collection",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/AlbumLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumCollectionResponse2": {
			"title": "Album Collection",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/AlbumLightReleaseDate" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumCollectionResponse3": {
			"title": "Album Collection",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/AlbumLight2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumCollectionResponse4": {
			"title": "Album Collection",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/TypedAlbumLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AudiencePlotCollectionResponse": {
			"title": "Social Audience Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SocialAccount" },
				"items": { "items": { "$ref": "#/definitions/AudiencePlot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SocialPlotCollectionResponse": {
			"title": "Social Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SocialAccount" },
				"items": { "items": { "$ref": "#/definitions/SocialPlot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"GlobalAudiencePlotCollectionResponse": {
			"title": "Global Audience Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SocialAccount" },
				"items": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"StreamingPlotCollectionResponse": {
			"title": "Streaming Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SocialAccount" },
				"items": { "items": { "$ref": "#/definitions/StreamingPlot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RetentionPlotCollectionResponse": {
			"title": "Retention Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/StreamingAccount" },
				"items": { "items": { "$ref": "#/definitions/RetentionPlot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PopularityPlotCollectionResponse": {
			"title": "Popularity Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/StreamingAccount" },
				"items": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AudienceReportResponse": {
			"title": "Audience Report",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Report" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AudienceReportDateCollectionResponse": {
			"title": "Audience report date Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SocialAccount" },
				"items": { "type": "string", "format": "date-time" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RankCollectionResponse3": {
			"title": "Artist Chart Ranks",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/Rank2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumRankCollectionResponse": {
			"title": "Artist Chart Album Ranks",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/AlbumRank" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumRankCollectionResponse2": {
			"title": "Artist Chart Album Ranks",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/AlbumRank2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TrackCollectionResponse": {
			"title": "Artist Playlist Track Positions",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/Track" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TrackCollectionResponse2": {
			"title": "Artist Playlist Track Positions",
			"properties": {
				"related": { "$ref": "#/definitions/ArtistLight" },
				"items": { "items": { "$ref": "#/definitions/Track2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"BroadcastCollectionResponse": {
			"title": "Broadcast Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Broadcast" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"EventCollectionResponse": {
			"title": "Event Collection",
			"properties": {
				"related": { "$ref": "#/definitions/EventAccount" },
				"items": { "items": { "$ref": "#/definitions/Event" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TopArtistCollectionResponse": {
			"title": "Artist Collection",
			"properties": {
				"related": { "items": { "$ref": "#/definitions/TopRelated" }, "type": "array" },
				"items": { "items": { "$ref": "#/definitions/MetricArtist" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TopSongCollectionResponse": {
			"title": "Song Collection",
			"properties": {
				"related": { "items": { "$ref": "#/definitions/TopRelated" }, "type": "array" },
				"items": { "items": { "$ref": "#/definitions/MetricSong" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TopBroadcastCollectionResponse": {
			"title": "Broadcast Collection",
			"properties": {
				"related": { "items": { "$ref": "#/definitions/TopRelated" }, "type": "array" },
				"items": { "items": { "$ref": "#/definitions/MetricBroadcast" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ChartCollectionResponse": {
			"title": "Chart Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/ChartLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ChartSongRankCollectionResponse": {
			"title": "Song Chart Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/Ranking" },
				"items": { "items": { "$ref": "#/definitions/SongRank" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ChartSongRankCollectionResponse2": {
			"title": "Song Chart Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/Ranking2" },
				"items": { "items": { "$ref": "#/definitions/SongRank2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AvailableRankingCollectionResponse": {
			"title": "Chart Ranking Dates Collection",
			"properties": {
				"related": { "$ref": "#/definitions/ChartLight" },
				"items": { "items": { "type": "string", "format": "date-time" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ChartAlbumRankCollectionResponse": {
			"title": "Album Chart Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/Ranking" },
				"items": { "items": { "$ref": "#/definitions/AlbumRank3" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ChartAlbumRankCollectionResponse2": {
			"properties": {
				"related": { "$ref": "#/definitions/Ranking" },
				"items": { "items": { "$ref": "#/definitions/AlbumRank4" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TiktokMusicRankCollectionResponse": {
			"properties": {
				"related": { "$ref": "#/definitions/TiktokRanking" },
				"items": { "items": { "$ref": "#/definitions/TiktokMusicRank" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AvailableTiktokMusicRankingCollectionResponse": {
			"properties": {
				"related": { "$ref": "#/definitions/TiktokChart" },
				"items": { "items": { "type": "string", "format": "date-time" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ArtistIdentifierCollectionResponse2": {
			"title": "ArtistIdentifier Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/ArtistIdentifier" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"IdentifiersSubmittedResponse": {
			"title": "Identifiers Response",
			"properties": {
				"sent": { "type": "integer" },
				"updated": { "type": "integer" },
				"duplicate": { "type": "integer" },
				"ignored": { "type": "integer" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongIdentifierCollectionResponse": {
			"title": "SongIdentifier Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/SongIdentifier" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PlaylistResponse": {
			"title": "Playlist",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Playlist" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PlaylistResponse2": {
			"title": "Playlist",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Playlist2" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"OwnerCollectionResponse": {
			"title": "Playlist Owner Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/Owner" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PlaylistCollectionResponse": {
			"title": "Playlist Collection",
			"properties": {
				"related": { "$ref": "#/definitions/Owner" },
				"items": { "items": { "$ref": "#/definitions/PlaylistLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PlaylistCollectionResponse2": {
			"title": "Playlist Collection",
			"properties": {
				"related": { "$ref": "#/definitions/Owner" },
				"items": { "items": { "$ref": "#/definitions/PlaylistLight2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PlaylistCollectionResponse3": {
			"title": "Playlist By Type Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/PlaylistLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AudiencePlotCollectionResponse2": {
			"title": "Audience Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/PlaylistLight" },
				"items": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AudiencePlotCollectionResponse3": {
			"title": "Audience Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/PlaylistLight2" },
				"items": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PlaylistCollectionResponse4": {
			"title": "Playlist Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/PlaylistLight2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TrackCollectionResponse3": {
			"title": "Playlist Track Collection",
			"properties": {
				"related": { "$ref": "#/definitions/TrackListing" },
				"items": { "items": { "$ref": "#/definitions/Track3" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TrackCollectionResponse4": {
			"title": "Playlist Track Collection",
			"properties": {
				"related": { "$ref": "#/definitions/TrackListing2" },
				"items": { "items": { "$ref": "#/definitions/Track3" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TracklistingDateCollectionResponse": {
			"title": "Playlist Tracklisting date Collection",
			"properties": {
				"related": { "$ref": "#/definitions/PlaylistLight" },
				"items": { "items": { "type": "string", "format": "date-time" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"TracklistingDateCollectionResponse2": {
			"title": "Playlist Tracklisting date Collection",
			"properties": {
				"related": { "$ref": "#/definitions/PlaylistLight2" },
				"items": { "items": { "type": "string", "format": "date-time" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RadioCollectionResponse": {
			"title": "Radio Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/RadioLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RadioCollectionResponse2": {
			"title": "Radio Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/Radio" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RadioCollectionResponse3": {
			"title": "Radio Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/RadioLight2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"LiveFeedCollectionResponse": {
			"title": "Live feed Collection",
			"properties": {
				"related": { "$ref": "#/definitions/RadioLight" },
				"items": { "items": { "$ref": "#/definitions/SongBroadcast" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PlatformCollectionResponse": {
			"title": "Platform Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/Platform" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"CountryCollectionResponse": {
			"title": "Country Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/Country" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"CityCollectionResponse": {
			"title": "City Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/City" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongCollectionResponse3": {
			"title": "Song Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/SongLightReleaseDate" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ResolveExternalUrlResponse": {
			"properties": {
				"type": { "type": "string" },
				"url": { "type": "string" },
				"uuid": { "type": "string" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongResponse": {
			"title": "Song",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Song" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongResponse2": {
			"title": "Song",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Song2" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongResponse3": {
			"title": "Song",
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/Song3" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongIdentifierCollectionResponse2": {
			"title": "Song Identifier Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"AlbumCollectionResponse5": {
			"title": "Album Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLightReleaseDate" },
				"items": { "items": { "$ref": "#/definitions/AlbumLightDefault" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"MusicCollectionResponse": {
			"title": "TikTok Music Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Music" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"VideoCollectionResponse": {
			"title": "Song Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Video" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"VideoCollectionResponse2": {
			"title": "Song Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Video2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongPlotCollectionResponse": {
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/AudiencePlot2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongPlotCollectionResponse2": {
			"title": "Song Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"YoutubeViewsPlotCollectionResponse": {
			"title": "YouTube Views Plot Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/SongVideoPlot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"RankCollectionResponse4": {
			"title": "Song Rank Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Rank3" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PositionCollectionResponse": {
			"title": "Playlist Position Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Position" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"PositionCollectionResponse2": {
			"title": "Playlist Position Collection",
			"properties": {
				"related": { "$ref": "#/definitions/SongLight" },
				"items": { "items": { "$ref": "#/definitions/Position2" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"MusicResponse": {
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/MusicFull" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"VideoVolumePlotCollectionResponse": {
			"title": "Video volume plot collection",
			"properties": {
				"related": { "$ref": "#/definitions/Music" },
				"items": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"VideoCollectionResponse3": {
			"title": "Video collection",
			"properties": {
				"related": { "$ref": "#/definitions/Music" },
				"items": { "items": { "$ref": "#/definitions/Video3" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"UserResponse": {
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/UserFull" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"UserVideoCollectionResponse": {
			"title": "User Video collection",
			"properties": {
				"related": { "$ref": "#/definitions/User" },
				"items": { "items": { "$ref": "#/definitions/VideoLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"UserAudienceCollectionResponse": {
			"title": "user audience collection",
			"properties": {
				"related": { "$ref": "#/definitions/User" },
				"items": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"UserAudienceCollectionResponse2": {
			"title": "user audience collection",
			"properties": {
				"related": { "$ref": "#/definitions/User" },
				"items": { "items": { "$ref": "#/definitions/UserAudience" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"VideoResponse": {
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/VideoFull" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"VideoAudienceCollectionResponse": {
			"title": "Video audience collection",
			"properties": {
				"related": { "$ref": "#/definitions/Video3" },
				"items": { "items": { "$ref": "#/definitions/VideoAudience" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"UrlsSubmittedResponse": {
			"properties": {
				"type": { "type": "string" },
				"object": { "$ref": "#/definitions/UrlsSubmitted" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"ArtistCollectionResponse2": {
			"title": "Blocklist Artist Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"SongCollectionResponse4": {
			"title": "Blocklist Song Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/SongLight" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"LabelCollectionResponse": {
			"title": "Blocklist Label Collection",
			"properties": {
				"items": { "items": { "$ref": "#/definitions/Label" }, "type": "array" },
				"page": { "$ref": "#/definitions/OffsetPage" },
				"errors": { "items": { "$ref": "#/definitions/Error" }, "type": "array" }
			},
			"type": "object"
		},
		"Album": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"artists": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"upc": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"label": { "type": "string" },
				"totalTracks": { "type": "integer" },
				"copyright": { "type": "string" },
				"imageUrl": { "type": "string" },
				"uuid": { "type": "string" }
			},
			"type": "object"
		},
		"Error": {
			"title": "Error",
			"properties": {
				"key": { "description": "Error key", "type": "string" },
				"code": { "description": "Error code", "type": "integer" },
				"message": { "description": "Error message", "type": "string" }
			},
			"type": "object"
		},
		"Album2": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"slug": { "type": "string" },
				"artists": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"upc": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"label": { "type": "string" },
				"totalTracks": { "type": "integer" },
				"copyright": { "type": "string" }
			},
			"type": "object"
		},
		"Album3": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"slug": { "type": "string" },
				"artists": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"upc": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"label": { "type": "string" },
				"totalTracks": { "type": "integer" },
				"copyright": { "type": "string" },
				"imageUrl": { "type": "string" }
			},
			"type": "object"
		},
		"AlbumLight": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"slug": { "type": "string" }
			},
			"type": "object"
		},
		"Identifier": {
			"properties": {
				"platformName": { "type": "string" },
				"platformCode": { "type": "string" },
				"identifier": { "type": "string" },
				"url": { "type": "string" },
				"default": { "type": "boolean" }
			},
			"type": "object"
		},
		"OffsetPage": {
			"title": "Offset Page",
			"properties": {
				"offset": {
					"description": "The offset of the items returned (as set in the request or by default). Default is 0",
					"type": "integer"
				},
				"limit": {
					"description": "The maximum number of items in the response (as set in the request or by default).",
					"type": "integer"
				},
				"next": {
					"description": "URL to the next page of items. (null if none)",
					"type": "string"
				},
				"previous": {
					"description": "URL to the previous page of items. (null if none)",
					"type": "string"
				},
				"total": {
					"description": "The maximum number of items available to return.",
					"type": "integer"
				}
			},
			"type": "object"
		},
		"AlbumLight2": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"uuid": { "type": "string" }
			},
			"type": "object"
		},
		"AlbumTrack": {
			"properties": {
				"discNumber": { "type": "integer" },
				"number": { "type": "integer" },
				"song": { "$ref": "#/definitions/SongLight" }
			},
			"type": "object"
		},
		"Rank": {
			"title": "Album Chart Rank",
			"properties": {
				"chart": { "$ref": "#/definitions/Chart" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"peakDate": { "type": "string", "format": "date-time" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"current": { "type": "boolean" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" }
			},
			"type": "object"
		},
		"Artist": {
			"properties": {
				"uuid": { "type": "string" },
				"slug": { "type": "string" },
				"name": { "type": "string" },
				"appUrl": { "type": "string" },
				"imageUrl": { "type": "string" },
				"countryCode": { "type": "string" }
			},
			"type": "object"
		},
		"Artist2": {
			"properties": {
				"uuid": { "type": "string" },
				"slug": { "type": "string" },
				"name": { "type": "string" },
				"appUrl": { "type": "string" },
				"imageUrl": { "type": "string" },
				"countryCode": { "type": "string" },
				"genres": { "items": { "type": "string" }, "type": "array" },
				"biography": { "type": "string" },
				"isni": { "type": "string" },
				"ipi": { "type": "string" },
				"gender": { "type": "string" },
				"type": { "type": "string" },
				"birthDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"ArtistLight": {
			"title": "Artist Light",
			"properties": {
				"uuid": { "type": "string" },
				"slug": { "type": "string" },
				"name": { "type": "string" },
				"appUrl": { "type": "string" },
				"imageUrl": { "type": "string" }
			},
			"type": "object"
		},
		"SongLight": {
			"title": "Song Light",
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"creditName": { "type": "string" }
			},
			"type": "object"
		},
		"SongLightReleaseDate": {
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"AlbumLightReleaseDate": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"slug": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"TypedAlbumLight": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"uuid": { "type": "string" },
				"type": { "type": "string" }
			},
			"type": "object"
		},
		"SocialAccount": {
			"title": "Social Account",
			"properties": {
				"artist": { "$ref": "#/definitions/ArtistLight" },
				"platform": { "type": "string" },
				"lastCrawlDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"AudiencePlot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"likeCount": { "type": "integer" },
				"followerCount": { "type": "integer" },
				"followingCount": { "type": "integer" },
				"postCount": { "type": "integer" },
				"viewCount": { "type": "integer" }
			},
			"type": "object"
		},
		"SocialPlot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"value": { "type": "integer" },
				"cityPlots": { "items": { "$ref": "#/definitions/CityPlot" }, "type": "array" },
				"countryPlots": { "items": { "$ref": "#/definitions/CountryPlot" }, "type": "array" }
			},
			"type": "object"
		},
		"Plot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"value": { "type": "integer" }
			},
			"type": "object"
		},
		"StreamingPlot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"value": { "type": "integer" },
				"cityPlots": { "items": { "$ref": "#/definitions/CityPlot" }, "type": "array" },
				"countryPlots": { "items": { "$ref": "#/definitions/CountryPlot" }, "type": "array" }
			},
			"type": "object"
		},
		"StreamingAccount": {
			"title": "Streaming Account",
			"properties": {
				"artist": { "$ref": "#/definitions/ArtistLight" },
				"platform": { "type": "string" },
				"lastCrawlDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"RetentionPlot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"conversionRate": { "type": "number", "format": "float" },
				"followers": { "type": "integer" },
				"listeners": { "type": "integer" }
			},
			"type": "object"
		},
		"Report": {
			"properties": {
				"top": { "$ref": "#/definitions/Top" },
				"audience": { "$ref": "#/definitions/Audience" }
			},
			"type": "object"
		},
		"Rank2": {
			"properties": {
				"chart": { "$ref": "#/definitions/Chart" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"current": { "type": "boolean" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" },
				"song": { "$ref": "#/definitions/SongLight" }
			},
			"type": "object"
		},
		"AlbumRank": {
			"properties": {
				"chart": { "$ref": "#/definitions/Chart" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"current": { "type": "boolean" },
				"oldPosition": { "type": "integer" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" },
				"album": { "$ref": "#/definitions/AlbumLight" }
			},
			"type": "object"
		},
		"AlbumRank2": {
			"properties": {
				"chart": { "$ref": "#/definitions/Chart" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"current": { "type": "boolean" },
				"oldPosition": { "type": "integer" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" },
				"album": { "$ref": "#/definitions/AlbumLight2" }
			},
			"type": "object"
		},
		"Track": {
			"properties": {
				"playlist": { "$ref": "#/definitions/PlaylistLight" },
				"position": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryDate": { "type": "string", "format": "date-time" },
				"positionDate": { "type": "string", "format": "date-time" },
				"peakPositionDate": { "type": "string", "format": "date-time" },
				"song": { "$ref": "#/definitions/SongLight" }
			},
			"type": "object"
		},
		"Track2": {
			"properties": {
				"playlist": { "$ref": "#/definitions/PlaylistLight2" },
				"position": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryDate": { "type": "string", "format": "date-time" },
				"positionDate": { "type": "string", "format": "date-time" },
				"peakPositionDate": { "type": "string", "format": "date-time" },
				"song": { "$ref": "#/definitions/SongLight" }
			},
			"type": "object"
		},
		"Broadcast": {
			"properties": {
				"airedAt": { "type": "string", "format": "date-time" },
				"duration": { "type": "integer" },
				"radio": { "$ref": "#/definitions/RadioLight" }
			},
			"type": "object"
		},
		"EventAccount": {
			"title": "Event Account",
			"properties": {
				"artist": { "$ref": "#/definitions/ArtistLight" },
				"platform": { "type": "string" },
				"lastCrawlDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"Event": {
			"properties": {
				"name": { "type": "string" },
				"date": { "type": "string", "format": "date-time" },
				"type": { "type": "string" },
				"venue": { "$ref": "#/definitions/Venue" },
				"url": { "type": "string" }
			},
			"type": "object"
		},
		"TopRelated": {
			"properties": { "updatedAt": { "type": "string", "format": "date-time" } },
			"type": "object"
		},
		"MetricArtist": {
			"properties": {
				"total": { "type": "integer" },
				"change": { "type": "integer" },
				"percent": { "type": "number", "format": "float" },
				"artist": { "$ref": "#/definitions/ArtistLight" }
			},
			"type": "object"
		},
		"MetricSong": {
			"properties": {
				"total": { "type": "integer" },
				"change": { "type": "integer" },
				"percent": { "type": "number", "format": "float" },
				"song": { "$ref": "#/definitions/SongLight" }
			},
			"type": "object"
		},
		"MetricBroadcast": {
			"properties": {
				"total": { "type": "integer" },
				"change": { "type": "integer" },
				"percent": { "type": "number", "format": "float" },
				"radio": { "$ref": "#/definitions/TopRadio" }
			},
			"type": "object"
		},
		"ChartLight": {
			"properties": {
				"name": { "type": "string" },
				"type": { "type": "string" },
				"slug": { "type": "string" },
				"platform": { "type": "string" },
				"frequency": { "type": "string" },
				"countryCode": { "type": "string" },
				"countryName": { "type": "string" },
				"cityName": { "type": "string" },
				"maxResultsCount": { "type": "integer" },
				"webUrl": { "type": "string" }
			},
			"type": "object"
		},
		"Ranking": {
			"properties": {
				"chart": { "$ref": "#/definitions/ChartLight" },
				"date": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"SongRank": {
			"properties": {
				"song": { "$ref": "#/definitions/SongLight" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" }
			},
			"type": "object"
		},
		"Ranking2": {
			"properties": {
				"chart": { "$ref": "#/definitions/ChartLight2" },
				"date": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"SongRank2": {
			"properties": {
				"song": { "$ref": "#/definitions/SongLight" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"metric": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" }
			},
			"type": "object"
		},
		"AlbumRank3": {
			"properties": {
				"album": { "$ref": "#/definitions/AlbumLight" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" }
			},
			"type": "object"
		},
		"AlbumRank4": {
			"properties": {
				"album": { "$ref": "#/definitions/AlbumLight2" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" }
			},
			"type": "object"
		},
		"TiktokRanking": {
			"properties": {
				"chart": { "$ref": "#/definitions/TiktokChart" },
				"date": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"TiktokMusicRank": {
			"properties": {
				"music": { "$ref": "#/definitions/Music" },
				"song": { "$ref": "#/definitions/SongLight" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" },
				"value": { "title": "Post evolution count", "type": "integer" },
				"oldValue": { "title": "Old post evolution count", "type": "integer" },
				"totalValue": { "title": "Total post count", "type": "integer" },
				"oldTotalValue": { "title": "Old total post count", "type": "integer" }
			},
			"type": "object"
		},
		"TiktokChart": {
			"properties": { "frequency": { "type": "string" }, "type": { "type": "string" } },
			"type": "object"
		},
		"ArtistIdentifier": {
			"properties": {
				"platformCode": { "type": "string" },
				"identifier": { "type": "string" },
				"artist": { "$ref": "#/definitions/ArtistLight" }
			},
			"type": "object"
		},
		"SongIdentifier": {
			"properties": {
				"platformCode": { "type": "string" },
				"identifier": { "type": "string" },
				"song": { "$ref": "#/definitions/SongLight" }
			},
			"type": "object"
		},
		"Playlist": {
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"identifier": { "type": "string" },
				"platform": { "type": "string" },
				"countryCode": { "type": "string" },
				"owner": { "$ref": "#/definitions/Owner" },
				"latestCrawlDate": { "type": "string", "format": "date-time" },
				"latestTrackCount": { "type": "integer" },
				"latestSubscriberCount": { "type": "integer" },
				"type": { "type": "string" },
				"refreshed": { "title": "Refreshed frequence (multiple, daily, weekly)", "type": "string" },
				"availableCountryCodes": { "items": { "type": "string" }, "type": "array" }
			},
			"type": "object"
		},
		"Playlist2": {
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"identifier": { "type": "string" },
				"platform": { "type": "string" },
				"countryCode": { "type": "string" },
				"owner": { "$ref": "#/definitions/Owner" },
				"latestCrawlDate": { "type": "string", "format": "date-time" },
				"latestTrackCount": { "type": "integer" },
				"latestSubscriberCount": { "type": "integer" },
				"type": { "type": "string" },
				"refreshed": { "type": "string" },
				"availableCountryCodes": { "items": { "type": "string" }, "type": "array" },
				"appUrl": { "type": "string" },
				"imageUrl": { "type": "string" }
			},
			"type": "object"
		},
		"Owner": {
			"properties": { "name": { "type": "string" }, "identifier": { "type": "string" } },
			"type": "object"
		},
		"PlaylistLight": {
			"title": "Playlist Light",
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"identifier": { "type": "string" },
				"platform": { "type": "string" },
				"countryCode": { "type": "string" },
				"latestCrawlDate": { "type": "string", "format": "date-time" },
				"latestTrackCount": { "type": "integer" },
				"latestSubscriberCount": { "type": "integer" }
			},
			"type": "object"
		},
		"PlaylistLight2": {
			"title": "Playlist Light",
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"identifier": { "type": "string" },
				"platform": { "type": "string" },
				"countryCode": { "type": "string" },
				"latestCrawlDate": { "type": "string", "format": "date-time" },
				"latestTrackCount": { "type": "integer" },
				"latestSubscriberCount": { "type": "integer" },
				"type": { "type": "string" }
			},
			"type": "object"
		},
		"TrackListing": {
			"properties": {
				"playlist": { "$ref": "#/definitions/PlaylistLight" },
				"date": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"Track3": {
			"properties": {
				"position": { "type": "integer" },
				"song": { "$ref": "#/definitions/SongLight" }
			},
			"type": "object"
		},
		"TrackListing2": {
			"properties": {
				"playlist": { "$ref": "#/definitions/PlaylistLight2" },
				"date": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"RadioLight": {
			"title": "Radio Light",
			"properties": {
				"name": { "description": "Radio name", "type": "string" },
				"slug": { "description": "Radio slug. Used as radio identifier", "type": "string" },
				"countryCode": {
					"description": "Radio country code, 2 letters ISO 3166-2",
					"type": "string"
				},
				"countryName": { "description": "Radio country name", "example": "FR", "type": "string" },
				"cityName": { "description": "Radio city name", "type": "string" },
				"timeZone": { "description": "Radio timezone", "example": "Europe/Paris", "type": "string" }
			},
			"type": "object"
		},
		"Radio": {
			"properties": {
				"name": { "description": "Radio name", "type": "string" },
				"slug": { "description": "Radio slug. Used as radio identifier", "type": "string" },
				"countryCode": {
					"description": "Radio country code, 2 letters ISO 3166-2",
					"type": "string"
				},
				"countryName": { "description": "Radio country name", "example": "FR", "type": "string" },
				"cityName": { "description": "Radio city name", "type": "string" },
				"timeZone": {
					"description": "Radio timezone",
					"example": "Europe/Paris",
					"type": "string"
				},
				"reach": { "description": "Sum of followers on social platforms", "type": "integer" }
			},
			"type": "object"
		},
		"RadioLight2": {
			"properties": {
				"name": { "description": "Radio name", "type": "string" },
				"slug": { "description": "Radio slug. Used as radio identifier", "type": "string" },
				"countryCode": {
					"description": "Radio country code, 2 letters ISO 3166-2",
					"type": "string"
				},
				"countryName": { "description": "Radio country name", "example": "FR", "type": "string" },
				"cityName": { "description": "Radio city name", "type": "string" },
				"timeZone": {
					"description": "Radio timezone",
					"example": "Europe/Paris",
					"type": "string"
				},
				"reach": { "description": "Sum of followers on social platforms", "type": "integer" },
				"firstAiredAt": { "description": "First aired at", "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"SongBroadcast": {
			"properties": {
				"song": { "$ref": "#/definitions/SongLight" },
				"airedAt": { "type": "string", "format": "date-time" },
				"duration": { "type": "integer" }
			},
			"type": "object"
		},
		"Platform": {
			"title": "Platform",
			"properties": {
				"name": { "description": "Platform name", "type": "string" },
				"code": { "description": "Platform code", "type": "string" }
			},
			"type": "object"
		},
		"Country": {
			"properties": { "name": { "type": "string" }, "countryCode": { "type": "string" } },
			"type": "object"
		},
		"City": {
			"properties": {
				"name": { "type": "string" },
				"region": { "type": "string" },
				"countryCode": { "type": "string" },
				"cityKey": { "type": "string" }
			},
			"type": "object"
		},
		"Song": {
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"isrc": { "type": "string" },
				"creditName": { "type": "string" },
				"artists": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"label": { "type": "string" },
				"copyright": { "type": "string" },
				"appUrl": { "type": "string" },
				"imageUrl": { "type": "string" },
				"duration": { "type": "integer" }
			},
			"type": "object"
		},
		"Song2": {
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"isrc": { "$ref": "#/definitions/Isrc" },
				"creditName": { "type": "string" },
				"artists": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"label": { "type": "string" },
				"copyright": { "type": "string" },
				"appUrl": { "type": "string" },
				"imageUrl": { "type": "string" },
				"duration": { "type": "integer" },
				"genres": { "items": { "$ref": "#/definitions/Genre" }, "type": "array" },
				"composers": { "items": { "type": "string" }, "type": "array" }
			},
			"type": "object"
		},
		"Song3": {
			"properties": {
				"uuid": { "type": "string" },
				"name": { "type": "string" },
				"isrc": { "$ref": "#/definitions/Isrc" },
				"creditName": { "type": "string" },
				"artists": { "items": { "$ref": "#/definitions/ArtistLight" }, "type": "array" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"copyright": { "type": "string" },
				"appUrl": { "type": "string" },
				"imageUrl": { "type": "string" },
				"duration": { "type": "integer" },
				"genres": { "items": { "$ref": "#/definitions/Genre" }, "type": "array" },
				"composers": { "items": { "type": "string" }, "type": "array" },
				"producers": { "items": { "type": "string" }, "type": "array" },
				"labels": { "items": { "$ref": "#/definitions/Label2" }, "type": "array" },
				"audio": { "$ref": "#/definitions/Audio" }
			},
			"type": "object"
		},
		"AlbumLightDefault": {
			"properties": {
				"name": { "type": "string" },
				"creditName": { "type": "string" },
				"releaseDate": { "type": "string", "format": "date-time" },
				"uuid": { "type": "string" },
				"default": { "type": "boolean" },
				"type": { "type": "string" }
			},
			"type": "object"
		},
		"Music": {
			"title": "TikTok music",
			"properties": {
				"identifier": { "type": "string" },
				"title": { "type": "string" },
				"authorName": { "type": "string" },
				"url": { "type": "string" },
				"imgUrl": { "type": "string" }
			},
			"type": "object"
		},
		"Video": {
			"title": "Song Video",
			"properties": { "identifier": { "type": "string" }, "url": { "type": "string" } },
			"type": "object"
		},
		"Video2": {
			"title": "Song Video",
			"properties": {
				"identifier": { "type": "string" },
				"url": { "type": "string" },
				"name": { "type": "string" },
				"creditName": { "type": "string" }
			},
			"type": "object"
		},
		"AudiencePlot2": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"plots": { "items": { "$ref": "#/definitions/Plot2" }, "type": "array" }
			},
			"type": "object"
		},
		"SongVideoPlot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"videoPlots": { "items": { "$ref": "#/definitions/Plot" }, "type": "array" }
			},
			"type": "object"
		},
		"Rank3": {
			"title": "Song Chart Rank",
			"properties": {
				"chart": { "$ref": "#/definitions/Chart" },
				"position": { "type": "integer" },
				"positionEvolution": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"peakDate": { "type": "string", "format": "date-time" },
				"entryState": { "type": "string" },
				"entryDate": { "type": "string", "format": "date-time" },
				"rankDate": { "type": "string", "format": "date-time" },
				"oldPosition": { "type": "integer" },
				"current": { "type": "boolean" },
				"timeOnChart": { "type": "integer" },
				"timeOnChartUnit": { "type": "string" }
			},
			"type": "object"
		},
		"Position": {
			"title": "Playlist Position",
			"properties": {
				"playlist": { "$ref": "#/definitions/PlaylistLight" },
				"position": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryDate": { "type": "string", "format": "date-time" },
				"positionDate": { "type": "string", "format": "date-time" },
				"peakPositionDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"Position2": {
			"properties": {
				"playlist": { "$ref": "#/definitions/PlaylistLight2" },
				"position": { "type": "integer" },
				"peakPosition": { "type": "integer" },
				"entryDate": { "type": "string", "format": "date-time" },
				"positionDate": { "type": "string", "format": "date-time" },
				"peakPositionDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"MusicFull": {
			"properties": {
				"identifier": { "type": "string" },
				"title": { "type": "string" },
				"authorName": { "type": "string" },
				"url": { "type": "string" },
				"imgUrl": { "type": "string" },
				"song": { "$ref": "#/definitions/SongLight" },
				"latestCrawlDate": { "type": "string", "format": "date-time" },
				"firstCrawlDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"Video3": {
			"properties": {
				"identifier": { "type": "string" },
				"createdAt": { "type": "string", "format": "date-time" },
				"latestAudience": { "$ref": "#/definitions/VideoAudience" },
				"user": { "$ref": "#/definitions/User" }
			},
			"type": "object"
		},
		"UserFull": {
			"properties": {
				"identifier": { "type": "string" },
				"username": { "type": "string" },
				"latestFollowerCount": { "type": "integer" },
				"latestCrawlDate": { "type": "string", "format": "date-time" },
				"firstCrawlDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"User": {
			"properties": {
				"identifier": { "type": "string" },
				"username": { "type": "string" },
				"lastFollowerCount": { "type": "integer" }
			},
			"type": "object"
		},
		"VideoLight": {
			"properties": {
				"identifier": { "type": "string" },
				"createdAt": { "type": "string", "format": "date-time" },
				"latestAudience": { "$ref": "#/definitions/VideoAudience" }
			},
			"type": "object"
		},
		"UserAudience": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"likeCount": { "type": "integer" },
				"followerCount": { "type": "integer" },
				"followingCount": { "type": "integer" }
			},
			"type": "object"
		},
		"VideoFull": {
			"properties": {
				"identifier": { "type": "string" },
				"createdAt": { "type": "string", "format": "date-time" },
				"latestAudience": { "$ref": "#/definitions/VideoAudience" },
				"user": { "$ref": "#/definitions/User" },
				"latestCrawlDate": { "type": "string", "format": "date-time" },
				"firstCrawlDate": { "type": "string", "format": "date-time" }
			},
			"type": "object"
		},
		"VideoAudience": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"commentCount": { "type": "integer" },
				"likeCount": { "type": "integer" },
				"playCount": { "type": "integer" },
				"shareCount": { "type": "integer" }
			},
			"type": "object"
		},
		"UrlsSubmitted": {
			"properties": {
				"invalidUrls": { "items": { "type": "string" }, "type": "array" },
				"validUrls": { "items": { "type": "string" }, "type": "array" }
			},
			"type": "object"
		},
		"Label": { "properties": { "label": { "type": "string" } }, "type": "object" },
		"Chart": {
			"properties": {
				"name": { "type": "string" },
				"type": { "type": "string" },
				"slug": { "type": "string" },
				"platform": { "type": "string" },
				"frequency": { "type": "string" },
				"countryCode": { "type": "string" },
				"countryName": { "type": "string" },
				"cityName": { "type": "string" },
				"maxResultsCount": { "type": "integer" },
				"webUrl": { "type": "string" }
			},
			"type": "object"
		},
		"CityPlot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"value": { "type": "integer" },
				"countryName": { "type": "string" },
				"countryCode": { "type": "string" },
				"region": { "type": "string" },
				"cityName": { "type": "string" }
			},
			"type": "object"
		},
		"CountryPlot": {
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"value": { "type": "integer" },
				"countryName": { "type": "string" },
				"countryCode": { "type": "string" }
			},
			"type": "object"
		},
		"Top": {
			"properties": {
				"mentions": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"hashtags": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"posts": { "items": { "$ref": "#/definitions/Post" }, "type": "array" },
				"reels": { "items": { "$ref": "#/definitions/Reel" }, "type": "array" }
			},
			"type": "object"
		},
		"Audience": {
			"title": "Audience",
			"properties": {
				"stats": { "$ref": "#/definitions/Stats" },
				"audienceLike": { "$ref": "#/definitions/AudienceDetail" },
				"audienceFollower": { "$ref": "#/definitions/AudienceDetail" },
				"brandsAffinity": { "items": { "type": "string" }, "type": "array" },
				"interests": { "items": { "type": "string" }, "type": "array" },
				"relevantTags": { "items": { "$ref": "#/definitions/RelevantTag" }, "type": "array" }
			},
			"type": "object"
		},
		"Venue": {
			"properties": {
				"name": { "type": "string" },
				"cityName": { "type": "string" },
				"countryCode": { "type": "string" },
				"countryName": { "type": "string" },
				"capacity": { "type": "string" },
				"popularity": { "type": "string" }
			},
			"type": "object"
		},
		"TopRadio": {
			"properties": {
				"name": { "description": "Radio name", "type": "string" },
				"slug": { "description": "Radio slug. Used as radio identifier", "type": "string" },
				"countryCode": {
					"description": "Radio country code, 2 letters ISO 3166-2",
					"type": "string"
				},
				"countryName": { "description": "Radio country name", "example": "FR", "type": "string" },
				"cityName": { "description": "Radio city name", "type": "string" },
				"timeZone": {
					"description": "Radio timezone",
					"example": "Europe/Paris",
					"type": "string"
				},
				"reach": { "description": "Sum of followers on social platforms", "type": "integer" },
				"genres": { "description": "", "items": { "type": "string" }, "type": "array" },
				"trackAge": { "description": "Frontline, catalog, mixed", "type": "string" }
			},
			"type": "object"
		},
		"ChartLight2": {
			"properties": {
				"name": { "type": "string" },
				"type": { "type": "string" },
				"slug": { "type": "string" },
				"platform": { "type": "string" },
				"frequency": { "type": "string" },
				"countryCode": { "type": "string" },
				"countryName": { "type": "string" },
				"cityName": { "type": "string" },
				"maxResultsCount": { "type": "integer" },
				"webUrl": { "type": "string" },
				"metric": { "$ref": "#/definitions/Metric" }
			},
			"type": "object"
		},
		"Isrc": {
			"properties": {
				"value": { "type": "string" },
				"countryCode": { "type": "string" },
				"countryName": { "type": "string" }
			},
			"type": "object"
		},
		"Genre": {
			"properties": {
				"root": { "type": "string" },
				"sub": { "items": { "type": "string" }, "type": "array" }
			},
			"type": "object"
		},
		"Label2": {
			"properties": { "name": { "type": "string" }, "type": { "type": "string" } },
			"type": "object"
		},
		"Audio": {
			"properties": {
				"danceability": { "type": "number", "format": "float" },
				"energy": { "type": "number", "format": "float" },
				"instrumentalness": { "type": "number", "format": "float" },
				"key": { "type": "integer" },
				"liveness": { "type": "number", "format": "float" },
				"loudness": { "type": "number", "format": "float" },
				"mode": { "type": "integer" },
				"speechiness": { "type": "number", "format": "float" },
				"tempo": { "type": "number", "format": "float" },
				"timeSignature": { "type": "integer" },
				"valence": { "type": "number", "format": "float" }
			},
			"type": "object"
		},
		"Plot2": {
			"properties": { "identifier": { "type": "string" }, "value": { "type": "integer" } },
			"type": "object"
		},
		"CodeWeight": {
			"title": "Code Weight",
			"properties": {
				"code": { "type": "string" },
				"weight": { "type": "number", "format": "float" }
			},
			"type": "object"
		},
		"Post": {
			"properties": {
				"likeCount": { "type": "integer" },
				"commentCount": { "type": "integer" },
				"date": { "type": "string", "format": "date-time" },
				"imageUrl": { "type": "string" },
				"url": { "type": "string" },
				"text": { "type": "string" },
				"mentions": { "items": { "type": "string" }, "type": "array" }
			},
			"type": "object"
		},
		"Reel": {
			"title": "Reel",
			"properties": {
				"date": { "type": "string", "format": "date-time" },
				"url": { "type": "string" },
				"text": { "type": "string" },
				"likeCount": { "type": "integer" },
				"commentCount": { "type": "integer" },
				"playCount": { "type": "integer" },
				"mentions": { "items": { "type": "string" }, "type": "array" }
			},
			"type": "object"
		},
		"Stats": {
			"properties": {
				"followerCount": { "type": "integer" },
				"postCount": { "type": "integer" },
				"viewCount": { "type": "integer" },
				"engagementCount": { "type": "integer" },
				"averageLikesPerPost": { "type": "number", "format": "float" },
				"averageCommentsPerPost": { "type": "number", "format": "float" },
				"averageViewsPerPost": { "type": "number", "format": "float" },
				"engagementRate": { "type": "number", "format": "float" },
				"averageReelsPlays": { "type": "integer" }
			},
			"type": "object"
		},
		"AudienceDetail": {
			"title": "Audience Detail",
			"properties": {
				"genders": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"ages": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"gendersPerAge": { "items": { "$ref": "#/definitions/GenderPerAge" }, "type": "array" },
				"ethnicities": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"languages": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"countries": { "items": { "$ref": "#/definitions/CountryWeight" }, "type": "array" },
				"cities": { "items": { "$ref": "#/definitions/CityWeight" }, "type": "array" },
				"notableUsers": { "items": { "$ref": "#/definitions/User2" }, "type": "array" },
				"types": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"credibility": { "type": "number", "format": "float" },
				"credibilityClass": { "type": "string" },
				"reachabilities": { "items": { "$ref": "#/definitions/CodeWeight" }, "type": "array" },
				"notableUsersRatio": { "type": "number", "format": "float" },
				"lookalikes": { "items": { "$ref": "#/definitions/Lookalike" }, "type": "array" },
				"interests": { "items": { "$ref": "#/definitions/AffinityWeight" }, "type": "array" },
				"brandAffinities": { "items": { "$ref": "#/definitions/AffinityWeight" }, "type": "array" }
			},
			"type": "object"
		},
		"RelevantTag": {
			"title": "Relevant Tag",
			"properties": {
				"name": { "type": "string" },
				"distance": { "type": "number", "format": "float" },
				"freq": { "type": "number", "format": "float" }
			},
			"type": "object"
		},
		"Metric": {
			"properties": { "type": { "type": "string" }, "description": { "type": "string" } },
			"type": "object"
		},
		"GenderPerAge": {
			"properties": {
				"code": { "type": "string" },
				"maleWeight": { "type": "number", "format": "float" },
				"femaleWeight": { "type": "number", "format": "float" }
			},
			"type": "object"
		},
		"CountryWeight": {
			"properties": {
				"weight": { "type": "number", "format": "float" },
				"countryName": { "type": "string" },
				"countryCode": { "type": "string" }
			},
			"type": "object"
		},
		"CityWeight": {
			"properties": {
				"weight": { "type": "number", "format": "float" },
				"countryName": { "type": "string" },
				"countryCode": { "type": "string" },
				"region": { "type": "string" },
				"cityName": { "type": "string" }
			},
			"type": "object"
		},
		"User2": {
			"properties": {
				"username": { "type": "string" },
				"fullName": { "type": "string" },
				"followerCount": { "type": "integer" },
				"engagementCount": { "type": "integer" },
				"url": { "type": "string" },
				"imageUrl": { "type": "string" },
				"countryCode": { "type": "string" },
				"countryName": { "type": "string" }
			},
			"type": "object"
		},
		"Lookalike": {
			"title": "Lookalike",
			"properties": {
				"username": { "type": "string" },
				"fullName": { "type": "string" },
				"followerCount": { "type": "integer" },
				"engagementCount": { "type": "integer" },
				"url": { "type": "string" },
				"imageUrl": { "type": "string" },
				"countryCode": { "type": "string" },
				"countryName": { "type": "string" },
				"score": { "type": "number", "format": "float" }
			},
			"type": "object"
		},
		"AffinityWeight": {
			"title": "Affinity Weight",
			"properties": {
				"name": { "type": "string" },
				"weight": { "type": "number", "format": "float" },
				"affinity": { "type": "number", "format": "float" }
			},
			"type": "object"
		}
	},
	"securityDefinitions": {
		"APP_ID": {
			"name": "x-app-id",
			"type": "apiKey",
			"in": "header",
			"description": "Value {APP-ID}"
		},
		"API_KEY": {
			"name": "x-api-key",
			"type": "apiKey",
			"in": "header",
			"description": "Value: {API-KEY}"
		}
	},
	"security": [{ "API_KEY": [] }, { "APP_ID": [] }],
	"host": "customer.api.soundcharts.com",
	"tags": [
		{ "name": "Search" },
		{ "name": "Artist" },
		{ "name": "Song" },
		{ "name": "Album" },
		{ "name": "Chart" },
		{ "name": "Playlist" },
		{ "name": "Radio" },
		{ "name": "TikTok" },
		{ "name": "User" },
		{ "name": "My Library" },
		{ "name": "Referential" }
	]
}
